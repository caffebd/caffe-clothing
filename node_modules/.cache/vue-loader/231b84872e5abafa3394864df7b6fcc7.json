{"remainingRequest":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/caffe-clothing/src/apps/todo/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/caffe-clothing/src/apps/todo/components/TodoList.vue","mtime":1606640365866},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JwoKLyoKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8IFRvRG8gTGlzdCBDb21wb25lbnQKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8CnwgVGFzayBsaXN0ZXIKfAoqLwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIC8vIHRhc2sgbGlzdAogICAgdGFza3M6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlsdGVyOiAnJwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKCd0b2RvLWFwcCcsIFsnbGFiZWxzJ10pLAogICAgdmlzaWJsZVRhc2tzKCkgewogICAgICBpZiAoIXRoaXMuZmlsdGVyKSByZXR1cm4gdGhpcy50YXNrcwoKICAgICAgcmV0dXJuIHRoaXMudGFza3MuZmlsdGVyKCh0KSA9PiB7CiAgICAgICAgcmV0dXJuIEJvb2xlYW4oT2JqZWN0LnZhbHVlcyh0KS5maWx0ZXIoKHByb3ApID0+IHR5cGVvZiBwcm9wID09PSAnc3RyaW5nJykuZmluZCgoaXRlbSkgPT4gaXRlbS5pbmNsdWRlcyh0aGlzLmZpbHRlcikpKQogICAgICB9KQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwTXV0YXRpb25zKCd0b2RvLWFwcCcsIHsKICAgICAgc2V0Q29tcGxldGU6ICd0YXNrQ29tcGxldGVkJywKICAgICAgc2V0SW5jb21wbGV0ZTogJ3Rhc2tJbmNvbXBsZXRlJywKICAgICAgZGVsZXRlVGFzazogJ2RlbGV0ZVRhc2snCiAgICB9KSwKICAgIGdldExhYmVsQ29sb3IoaWQpIHsKICAgICAgY29uc3QgbGFiZWwgPSB0aGlzLmxhYmVscy5maW5kKChsKSA9PiBsLmlkID09PSBpZCkKCiAgICAgIHJldHVybiBsYWJlbCA/IGxhYmVsLmNvbG9yIDogJycKICAgIH0sCiAgICBnZXRMYWJlbFRpdGxlKGlkKSB7CiAgICAgIGNvbnN0IGxhYmVsID0gdGhpcy5sYWJlbHMuZmluZCgobCkgPT4gbC5pZCA9PT0gaWQpCgogICAgICByZXR1cm4gbGFiZWwgPyBsYWJlbC50aXRsZSA6ICcnCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TodoList.vue","sourceRoot":"src/apps/todo/components","sourcesContent":["<template>\n  <v-card class=\"min-w-0\">\n    <!-- <v-text-field\n      v-model=\"filter\"\n      class=\"pa-1 py-2 todo-filter elevation-1\"\n      placeholder=\"Filter tasks\"\n      prepend-inner-icon=\"mdi-magnify\"\n      hide-details\n      block\n      clearable\n      solo\n      flat\n    ></v-text-field> -->\n\n    <v-divider></v-divider>\n\n    <div v-if=\"tasks.length === 0\">\n      <div class=\"px-1 py-6 text-center\">All done! No more tasks!</div>\n    </div>\n\n    <v-slide-y-transition\n      v-else\n      group\n      tag=\"div\"\n    >\n      <div v-for=\"task in visibleTasks\" :key=\"task.id\" class=\"d-flex pa-2 task-item align-center\" >\n        <!-- @click=\"$emit('edit-task', task)\" was in above line-->\n        <v-checkbox\n          :input-value=\"task.completed\"\n          class=\"mt-0 pt-0\"\n          hide-details\n          off-icon=\"mdi-checkbox-blank-circle-outline\"\n          on-icon=\"mdi-checkbox-marked-circle\"\n          @click.stop=\"task.completed ? setIncomplete(task) : setComplete(task)\"\n        ></v-checkbox>\n\n        <div class=\"task-item-content flex-grow-1\" :class=\"{ 'complete': task.completed }\">\n          <div class=\"font-weight-bold\" v-text=\"task.title\"></div>\n          <div v-text=\"task.description\"></div>\n          <div v-text=\"task.date\"></div>\n          <div>\n            <v-chip\n              v-for=\"label in task.labels\"\n              :key=\"label\"\n              :color=\"getLabelColor(label)\"\n              class=\"font-weight-bold mt-1 mr-1\"\n              outlined\n              x-small\n            >\n              {{ getLabelTitle(label) }}\n            </v-chip>\n          </div>\n        </div>\n\n        <!-- <div class=\"d-flex align-center\">\n          <v-btn icon @click.stop=\"deleteTask(task)\">\n            <v-icon>mdi-delete-outline</v-icon>\n          </v-btn>\n        </div> -->\n      </div>\n    </v-slide-y-transition>\n  </v-card>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\n\n/*\n|---------------------------------------------------------------------\n| ToDo List Component\n|---------------------------------------------------------------------\n|\n| Task lister\n|\n*/\nexport default {\n  props: {\n    // task list\n    tasks: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      filter: ''\n    }\n  },\n  computed: {\n    ...mapState('todo-app', ['labels']),\n    visibleTasks() {\n      if (!this.filter) return this.tasks\n\n      return this.tasks.filter((t) => {\n        return Boolean(Object.values(t).filter((prop) => typeof prop === 'string').find((item) => item.includes(this.filter)))\n      })\n    }\n  },\n  methods: {\n    ...mapMutations('todo-app', {\n      setComplete: 'taskCompleted',\n      setIncomplete: 'taskIncomplete',\n      deleteTask: 'deleteTask'\n    }),\n    getLabelColor(id) {\n      const label = this.labels.find((l) => l.id === id)\n\n      return label ? label.color : ''\n    },\n    getLabelTitle(id) {\n      const label = this.labels.find((l) => l.id === id)\n\n      return label ? label.title : ''\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.todo-filter {\n  position: sticky;\n  background-color: var(--v-background-base) !important;\n  z-index: 2;\n  top: 0;\n}\n\n.task-item {\n  cursor: pointer;\n  border-bottom: 1px solid rgba(100, 100, 100, 0.1);\n\n  &:hover {\n    background-color: rgba(100, 100, 100, 0.1);\n  }\n\n  .task-item-content {\n    &.complete {\n      text-decoration: line-through;\n    }\n  }\n}\n</style>\n"]}]}