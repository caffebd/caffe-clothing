{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/components/NewsfeedCompose.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/components/NewsfeedCompose.vue","mtime":1607014716480},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NewsfeedCompose.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;AAIA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NewsfeedCompose.vue","sourceRoot":"src/apps/newsfeed/components","sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" width=\"600\">\n    <v-card>\n      <v-card-title class=\"pa-2\">\n        {{ isEdit ? 'Edit News...' : 'Add News' }}\n        <v-spacer></v-spacer>\n        <v-btn icon @click=\"dialog = false\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-card-title>\n\n      <v-divider></v-divider>\n\n      <!-- task form -->\n\n  <v-form\n    ref=\"form\"\n    v-model=\"valid\"\n    lazy-validation\n  >\n  <h2>Bhai Thamen News</h2>\n\n    <v-radio-group\n      v-model=\"postType\"\n      row\n    >\n      <v-radio\n        label=\"Warning\"\n        value=\"warn\"\n      ></v-radio>\n      <v-radio\n        label=\"News\"\n        value=\"news\"\n      ></v-radio>\n      <v-radio\n        label=\"Info\"\n        value=\"info\"\n      ></v-radio>\n    </v-radio-group>\n\n    <v-text-field\n      v-model=\"title\"\n      outlined\n      :counter=\"80\"\n      :rules=\"titleRules\"\n      label=\"Title\"\n      required\n    ></v-text-field>\n\n\n\n\n        <v-textarea\n          v-model=\"article\"\n          clearable\n          auto-grow\n          outlined\n          rows=\"7\"\n          row-height=\"15\"\n          :counter=\"6000\"\n          :rules=\"articleRules\"\n          label=\"Article\"\n          required\n        ></v-textarea>\n\n\n\n    <v-text-field\n      v-model=\"author\"\n      outlined\n      :counter=\"40\"\n      :rules=\"authorRules\"\n      label=\"Author\"\n      required\n    ></v-text-field>\n\n     <v-file-input\n    v-model=\"files\"\n    color=\"deep-purple accent-4\"\n    counter\n    label=\"File input\"\n    multiple\n    placeholder=\"Select your files\"\n    prepend-icon=\"mdi-paperclip\"\n    outlined\n    @change=\"imagePreview\"\n    :show-size=\"1000\"\n  >\n    <template v-slot:selection=\"{ index, text }\">\n      <v-chip\n        v-if=\"index < 2\"\n        color=\"deep-purple accent-4\"\n        dark\n        label\n        small\n      >\n        {{ text }}\n      </v-chip>\n\n      <span\n        v-else-if=\"index === 2\"\n        class=\"overline grey--text text--darken-3 mx-2\"\n      >\n        +{{ files.length - 2 }} File(s)\n      </span>\n    </template>\n  </v-file-input>\n  <v-flex xs12 sm6 offset-sm3>\n    <img :src=\"imageUrl\" height=\"150\">\n\n  </v-flex>\n    </v-form>\n      <v-divider></v-divider>\n\n      <v-card-actions class=\"pa-2\">\n        <v-btn outlined @click=\"close\">{{ $t('common.cancel') }}</v-btn>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"post\">{{ $t('common.save') }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\n\n/*\n|---------------------------------------------------------------------\n| TODO Compose Component\n|---------------------------------------------------------------------\n|\n| Compose new tasks editor\n*/\nimport moment from 'moment'\nimport { db } from '../../../main'\nimport firebase from 'firebase'\nexport default {\n  data () {\n    return {\n      dialog: false,\n      title: '',\n      article: '',\n      time: '',\n      author: '',\n      likes:[],\n      shares:0,\n      events:[],\n      incidentDate:'',\n      foundEvents:[],\n      show:true,\n      iAmEditing:false,\n      taskLabels: [],\n      search: null,\n      id:'',\n      valid: true,\n      files:[],\n      imageRaw:null,\n      receivedUrl:'',\n      imageUrl:'https://homepages.cae.wisc.edu/~ece533/images/airplane.png',\n      title: '',\n      sortDate:'',\n      article:'',\n      author:'',\n      postType:'warn',\n      titleRules: [\n        (v) => !!v || 'Title is required',\n        (v) => (v && v.length <= 80) || 'Title must be less than 80 characters'\n      ],\n      articleRules: [\n        (v) => !!v || 'Article text is required',\n        (v) => (v && v.length <= 6000) || 'Article must be less than 6000 characters'\n      ],\n      authorRules: [\n        (v) => !!v || 'Author name is required',\n        (v) => (v && v.length <= 40) || 'Name must be less than 40 characters'\n      ],\n      email: '',\n      emailRules: [\n        (v) => !!v || 'E-mail is required',\n        (v) => /.+@.+\\..+/.test(v) || 'E-mail must be valid'\n      ],\n      select: null,\n      items: [\n        'Item 1',\n        'Item 2',\n        'Item 3',\n        'Item 4'\n      ],\n      checkbox: false,\n      imageChanged:false\n\n    }\n  },\n  computed: {\n    ...mapState('newsfeed-app', ['newsfeedlabels']),\n    isEdit() {\n      if (this.id!=null){\n        console.log(this.id)\n        if (this.id==''){\n          return false\n        }else{\n          return true\n        }\n      }\n\n    }\n  },\n  methods: {\n    ...mapMutations('newsfeed-app', ['updateNewsfeed', 'addNewsfeed']),\n    open(task, editing) {\n      console.log('OPEN')\n      if (task) {\n        this.task = task\n        this.iAmEditing = true\n        this.id = this.task.id\n        this.author = this.task.author\n        this.title = this.task.title\n        this.article = this.task.article\n        this.time = this.task.time\n        this.image = this.task.image\n        this.taskLabels = this.task.labels\n        this.likes = this.task.likes\n        this.shares = this.task.shares\n        this.postType = this.task.labels[0]\n        this.imageUrl = this.task.image\n        this.files.push('saved')\n        this.show = this.task.show\n        this.sortDate = this.task.sortDate\n      } else {\n        this.iAmEditing = false\n        this.id = ''\n        this.task = {}\n        this.author = ''\n        this.title = ''\n        this.article = ''\n        this.time = ''\n        this.image = ''\n        this.taskLabels = []\n        this.likes = []\n        this.shares = 0\n        this.postType = 'news'\n        this.imageUrl = ''\n        this.show = true\n      }\n\n      this.dialog = true\n    },\n    close() {\n      this.dialog = false\n    },\n    save() {\n      const { title, article, taskLabels, author, imageUrl, show, id, time, sortDate } = this\n      const taskEdit = {\n        title,\n        article,\n        author,\n        image: imageUrl,\n        labels: taskLabels,\n        show\n      }\n\n      if (this.iAmEditing == true) {\n        this.updateNewsfeed({\n          ...this.task,\n          ...taskEdit\n        })\n      } else {\n        console.log ('PASS URL '+sortDate)\n        const taskNew = {\n        sortDate,\n        id,\n        title,\n        article,\n        author,\n        time,\n        image: imageUrl,\n        labels: taskLabels,\n        likes:[],\n        shares:0,\n        show\n      }\n        this.addNewsfeed(taskNew)\n      }\n\n      this.close()\n    },\n    filter (item, queryText, itemText) {\n      const hasValue = (val) => val !== null ? val : ''\n\n      const text = hasValue(item.title)\n      const query = hasValue(queryText)\n\n      return text.toString()\n        .toLowerCase()\n        .indexOf(query.toString().toLowerCase()) > -1\n    },\n\n\n    async post () {\n\n      if (this.iAmEditing==false){\n      const unix = Date.now()\n\n      this.sortDate = unix\n\n      this.id = this.sortDate.toString()\n\n      const theDate = moment(unix).format('Do MMM YY')\n\n      this.time = firebase.firestore.Timestamp.fromDate(new Date())\n\n      this.taskLabels=[]\n      this.taskLabels.push(this.postType)\n\n      }else{\n\n        this.taskLabels=[]\n        this.taskLabels.push(this.postType)\n\n        console.log('doc id '+this.id)\n      }\n\n      if (this.imageChanged){\n\n\n\n      const imgName = this.image.name\n\n      const ext = imgName.slice(imgName.lastIndexOf('.'))\n\n      const uniqueTime = new Date().getTime()\n\n\n      const storageRef=firebase.storage().ref(`newsfeed/${this.id}${uniqueTime}${ext}`).put(this.image);\n        storageRef.on(`state_changed`,snapshot=>{\n        this.uploadValue = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\n          }, error=>{console.log(error.message)},\n        ()=>{this.uploadValue=100;\n            storageRef.snapshot.ref.getDownloadURL().then((url)=>{\n                this.imageUrl = url;\n                console.log(this.id)\n                console.log(this.taskLabels[0])\n                console.log(this.title)\n                console.log(this.article)\n                console.log(this.time)\n                console.log(this.author)\n                console.log(this.imageUrl)\n                console.log(this.likes)\n                console.log(this.shares)\n                console.log(this.show)\n\n                db\n                .collection('newsfeed')\n                .doc(this.id)\n                .set({\n                  cat: this.taskLabels[0],\n                  title: this.title,\n                  article: this.article,\n                  time: this.time,\n                  author: this.author,\n                  image: this.imageUrl,\n                  likes:this.likes,\n                  shares:this.shares,\n                  show:this.show\n              })\n              this.save()\n              });\n            }\n          );\n\n      } else {\n\n          db\n          .collection('newsfeed')\n          .doc(this.id)\n          .set({\n            cat: this.taskLabels[0],\n            title: this.title,\n            article: this.article,\n            time: this.time,\n            author: this.author,\n            image: this.image,\n            likes:this.likes,\n            shares:this.shares,\n            show:this.show\n\n      }).then((done)=>{\n                this.save()\n              })\n      }\n\n    },\n    imagePreview() {\n      const fileReader = new FileReader()\n\n      if (this.files.length>0){\n\n      fileReader.addEventListener('load',() => {\n        this.imageUrl = fileReader.result\n      })\n      fileReader.readAsDataURL(this.files[0])\n      this.image = this.files[0]\n      this.imageChanged = true\n      }else{\n        this.image=''\n        this.imageUrl=''\n        this.imageChanged = false\n      }\n\n\n    },\n    validate () {\n      this.$refs.form.validate()\n    },\n    reset () {\n      this.$refs.form.reset()\n    },\n    resetValidation () {\n      this.$refs.form.resetValidation()\n    }\n  }\n}\n</script>\n"]}]}