{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js!/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/pages/dashboard/NewsFormPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/pages/dashboard/NewsFormPage.vue","mtime":1606935529747},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubGFzdC1pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2x1a2UvRG9jdW1lbnRzL1ZVRS9idC1zdGFydGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZGIsIFRpbWVTdGFtcCB9IGZyb20gJy4uLy4uL21haW4nOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdmFsaWQ6IHRydWUsCiAgICAgIGZpbGVzOiBbXSwKICAgICAgaW1hZ2VSYXc6IG51bGwsCiAgICAgIHJlY2VpdmVkVXJsOiAnJywKICAgICAgaW1hZ2VVcmw6ICdodHRwczovL2hvbWVwYWdlcy5jYWUud2lzYy5lZHUvfmVjZTUzMy9pbWFnZXMvYWlycGxhbmUucG5nJywKICAgICAgdGl0bGU6ICcnLAogICAgICBhcnRpY2xlOiAnJywKICAgICAgYXV0aG9yOiAnJywKICAgICAgcG9zdFR5cGU6ICd3YXJuJywKICAgICAgdGl0bGVSdWxlczogW2Z1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuICEhdiB8fCAnVGl0bGUgaXMgcmVxdWlyZWQnOwogICAgICB9LCBmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiB2ICYmIHYubGVuZ3RoIDw9IDgwIHx8ICdUaXRsZSBtdXN0IGJlIGxlc3MgdGhhbiA4MCBjaGFyYWN0ZXJzJzsKICAgICAgfV0sCiAgICAgIGFydGljbGVSdWxlczogW2Z1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuICEhdiB8fCAnQXJ0aWNsZSB0ZXh0IGlzIHJlcXVpcmVkJzsKICAgICAgfSwgZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gdiAmJiB2Lmxlbmd0aCA8PSA2MDAwIHx8ICdBcnRpY2xlIG11c3QgYmUgbGVzcyB0aGFuIDYwMDAgY2hhcmFjdGVycyc7CiAgICAgIH1dLAogICAgICBhdXRob3JSdWxlczogW2Z1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuICEhdiB8fCAnQXV0aG9yIG5hbWUgaXMgcmVxdWlyZWQnOwogICAgICB9LCBmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiB2ICYmIHYubGVuZ3RoIDw9IDQwIHx8ICdOYW1lIG11c3QgYmUgbGVzcyB0aGFuIDQwIGNoYXJhY3RlcnMnOwogICAgICB9XSwKICAgICAgZW1haWw6ICcnLAogICAgICBlbWFpbFJ1bGVzOiBbZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gISF2IHx8ICdFLW1haWwgaXMgcmVxdWlyZWQnOwogICAgICB9LCBmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiAvLitALitcLi4rLy50ZXN0KHYpIHx8ICdFLW1haWwgbXVzdCBiZSB2YWxpZCc7CiAgICAgIH1dLAogICAgICBzZWxlY3Q6IG51bGwsCiAgICAgIGl0ZW1zOiBbJ0l0ZW0gMScsICdJdGVtIDInLCAnSXRlbSAzJywgJ0l0ZW0gNCddLAogICAgICBjaGVja2JveDogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBwb3N0OiBmdW5jdGlvbiBwb3N0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgdW5peCwgZG9jSWQsIHRoZURhdGUsIGFEYXRlLCBpbWdOYW1lLCBleHQsIHN0b3JhZ2VSZWY7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdW5peCA9IE1hdGgucm91bmQoK25ldyBEYXRlKCkgLyAxMCk7CiAgICAgICAgICAgICAgICBkb2NJZCA9IHVuaXgudG9TdHJpbmcoKTsKICAgICAgICAgICAgICAgIHRoZURhdGUgPSBtb21lbnQodW5peCkuZm9ybWF0KCdEbyBNTU0gWVknKTsKICAgICAgICAgICAgICAgIGFEYXRlID0gZmlyZWJhc2UuZmlyZXN0b3JlLlRpbWVzdGFtcC5mcm9tRGF0ZShuZXcgRGF0ZSgpKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLmZpbGVzWzBdKTsKICAgICAgICAgICAgICAgIGltZ05hbWUgPSBfdGhpcy5pbWFnZS5uYW1lOwogICAgICAgICAgICAgICAgZXh0ID0gaW1nTmFtZS5zbGljZShpbWdOYW1lLmxhc3RJbmRleE9mKCcuJykpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXh0KTsKICAgICAgICAgICAgICAgIHN0b3JhZ2VSZWYgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKCJuZXdzZmVlZC8iLmNvbmNhdChkb2NJZCkuY29uY2F0KGV4dCkpLnB1dChfdGhpcy5pbWFnZSk7CiAgICAgICAgICAgICAgICBzdG9yYWdlUmVmLm9uKCJzdGF0ZV9jaGFuZ2VkIiwgZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLnVwbG9hZFZhbHVlID0gc25hcHNob3QuYnl0ZXNUcmFuc2ZlcnJlZCAvIHNuYXBzaG90LnRvdGFsQnl0ZXMgKiAxMDA7CiAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IubWVzc2FnZSk7CiAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLnVwbG9hZFZhbHVlID0gMTAwOwogICAgICAgICAgICAgICAgICBzdG9yYWdlUmVmLnNuYXBzaG90LnJlZi5nZXREb3dubG9hZFVSTCgpLnRoZW4oZnVuY3Rpb24gKHVybCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzLmltZzEgPSB1cmw7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMuaW1nMSk7CiAgICAgICAgICAgICAgICAgICAgZGIuY29sbGVjdGlvbignbmV3c2ZlZWQnKS5kb2MoZG9jSWQpLnNldCh7CiAgICAgICAgICAgICAgICAgICAgICBjYXQ6IF90aGlzLnBvc3RUeXBlLAogICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IF90aGlzLnRpdGxlLAogICAgICAgICAgICAgICAgICAgICAgYXJ0aWNsZTogX3RoaXMuYXJ0aWNsZSwKICAgICAgICAgICAgICAgICAgICAgIHRpbWU6IGFEYXRlLAogICAgICAgICAgICAgICAgICAgICAgYXV0aG9yOiBfdGhpcy5hdXRob3IsCiAgICAgICAgICAgICAgICAgICAgICBpbWFnZTogdXJsLAogICAgICAgICAgICAgICAgICAgICAgbGlrZXM6IFtdLAogICAgICAgICAgICAgICAgICAgICAgc2hhcmVzOiAwLAogICAgICAgICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRvbmUpIHsKICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdBTEwgRE9ORScpOwogICAgICAgICAgICAgICAgICAgICAgX3RoaXMudGl0bGUgPSAnJzsKICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmFydGljbGUgPSAnJzsKICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmF1dGhvciA9ICcnOwogICAgICAgICAgICAgICAgICAgICAgX3RoaXMuaW1hZ2VVcmwgPSAnJzsKICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmZpbGVzID0gW107CgogICAgICAgICAgICAgICAgICAgICAgX3RoaXMucmVzZXRWYWxpZGF0aW9uKCk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7IC8vIHJldHVybiBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKCduZXdzZmVlZC8nICsgZG9jSWQgKyBleHQpLgogICAgICAgICAgICAgICAgLy8gICB0aGVuKChmaWxlRGF0YSkgPT4gewogICAgICAgICAgICAgICAgLy8gICAgIHRoaXMucmVjZWl2ZWRVcmwgPSBmaWxlRGF0YS5tZXRhZGF0YS5kb3dubG9hZFVSTHNbMF0KICAgICAgICAgICAgICAgIC8vICAgICBkYgogICAgICAgICAgICAgICAgLy8gICAgICAgLmNvbGxlY3Rpb24oJ25ld3NmZWVkJykKICAgICAgICAgICAgICAgIC8vICAgICAgIC5kb2MoZG9jSWQpCiAgICAgICAgICAgICAgICAvLyAgICAgICAuc2V0KHsKICAgICAgICAgICAgICAgIC8vICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsCiAgICAgICAgICAgICAgICAvLyAgICAgICAgIGFydGljbGU6IHRoaXMuYXJ0aWNsZSwKICAgICAgICAgICAgICAgIC8vICAgICAgICAgdGltZTogYURhdGUsCiAgICAgICAgICAgICAgICAvLyAgICAgICAgIGF1dGhvcjogdGhpcy5hdXRob3IsCiAgICAgICAgICAgICAgICAvLyAgICAgICAgIGltYWdlOiB0aGlzLnJlY2VpdmVkVXJsCiAgICAgICAgICAgICAgICAvLyAgICAgICB9KQogICAgICAgICAgICAgICAgLy8gICB9KQoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGltYWdlUHJldmlldzogZnVuY3Rpb24gaW1hZ2VQcmV2aWV3KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgZmlsZVJlYWRlci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5pbWFnZVVybCA9IGZpbGVSZWFkZXIucmVzdWx0OwogICAgICB9KTsKICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKHRoaXMuZmlsZXNbMF0pOwogICAgICB0aGlzLmltYWdlID0gdGhpcy5maWxlc1swXTsKICAgIH0sCiAgICB2YWxpZGF0ZTogZnVuY3Rpb24gdmFsaWRhdGUoKSB7CiAgICAgIHRoaXMuJHJlZnMuZm9ybS52YWxpZGF0ZSgpOwogICAgfSwKICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldCgpIHsKICAgICAgdGhpcy4kcmVmcy5mb3JtLnJlc2V0KCk7CiAgICB9LAogICAgcmVzZXRWYWxpZGF0aW9uOiBmdW5jdGlvbiByZXNldFZhbGlkYXRpb24oKSB7CiAgICAgIHRoaXMuJHJlZnMuZm9ybS5yZXNldFZhbGlkYXRpb24oKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["NewsFormPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-form\n    ref=\"form\"\n    v-model=\"valid\"\n    lazy-validation\n  >\n  <h2>Bhai Thamen News</h2>\n\n    <v-radio-group\n      v-model=\"postType\"\n      row\n    >\n      <v-radio\n        label=\"Warning\"\n        value=\"warn\"\n      ></v-radio>\n      <v-radio\n        label=\"News\"\n        value=\"news\"\n      ></v-radio>\n      <v-radio\n        label=\"Info\"\n        value=\"info\"\n      ></v-radio>\n    </v-radio-group>\n\n    <v-text-field\n      v-model=\"title\"\n      outlined\n      :counter=\"80\"\n      :rules=\"titleRules\"\n      label=\"Title\"\n      required\n    ></v-text-field>\n\n\n\n\n        <v-textarea\n          v-model=\"article\"\n          clearable\n          auto-grow\n          outlined\n          rows=\"7\"\n          row-height=\"15\"\n          :counter=\"6000\"\n          :rules=\"articleRules\"\n          label=\"Article\"\n          required\n        ></v-textarea>\n\n\n\n    <v-text-field\n      v-model=\"author\"\n      outlined\n      :counter=\"40\"\n      :rules=\"authorRules\"\n      label=\"Author\"\n      required\n    ></v-text-field>\n\n     <v-file-input\n    v-model=\"files\"\n    color=\"deep-purple accent-4\"\n    counter\n    label=\"File input\"\n    multiple\n    placeholder=\"Select your files\"\n    prepend-icon=\"mdi-paperclip\"\n    outlined\n    @change=\"imagePreview\"\n    :show-size=\"1000\"\n  >\n    <template v-slot:selection=\"{ index, text }\">\n      <v-chip\n        v-if=\"index < 2\"\n        color=\"deep-purple accent-4\"\n        dark\n        label\n        small\n      >\n        {{ text }}\n      </v-chip>\n\n      <span\n        v-else-if=\"index === 2\"\n        class=\"overline grey--text text--darken-3 mx-2\"\n      >\n        +{{ files.length - 2 }} File(s)\n      </span>\n    </template>\n  </v-file-input>\n  <v-flex xs12 sm6 offset-sm3>\n    <img :src=\"imageUrl\" height=\"150\">\n\n  </v-flex>\n\n    <v-btn\n      :disabled=\"!valid\"\n      color=\"success\"\n      class=\"mr-4\"\n      @click=\"post\"\n    >\n      Validate\n    </v-btn>\n\n    <v-btn\n      color=\"error\"\n      class=\"mr-4\"\n      @click=\"reset\"\n    >\n      Reset Form\n    </v-btn>\n\n    <v-btn\n      color=\"warning\"\n      @click=\"resetValidation\"\n    >\n      Reset Validation\n    </v-btn>\n  </v-form>\n</template>\n\n<script>\nimport { db, TimeStamp } from '../../main'\nimport moment from 'moment'\nimport firebase from 'firebase'\nexport default {\n  data: () => ({\n    valid: true,\n    files:[],\n    imageRaw:null,\n    receivedUrl:'',\n    imageUrl:'https://homepages.cae.wisc.edu/~ece533/images/airplane.png',\n    title: '',\n    article:'',\n    author:'',\n    postType:'warn',\n    titleRules: [\n      (v) => !!v || 'Title is required',\n      (v) => (v && v.length <= 80) || 'Title must be less than 80 characters'\n    ],\n    articleRules: [\n      (v) => !!v || 'Article text is required',\n      (v) => (v && v.length <= 6000) || 'Article must be less than 6000 characters'\n    ],\n    authorRules: [\n      (v) => !!v || 'Author name is required',\n      (v) => (v && v.length <= 40) || 'Name must be less than 40 characters'\n    ],\n    email: '',\n    emailRules: [\n      (v) => !!v || 'E-mail is required',\n      (v) => /.+@.+\\..+/.test(v) || 'E-mail must be valid'\n    ],\n    select: null,\n    items: [\n      'Item 1',\n      'Item 2',\n      'Item 3',\n      'Item 4'\n    ],\n    checkbox: false\n  }),\n\n  methods: {\n    async post () {\n      const unix = Math.round(+new Date() / 10)\n\n      const docId = unix.toString()\n\n      const theDate = moment(unix).format('Do MMM YY')\n\n      const aDate = firebase.firestore.Timestamp.fromDate(new Date())\n\n      console.log(this.files[0])\n\n      const imgName = this.image.name\n\n      const ext = imgName.slice(imgName.lastIndexOf('.'))\n\n      console.log(ext)\n\n      const storageRef=firebase.storage().ref(`newsfeed/${docId}${ext}`).put(this.image);\n        storageRef.on(`state_changed`,snapshot=>{\n        this.uploadValue = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\n          }, error=>{console.log(error.message)},\n        ()=>{this.uploadValue=100;\n            storageRef.snapshot.ref.getDownloadURL().then((url)=>{\n                this.img1 =url;\n                console.log(this.img1)\n                db\n                .collection('newsfeed')\n                .doc(docId)\n                .set({\n                  cat: this.postType,\n                  title: this.title,\n                  article: this.article,\n                  time: aDate,\n                  author: this.author,\n                  image: url,\n                  likes:[],\n                  shares:0,\n                  show:true\n              }).then((done)=>{\n                console.log('ALL DONE')\n                this.title=''\n                this.article=''\n                this.author=''\n                this.imageUrl=''\n                this.files=[]\n                this.resetValidation()\n              })\n              });\n            }\n          );\n\n      // return firebase.storage().ref('newsfeed/' + docId + ext).\n      //   then((fileData) => {\n      //     this.receivedUrl = fileData.metadata.downloadURLs[0]\n\n      //     db\n      //       .collection('newsfeed')\n      //       .doc(docId)\n      //       .set({\n      //         title: this.title,\n      //         article: this.article,\n      //         time: aDate,\n      //         author: this.author,\n      //         image: this.receivedUrl\n      //       })\n      //   })\n\n\n    },\n    imagePreview() {\n      const fileReader = new FileReader()\n\n      fileReader.addEventListener('load',() => {\n        this.imageUrl = fileReader.result\n      })\n      fileReader.readAsDataURL(this.files[0])\n      this.image = this.files[0]\n    },\n    validate () {\n      this.$refs.form.validate()\n    },\n    reset () {\n      this.$refs.form.reset()\n    },\n    resetValidation () {\n      this.$refs.form.resetValidation()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/pages/dashboard"}]}