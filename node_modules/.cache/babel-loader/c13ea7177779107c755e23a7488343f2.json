{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js!/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/pages/dashboard/DashboardPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/pages/dashboard/DashboardPage.vue","mtime":1606635182004},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DashboardPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"d-flex flex-grow-1 flex-column\">\n  <!-- Tabs -->\n    <v-card>\n      <v-tabs\n        v-model=\"tabs\"\n        centered\n        color=\"blue\"\n      >\n        <v-tab\n          v-for=\"i in 2\"\n          :key=\"i\"\n          @change=\"dateChangedChecker(i)\"\n          class=\"px-5 py-2\"\n        >\n        <v-icon left>mdi-chart-arc</v-icon>  {{ chartTabs[i] }}\n        </v-tab>\n      </v-tabs>\n\n      <v-tabs-items v-model=\"tabs\">\n        <v-tab-item>\n          <v-row class=\"flex-grow-0\" dense>\n            <v-col cols=\"12\">\n              <column-card\n                class=\"h-full\"\n                style=\"min-height: 380px\"\n                :value=\"1837.32\"\n                :percentage=\"3.2\"\n                :loading=\"isLoading1\"\n                :percentage-label=\"$t('dashboard.lastweek')\"\n                :action-label=\"$t('dashboard.viewReport')\"\n              ></column-card>\n            </v-col>\n          </v-row>\n        </v-tab-item>\n        <v-tab-item>\n            <v-row class=\"flex-grow-0\" dense>\n            <v-col cols=\"12\">\n              <pie-card\n                class=\"h-full\"\n                style=\"min-height: 380px\"\n                :value=\"1837.32\"\n                :percentage=\"3.2\"\n                :loading=\"isLoading1\"\n                :percentage-label=\"$t('dashboard.lastweek')\"\n                :action-label=\"$t('dashboard.viewReport')\"\n              ></pie-card>\n            </v-col>\n          </v-row>\n        </v-tab-item>\n      </v-tabs-items>\n    </v-card>\n\n    <!-- Group/Individual or Event Selection-->\n    <v-card class=\"grey lighten-5 mt-2\">\n      <v-container>\n        <v-row>\n          <!-- Group Switch -->\n          <v-col cols=\"3\" class=\"title cyan lighten-4 white--text\">\n              <v-switch\n              class=\"ml-4\"\n              inset\n              v-model=\"mode\"\n              color=\"red\"\n              :label=\"`Mode: ${chartType.toString()}`\"\n              @change=\"toggleChartType($event)\"\n              ></v-switch>\n          </v-col>\n\n          <!-- Date Selection -->\n          <v-col cols=\"3\" class=\"deep-purple lighten-4 white--text\">\n            <v-dialog\n              ref=\"dialog\"\n              v-model=\"modal\"\n              :return-value.sync=\"dates\"\n              persistent\n              width=\"290px\"\n            >\n              <template v-slot:activator=\"{ on, attrs }\">\n              <v-text-field\n              v-model=\"dates\"\n              class=\"title\"\n              label=\"Select Date Range\"\n              prepend-icon=\"mdi-calendar\"\n              readonly\n              v-bind=\"attrs\"\n              v-on=\"on\"\n              ></v-text-field>\n              </template>\n\n              <v-date-picker\n                v-model=\"dates\"\n                range\n              >\n                <v-spacer></v-spacer>\n                <v-btn\n                text\n                color=\"primary\"\n                @click=\"modal = false\"\n                >\n                  Cancel\n                </v-btn>\n\n                <v-btn\n                text\n                color=\"primary\"\n                @click=\"$refs.dialog.save(dates); dateChangedChecker(1)\"\n                >\n                OK\n                </v-btn>\n              </v-date-picker>\n            </v-dialog>\n          </v-col>\n\n          <!-- Time Range Selection -->\n          <v-col cols=\"3\" class=\"green lighten-4 mt-0 pt-1\">\n            <v-subheader class=\"justify-center title\">Select time range</v-subheader>\n            <v-range-slider\n              v-model=\"timerange\"\n              :max=\"timemax\"\n              :min=\"timemin\"\n              hide-details\n              class=\"align-center\"\n              @change=\"dateChangedChecker(1)\"\n            >\n            <template v-slot:prepend>\n              <v-text-field\n                :value=\"timerange[0]\"\n                class=\"mt-0 pt-0\"\n                hide-details\n                single-line\n                type=\"number\"\n                style=\"width: 60px;\"\n                @change=\"$set(timerange, 0, $event); dateChangedChecker(1)\"\n              ></v-text-field>\n            </template>\n            <template v-slot:append>\n              <v-text-field\n                :value=\"timerange[1]\"\n                class=\"mt-0 pt-0\"\n                hide-details\n                single-line\n                type=\"number\"\n                style=\"width: 60px\"\n                @change=\"$set(timerange, 1, $event); dateChangedChecker(1)\"\n              ></v-text-field>\n            </template>\n          </v-range-slider>\n          </v-col>\n\n          <!-- Age Range Selection -->\n          <v-col cols=\"3\" v-show=\"!mode\"  class=\"blue lighten-4 mt-0 pt-1\">\n\n            <v-subheader class=\"justify-center title\">Set min and max age</v-subheader>\n            <v-range-slider\n              v-model=\"range\"\n              :max=\"max\"\n              :min=\"min\"\n              hide-details\n              class=\"align-center\"\n            >\n            <template v-slot:prepend>\n              <v-text-field\n                :value=\"range[0]\"\n                class=\"mt-0 pt-0\"\n                hide-details\n                single-line\n                type=\"number\"\n                style=\"width: 60px\"\n                @change=\"$set(range, 0, $event); dateChangedChecker(1)\"\n              ></v-text-field>\n            </template>\n            <template v-slot:append>\n              <v-text-field\n                :value=\"range[1]\"\n                class=\"mt-0 pt-0\"\n                hide-details\n                single-line\n                type=\"number\"\n                style=\"width: 60px\"\n                @change=\"$set(range, 1, $event); dateChangedChecker(1)\"\n              ></v-text-field>\n            </template>\n          </v-range-slider>\n          </v-col>\n\n\n          <!-- Search with Number -->\n          <v-col cols=\"3\" v-show=\"mode\" class=\"green lighten-4  mb-0 pb-0 pt-4\">\n            <span class=\"d-inline-flex\">\n            <v-text-field\n              v-model=\"email\"\n              color=\"title\"\n              outlined\n              label='Enter mobile number'\n              type='text'\n            ></v-text-field>\n            <v-btn\n              @click=\"searchUsersByEmail\"\n              x-large\n              elevation=\"4\"\n              class=\"ml-2\"\n              color=\"primary\"\n            >\n            <v-icon left>\n              large\n              mdi-feature-search-outline\n            </v-icon>\n              Search\n            </v-btn>\n            </span>\n          </v-col>\n        </v-row>\n\n        <!-- Event Selection -->\n\n        <v-row>\n          <v-col cols=\"6\" class=\"ml-0 px-0 outlined\">\n            <v-card class=\"red lighten-5 pb-4 mr-1 px-0\">\n              <v-card-title class=\"red lighten-1 justify-center\">\n                <v-icon\n                      left\n                      large\n                      color=\"white lighten-2\">mdi-alarm-light-outline\n                    </v-icon>\n                    <span class=\"headline white--text\">SOS</span>\n              </v-card-title>\n            <v-divider></v-divider>\n\n            <v-row class=\"flex-grow-0\" dense>\n              <v-col cols=\"4\">\n                <v-checkbox\n                  class=\"px-2 pt-1\"\n                  v-model=\"challengeCheck\"\n                  label=\"Confront\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('challenge')\"\n                  hide-details\n                ></v-checkbox>\n\n                <v-checkbox\n                  class=\"px-2\"\n                  v-model=\"challengeSMSCheck\"\n                  label=\"Confront SMS\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('challenge-sms')\"\n                  hide-details\n                ></v-checkbox>\n              </v-col>\n\n                <v-col cols=\"4\">\n                <v-checkbox\n                  class=\"px-2 pt-1\"\n                  v-model=\"userSMSCheck\"\n                  label=\"User SMS\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('user-sms')\"\n                  hide-details\n                ></v-checkbox>\n\n                <v-checkbox\n                  class=\"px-2\"\n                  v-model=\"alarmCheck\"\n                  label=\"Alarm\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('alarm')\"\n                  hide-details\n                ></v-checkbox>\n              </v-col>\n\n              <v-col cols=\"4\">\n                <v-checkbox\n                  class=\"px-2 pt-1\"\n                  v-model=\"secretCheck\"\n                  label=\"Secret\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('secret')\"\n                  hide-details\n                ></v-checkbox>\n\n                <v-checkbox\n                  class=\"px-2\"\n                  v-model=\"secretSMSCheck\"\n                  label=\"Secret SMS\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('secret-sms')\"\n                  hide-details\n                ></v-checkbox>\n              </v-col>\n            </v-row>\n            </v-card>\n          </v-col>\n\n          <v-col cols=\"3\" class=\"px-1\">\n            <v-card class=\"green lighten-5 pb-4\">\n              <v-card-title class=\"green lighten-1 justify-center\">\n                <v-icon\n                      left\n                      large\n                      color=\"white darken-2\">mdi-road-variant\n                    </v-icon>\n                    <span class=\"headline white--text\">Travel</span>\n              </v-card-title>\n\n              <v-checkbox\n                class=\"px-2 pt-2\"\n                v-model=\"zoneCheck\"\n                label=\"Zone\"\n                color=\"primary\"\n                v-on:change=\"checkBoxTest('zone')\"\n                hide-details\n              ></v-checkbox>\n\n              <v-checkbox\n                class=\"px-2\"\n                v-model=\"zoneSMSCheck\"\n                label=\"Zone SMS\"\n                color=\"primary\"\n                v-on:change=\"checkBoxTest('zones-sms')\"\n                hide-details\n              ></v-checkbox>\n            </v-card>\n          </v-col>\n\n          <v-col cols=\"3\" class=\"px-1\">\n            <v-card class=\"amber lighten-5 pb-4\">\n              <v-card-title class=\"amber darken-1 justify-center\">\n                <v-icon\n                      left\n                      large\n                      color=\"white darken-2\">mdi-alarm\n                    </v-icon>\n                    <span class=\"headline white--text\">Reminder</span>\n              </v-card-title>\n\n              <v-checkbox\n              class=\"px-2 pt-2\"\n              v-model=\"timerCheck\"\n              label=\"Reminder\"\n              color=\"primary\"\n              v-on:change=\"checkBoxTest('timer')\"\n              hide-details\n            ></v-checkbox>\n\n            <v-checkbox\n              class=\"px-2\"\n              v-model=\"timerSMSCheck\"\n              label=\"Reminder SMS\"\n              color=\"primary\"\n              v-on:change=\"checkBoxTest('timer-sms')\"\n              hide-details\n            ></v-checkbox>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card>\n  </div>\n</template>\n\n<script>\n\n// DEMO Cards for dashboard\n//import SalesCard from '../../components/dashboard/InboxCard'\nimport ColumnCard from '../../pages/ui/charts/_examples/apex-charts/simple/column'\nimport PieCard from '../../pages/ui/charts/_examples/echarts/pie'\nimport { db } from '../../main'\nimport moment from 'moment'\nimport firebase from 'firebase'\nconst query = db.collection('users')\n\nexport default {\n  components: {\n    ColumnCard,\n    PieCard\n  },\n  data() {\n    return {\n      chartTabs:['na','Bar Chart', 'Pie Chart'],\n      timemin: 0,\n      timemax: 24,\n      timerange: [0, 24],\n      max:99,\n      min:0,\n      tabs:null,\n      range:[0,99],\n      form: false,\n      mode:false,\n      chartType:'Group',\n      loadingInterval: null,\n      email: '',\n      foundUser: null,\n      isLoading1: true,\n      fromDateMenu: false,\n      fromDateVal: null,\n      dates:[],\n      modal: false,\n      minDate: '2019-07-04',\n      maxDate: '2030-08-30',\n      allSearchDates: [],\n      allResults: [],\n      challengeList:[],\n      challengeSMSList:[],\n      secretList:[],\n      secretSMSList:[],\n      timerList:[],\n      timerSMSList:[],\n      userSMSList:[],\n      zoneList:[],\n      zoneSMSList:[],\n      alarmList:[],\n      sendBarData: [],\n      sendPieData:[],\n      selectChallenge: true,\n      selectChallengeSMS:true,\n      selectSecret:true,\n      selectSecretSMS:false,\n      selectTimer:true,\n      selectTimerSMS:true,\n      selectZone:false,\n      selectZoneSMS:false,\n      selectUserSMS:true,\n      selectAlarm:true,\n\n      groupChallengeCount:0,\n      groupChallengeSMSCount:0,\n      groupSecretCount:0,\n      groupSecretSMSCount:0,\n      groupTimerCount:0,\n      groupTimerSMSCount:0,\n      groupZoneCount:0,\n      groupZoneSMSCount:0,\n      groupUserSMSCount:0,\n      groupAlarmCount:0,\n\n      challengeCheck:false,\n      challengeSMSCheck:false,\n      secretCheck:false,\n      secretSMSCheck:false,\n      timerCheck:false,\n      timerSMSCheck:false,\n      zoneCheck:false,\n      zoneSMSCheck:false,\n      userSMSCheck:false,\n      alarmCheck:false,\n\n      lowerAge:1,\n      upperAge:99,\n\n      lowerTime:0,\n      upperTime:24,\n\n      activeCheckBoxes:[]\n\n\n    }\n  },\n  mounted() {\n    let count = 0\n\n    // DEMO delay for loading graphics\n    this.loadingInterval = setInterval(() => {\n      this[`isLoading${count++}`] = false\n      if (count === 4) this.clear()\n    }, 400)\n  },\n  beforeDestroy() {\n    this.clear()\n  },\n  methods: {\n    clearAllCriteria(){\n      this.challengeList = []\n      this.challengeSMSList = []\n      this.secretList = []\n      this.secretSMSList = []\n      this.timerList = []\n      this.timerSMSList = []\n      this.userSMSList = []\n      this.zoneList = []\n      this.zoneSMSList = []\n      this.alarmList = []\n      this.sendBarData = []\n      this.sendPieData = []\n      this.challengeCheck = false\n      this.challengeSMSCheck = false\n      this.secretCheck = false\n      this.secretSMSCheck = false\n      this.timerCheck = false\n      this.timerSMSCheck = false\n      this.zoneCheck = false\n      this.zoneSMSCheck = false\n      this.userSMSCheck = false\n      this.alarmCheck = false\n\n      this.activeCheckBoxes=[]\n\n\n      this.$store.dispatch('queryuser/setPieData',this.sendPieData)\n      this.$store.dispatch('queryuser/setNewBarChartData',Object.values(this.sendBarData))\n    },\n    toggleChartType(event){\n      console.log(event)\n      this.clearAllCriteria()\n      if (event==true){\n        this.chartType='Individual'\n      }else{\n        this.chartType='Group'\n      }\n    },\n    clear() {\n      clearInterval(this.loadingInterval)\n    },\n    checkBoxTest(type){\n      console.log(type+' '+this.challengeCheck)\n      if (this.activeCheckBoxes.includes(type)){\n        this.activeCheckBoxes.splice(this.activeCheckBoxes.indexOf(type), 1);\n      }else{\n        this.activeCheckBoxes.push(type)\n      }\n      console.log (this.activeCheckBoxes)\n\n    if (this.chartType=='Group'){\n      this.getGroupData(type, false)\n    }else{\n      this.selectChartColumns()\n    }\n\n    },\n    dateChangedChecker(i){\n\n      if (i==2){\n        return\n      }\n\n      this.sendBarData=[]\n      this.sendPieData=[]\n\n    if (this.chartType=='Group'){\n\n      for (var d=0; d<this.activeCheckBoxes.length; d++){\n        this.getGroupData(this.activeCheckBoxes[d], true)\n      }\n\n    }else{\n      this.searchUsersByEmail()\n    }\n    },\n    changeData() {\n\n    if (this.chartType=='Group'){\n       this.selectChallengeSMS = false\n       this.selectChartColumns()\n    }else{\n      this.searchUsersByEmail()\n    }\n\n    },\n\n    async setTimeUserEventsDocs() {\n\n      let userIdList=[]\n      await db.collection(\"users\").get().then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n\n        userIdList.push(doc.ref.id)\n      })\n      })\n\n       console.log(userIdList)\n\n      for (var l=0; l<userIdList.length; l++){\n\n      db.collection(\"users\").doc(userIdList[l]).collection('research').get().then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n\n      const splitTime=doc.ref.id.split(' ')[0];\n      console.log(splitTime)\n      var pushTime = Date.parse(splitTime)\n        doc.ref.update({\n          createdAt: pushTime\n        });\n        console.log(moment(pushTime).format('MMM Do YY'))\n\n      })\n\n      })\n      }\n\n    },\n    getRandomInt(max) {\n      return Math.floor(Math.random() * Math.floor(max)+16);\n    },\n\n    setTimeAllDocs(){\n      db.collection(\"user-sms\").get().then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n      const splitTime=doc.ref.id.split(' ')[0];\n      console.log(splitTime)\n      var pushTime = Date.parse(splitTime)\n        doc.ref.update({\n          createdAt: pushTime\n        });\n        console.log(moment(pushTime).format('MMM Do YY'))\n    });\n    });\n    },\n    setEventAges(){\n      var cat='alarm'\n      var temp=[]\n      db.collection(cat).get().then(function(querySnapshot) {\n    querySnapshot.forEach(function(doc) {\n\n      console.log(doc.data()['events'])\n      temp.push(doc.data()['events'])\n\n    });\n    var newTemp;\n    console.log(temp.length)\n    for (var t=0; t<temp.length; t++){\n       newTemp = temp[t]\n      for (var s=0; s<newTemp.length; s++){\n        var rndAge = Math.floor(Math.random() * Math.floor(30)+16)\n        newTemp[s]['age']=rndAge\n      }\n\n    }\n    console.log(temp)\n    var p=0\n    db.collection(cat).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        doc.ref.update({\n          events: temp[p]\n        });\n        p++\n      })\n    })\n    });\n    },\n\n\n\n    async getGroupData(category, fromDate){\n\n\n      if (this.dates[0]==null){\n        return\n      }\n\n      if (this.dates[1]==null){\n        this.dates[1]=this.dates[0]\n      }\n\n      const fullDate1 = Date.parse(this.dates[0])\n      const fullDate2 = Date.parse(this.dates[1])\n\n      console.log('FD '+fullDate2)\n\n      const useDates = []\n\n\n      if (fullDate1 < fullDate2) {\n        useDates.push(fullDate1)\n        useDates.push(fullDate2)\n      } else {\n        useDates.push(fullDate2)\n        useDates.push(fullDate1)\n      }\n      console.log (useDates)\n\n      this.allSearchDates  = this.getDates(useDates[0], useDates[1])\n\n      console.log(useDates[1])\n\n      this.$store.dispatch('queryuser/setDates',this.allSearchDates )\n\n        const testCollection = []\n      //context.commit(\"SET_MATCHES\", categories)\n\n      if (!fromDate){\n      for (var b=0; b<this.sendBarData.length; b++){\n        if (this.sendBarData[b]['name']==category){\n          console.log('remove it')\n          //this.sendBarData = []\n          this.sendBarData.splice(b, 1);\n          this.$store.dispatch('queryuser/setNewBarChartData',Object.values(this.sendBarData))\n\n              for (var p=0; p<this.sendPieData.length; p++){\n              if (this.sendPieData[p]['name']==category){\n                console.log('remove it pie')\n                //this.sendBarData = []\n                this.sendPieData.splice(p, 1);\n                this.$store.dispatch('queryuser/setPieData',this.sendPieData)\n\n              }else{\n                console.log('add it pie')\n              }\n            }\n\n           return\n        }else{\n          console.log('add it')\n        }\n      }\n\n      }\n\n      await db.collection(category)\n        .orderBy('createdAt').startAt(useDates[0]).endAt(useDates[1])\n        //   , '==', Date.parse('2020-11-17 00:00:00.000'))\n        .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.empty) {\n          // eslint-disable-next-line no-console\n            console.log('cannot find')\n            //this.$router.push('/HelloWorld')\n          }else{\n              var totalCount = 0;\n              querySnapshot.forEach((doc) => {\n              const coll = []\n              const { id } = doc\n              const usingDate = moment(id).format('MMM Do YY')\n\n              doc.data()['events'].forEach((doc) => {\n                var theTime = doc.time.seconds*1000\n                var aTime = parseInt (moment(theTime).format('HH'))\n                //removed age check for now\n                //if (doc.age >= this.lowerAge && doc.age <= this.upperAge){\n                  console.log(this.timerange[0] +'   '+this.timerange[1])\n                  if (aTime >= this.timerange[0] && aTime <= this.timerange[1]){\n                    coll.push({ doc })\n                    totalCount++;\n                  }\n                //}\n              })\n\n              testCollection.push({ [usingDate]: coll })\n\n            })\n             console.log (category +'  '+totalCount)\n             this.sendPieData.push({value: totalCount, name: category})\n             this.$store.dispatch('queryuser/setPieData', this.sendPieData)\n\n          }\n\n        })\n\n      await this.fillGroupChartArray(testCollection, category)\n\n         console.log(this.sendBarData)\n       this.$store.dispatch('queryuser/setNewBarChartData',Object.values(this.sendBarData))\n\n    },\n\n    async searchUsersByEmail() {\n\nconsole.log(  'search user')\n\n      this.isLoading = true\n      this.message = ''\n      this.foundUser = null\n\n      this.challengeList = []\n      this.challengeSMSList = []\n      this.secretList = []\n      this.secretSMSList = []\n      this.timerList = [],\n      this.timerSMSList = [],\n      this.userSMSList = [],\n      this.zoneList = [],\n      this.zoneSMSList = [],\n      this.alarmList = [],\n      this.sendBarData = [],\n      this.sendPieData = []\n\n      var newNumber;\n      if (this.email.substring(0,3)!='+88'){\n        newNumber = '+88'+this.email\n      }else{\n        newNumber = this.email\n      }\n\n\n      const snapshot = await db\n        .collection('users')\n        .where('userPhone', '==', newNumber)\n        .get()\n\n      if (!snapshot.empty) {\n        const userId = snapshot.docs[0].id\n        const userData = snapshot.docs[0].data()\n\n        this.foundUser = {\n          id: userId,\n          ...userData\n        }\n\n        const dbUser = await db.collection('users').doc(userId).get()\n\n        if (dbUser !== null) {\n\n          const queryUserData = dbUser.data()\n\n          await this.$store.dispatch('queryuser/setUserData', {\n            id: dbUser.id,\n            name: queryUserData.username,\n            email: queryUserData.email\n\n          })\n\n          this.searchUserAndDate(userId)\n\n        } else {\n          console.log('NO USER')\n        }\n      } else {\n        this.message = 'No user with that email found.'\n      }\n      this.isLoading = false\n    },\n\n    getDates(startDate, stopDate) {\n      var dateArray = [];\n      var currentDate = moment(startDate);\n      var stopDate = moment(stopDate);\n      while (currentDate <= stopDate) {\n          dateArray.push( moment(currentDate).format('MMM Do YY') )\n          currentDate = moment(currentDate).add(1, 'days');\n      }\n      return dateArray;\n    },\n    async searchUserAndDate(uid) {\n     // console.log(this.dates[0] + ' 00:00:00.000')\n\n      const fullDate1 = Date.parse(this.dates[0])\n      const fullDate2 = Date.parse(this.dates[1])\n\n      if (this.dates[0]==null){\n        return\n      }\n\n      if (this.dates[1]==null){\n        this.dates[1]=this.dates[0]\n      }\n\n      const useDates = []\n\n      if (fullDate1 < fullDate2) {\n        useDates.push(fullDate1)\n        useDates.push(fullDate2)\n      } else {\n        useDates.push(fullDate2)\n        useDates.push(fullDate1)\n      }\n      console.log (useDates)\n\n      this.allSearchDates  = this.getDates(useDates[0], useDates[1])\n\n      this.$store.dispatch('queryuser/setDates',this.allSearchDates )\n\n      const testCollection = []\n      //context.commit(\"SET_MATCHES\", categories)\n\n      db.collection('users').doc(uid)\n        .collection('events')\n        .orderBy('createdAt').startAt(useDates[0]).endAt(useDates[1])\n        // .where('createdAt'\n        //   , '==', Date.parse('2020-11-17 00:00:00.000'))\n        .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.empty) {\n          // eslint-disable-next-line no-console\n            console.log('cannot find')\n          this.$store.dispatch('queryuser/setNewBarChartData',Object.values(this.sendBarData))\n          this.$store.dispatch('queryuser/setPieData', this.sendPieData)\n\n            //this.$router.push('/HelloWorld')\n          } else {\n\n            querySnapshot.forEach((doc) => {\n              const coll = []\n              const { id } = doc\n\n              doc.data()['events'].forEach((doc) => {\n                var theTime = doc.time.seconds*1000\n                var aTime = parseInt (moment(theTime).format('HH'))\n                if (aTime >= this.timemin && aTime <= this.timemax){\n                  coll.push({ doc })\n                }\n              })\n\n              testCollection.push({ [id]: coll })\n\n            })\n\n            this.allResults = testCollection\n            this.createArrays()\n          }\n        })\n\n    },\n    async createArrays(){\n\n    this.allResults.forEach(doc=>{\n      for (const [key, value] of Object.entries(doc)) {\n          console.log(`NEW ${key}: ${value}`)\n\n            var theKey=key\n\n            for (const [akey, avalue] of Object.entries(doc[theKey])) {\n                console.log(`${akey}: ${avalue}`)\n                const usingDate = moment(avalue['doc']['time'].toDate()).format('MMM Do YY')\n\n\n                console.log(usingDate);\n\n                switch (avalue['doc']['category']) {\n                    case 'challenge':\n                        this.challengeList.push({ [usingDate] :avalue['doc']})\n                        //this.challengeList.push(avalue['doc'])\n                        break;\n                    case 'challenge-sms':\n                        this.challengeSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'secret':\n                        this.secretList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'secret-sms':\n                        this.secretSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'timer':\n                        this.timerList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'timer-sms':\n                        this.timerSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'user-sms':\n                        this.userSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'zone':\n                        this.zoneList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'zones-sms':\n                        this.zoneSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'alarm':\n                        this.alarmList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    default:\n                        break;\n                }\n             }\n\n            }\n    })\n\n    this.selectChartColumns()\n\n  },\n\n  async selectChartColumns(){\n\n    this.sendBarData=[]\n    this.sendPieData=[]\n\n    console.log(this.alarmList)\n\n if (this.challengeList.length>0 && this.challengeCheck){\n      this.sendPieData.push({value: this.challengeList.length, name: 'Confront'})\n      await this.fillChartArray(this.challengeList, 'Confront')\n    }\n\n    if (this.challengeSMSList.length>0 && this.challengeSMSCheck){\n      this.sendPieData.push({value: this.challengeSMSList.length, name: 'Confront SMS'})\n      await this.fillChartArray(this.challengeSMSList, 'Confront SMS')\n    }\n\n    if (this.secretList.length>0 && this.secretCheck){\n      this.sendPieData.push({value: this.secretList.length, name: 'Secret'})\n      await this.fillChartArray(this.secretList, 'Secret')\n    }\n\n    if (this.secretSMSList.length>0 && this.secretSMSCheck){\n      this.sendPieData.push({value: this.secretSMSList.length, name: 'Secret SMS'})\n      await this.fillChartArray(this.secretSMSList, 'Secret SMS')\n    }\n\n    if (this.timerList.length>0 && this.timerCheck){\n      this.sendPieData.push({value: this.timerList.length, name: 'Timer'})\n      await this.fillChartArray(this.timerList, 'Timer')\n    }\n\n    if (this.timerSMSList.length>0 && this.timerSMSCheck){\n      this.sendPieData.push({value: this.timerSMSList.length, name: 'Timer SMS'})\n      await this.fillChartArray(this.timerSMSList, 'Timer SMS')\n    }\n\n    if (this.zoneList.length>0 && this.zoneCheck){\n      this.sendPieData.push({value: this.zoneList.length, name: 'Zone'})\n      await this.fillChartArray(this.zoneList, 'Zone')\n    }\n\n    if (this.zoneSMSList.length>0 && this. zoneSMSCheck){\n      this.sendPieData.push({value: this.zoneSMSList.length, name: 'Zone SMS'})\n      await this.fillChartArray(this.zoneSMSList, 'Zone SMS')\n    }\n\n    if (this.userSMSList.length>0 && this.userSMSCheck){\n      this.sendPieData.push({value: this.userSMSList.length, name: 'User SMS'})\n      await this.fillChartArray(this.userSMSList, 'User SMS')\n    }\n\n    if (this.alarmList.length>0 && this.alarmCheck){\n      this.sendPieData.push({value: this.alarmList.length, name: 'Alarm'})\n      await this.fillChartArray(this.alarmList, 'Alarm')\n    }\n\n    console.log(this.sendPieData)\n     this.$store.dispatch('queryuser/setNewBarChartData',Object.values(this.sendBarData))\n     this.$store.dispatch('queryuser/setPieData', this.sendPieData)\n\n  },\n\n  async fillChartArray(createdList, category){\n\n    var tabulatedList = {}\n\n    for (var t=0; t<this.allSearchDates.length; t++){\n      Object.assign(tabulatedList, {[this.allSearchDates[t]]: 0});\n    }\n\n    for (var i=0; i<createdList.length; i++){\n    for (const [key, value] of Object.entries(createdList[i])) {\n          console.log(`NEW ${key}: ${value}`)\n          tabulatedList[key]++\n          //tabulatedList[key] = value.length\n        }\n    }\n\n  console.log(tabulatedList)\n\n    await this.sendBarData.push({name: category, data: Object.values(tabulatedList)})\n\n    return\n  },\n\n  async fillGroupChartArray(createdList, category){\n\n    var tabulatedList = {}\n\n    for (var t=0; t<this.allSearchDates.length; t++){\n      Object.assign(tabulatedList, {[this.allSearchDates[t]]: 0});\n    }\n\n    for (var i=0; i<createdList.length; i++){\n    for (const [key, value] of Object.entries(createdList[i])) {\n          console.log(`NEW ${key}: ${value}`)\n\n          tabulatedList[key] = value.length\n\n          //get values below e.g. map locations\n\n          // for (var v=0; v<value.length; v++){\n          //   console.log (value[v]['doc']['eventId'])\n          // }\n\n        }\n    }\n\n  //console.log(tabulatedList)\n\n    await this.sendBarData.push({name: category, data: Object.values(tabulatedList)})\n\n    return\n  }\n\n\n\n  }\n}\n</script>\n"],"sourceRoot":"src/pages/dashboard"}]}