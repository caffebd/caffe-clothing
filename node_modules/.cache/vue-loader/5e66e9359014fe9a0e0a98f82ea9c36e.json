{"remainingRequest":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/caffe-clothing/src/apps/newsfeed/components/NewsfeedList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/caffe-clothing/src/apps/newsfeed/components/NewsfeedList.vue","mtime":1607178934449},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JwoKLyoKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8IFRvRG8gTGlzdCBDb21wb25lbnQKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8CnwgVGFzayBsaXN0ZXIKfAoqLwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCcKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICAvLyB0YXNrIGxpc3QKICAgIG5ld3NmZWVkOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbHRlcjogJycKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZSgnbmV3c2ZlZWQtYXBwJywgWyduZXdzZmVlZGxhYmVscyddKSwKICAgIHZpc2libGVuZXdzZmVlZCgpIHsKICAgICAgaWYgKCF0aGlzLmZpbHRlcikKICAgICAgcmV0dXJuIHRoaXMubmV3c2ZlZWQuc29ydCgoYSwgYikgPT4gKGEuc29ydERhdGUgPCBiLnNvcnREYXRlKSA/IDEgOiAtMSkKCiAgICAgIHJldHVybiB0aGlzLm5ld3NmZWVkLmZpbHRlcigodCkgPT4gewogICAgICAgIHJldHVybiBCb29sZWFuKE9iamVjdC52YWx1ZXModCkuZmlsdGVyKChwcm9wKSA9PiB0eXBlb2YgcHJvcCA9PT0gJ3N0cmluZycpLmZpbmQoKGl0ZW0pID0+IGl0ZW0udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh0aGlzLmZpbHRlci50b0xvd2VyQ2FzZSgpKSkpCiAgICAgIH0pCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBNdXRhdGlvbnMoJ25ld3NmZWVkLWFwcCcsIHsKICAgICAgc2V0Q29tcGxldGU6ICduZXdzZmVlZENvbXBsZXRlZCcsCiAgICAgIHNldEluY29tcGxldGU6ICduZXdzZmVlZEluY29tcGxldGUnLAogICAgICBkZWxldGVOZXdzZmVlZDogJ2RlbGV0ZU5ld3NmZWVkJwogICAgfSksCiAgICByZWFkYWJsZVRpbWUoc2Vjb25kcyl7CiAgICAgIHJldHVybiBtb21lbnQobmV3IERhdGUoc2Vjb25kcykpLmZvcm1hdCgnRG8gTU1NIFlZIC0tIEg6bScpCiAgICB9LAogICAgZ2V0TGFiZWxDb2xvcihpZCkgewogICAgICBjb25zdCBsYWJlbCA9IHRoaXMubmV3c2ZlZWRsYWJlbHMuZmluZCgobCkgPT4gbC5pZCA9PT0gaWQpCgogICAgICByZXR1cm4gbGFiZWwgPyBsYWJlbC5jb2xvciA6ICcnCiAgICB9LAogICAgZ2V0TGFiZWxUaXRsZShpZCkgewoKICAgICAgY29uc3QgbGFiZWwgPSB0aGlzLm5ld3NmZWVkbGFiZWxzLmZpbmQoKGwpID0+IGwuaWQgPT09IGlkKQoKICAgICAgcmV0dXJuIGxhYmVsID8gbGFiZWwudGl0bGUgOiAnJwogICAgfSwKICAgIGJlZ2luRGVsZXRlKHRhc2spewogICAgICBjb25zb2xlLmxvZyh0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmlzQWRtaW4pCiAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmlzQWRtaW4pewogICAgICAgIHRoaXMuZGVsZXRlTmV3c2ZlZWQodGFzaykKICAgICAgfQogICAgfSwKICB9Cn0K"},{"version":3,"sources":["NewsfeedList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NewsfeedList.vue","sourceRoot":"src/apps/newsfeed/components","sourcesContent":["<template>\n  <v-card class=\"min-w-0\">\n    <v-text-field\n      v-model=\"filter\"\n      class=\"pa-1 py-2 newsfeed-filter elevation-1\"\n      placeholder=\"Filter news\"\n      prepend-inner-icon=\"mdi-magnify\"\n      hide-details\n      block\n      clearable\n      solo\n      flat\n    ></v-text-field>\n\n    <v-divider></v-divider>\n\n    <div v-if=\"newsfeed.length === 0\">\n      <div class=\"px-1 py-6 text-center\">No news</div>\n    </div>\n\n    <v-slide-y-transition\n      v-else\n      group\n      tag=\"div\"\n    >\n      <div v-for=\"task in visiblenewsfeed\" :key=\"task.id\" @click=\"$emit('edit-newsfeed', task)\" class=\"d-flex pa-2 task-item align-center\" >\n        <!-- @click=\"$emit('edit-task', task)\" was in above line-->\n        <!-- <v-checkbox\n          :input-value=\"task.completed\"\n          class=\"mt-0 pt-0\"\n          hide-details\n          off-icon=\"mdi-checkbox-blank-circle-outline\"\n          on-icon=\"mdi-checkbox-marked-circle\"\n          @click.stop=\"task.completed ? setIncomplete(task) : setComplete(task)\"\n        ></v-checkbox> -->\n\n        <div class=\"task-item-content flex-grow-1\" :class=\"{ 'complete': task.completed }\">\n          <div>\n            <v-chip\n              v-for=\"label in task.label\"\n              :key=\"label\"\n              :color=\"getLabelColor(label)\"\n              class=\"font-weight-bold mt-1 mr-1\"\n              outlined\n              x-small\n            >\n              {{ getLabelTitle(label) }}\n            </v-chip>\n          </div>\n          <div><p></p></div>\n          <div>\n              <p class=\"d-inline pa-2\">Code: {{task.fullCode}}</p><p class=\"d-inline pa-2\">Title: {{task.title}}</p>\n           </div>\n           <div>\n              <p class=\"d-inline pa-2\">Age: {{task.age}}</p><p class=\"d-inline pa-2\">Size: {{task.size}}</p>\n          </div>\n           <div>\n              <p class=\"d-inline pa-2\">Colour: {{task.colour}}</p><p class=\"d-inline pa-2\">Material: {{task.material}}</p>\n          </div>\n           <div>\n              <p class=\"d-inline pa-2\">Qty: {{task.qty}}</p><p class=\"d-inline pa-2\">Price: {{task.price}}</p>\n          </div>\n\n          <br>\n  <v-row>\n    <v-col\n      v-for=\"anImage in task.images\" v-bind:key=\"anImage.id\"\n      class=\"d-flex child-flex\"\n      cols=\"4\"\n    >\n      <v-img\n        :src=\"anImage\"\n        aspect-ratio=\"1\"\n        class=\"grey lighten-2\"\n      >\n        <template v-slot:placeholder>\n          <v-row\n            class=\"fill-height ma-0\"\n            align=\"center\"\n            justify=\"center\"\n          >\n            <v-progress-circular\n              indeterminate\n              color=\"grey lighten-5\"\n            ></v-progress-circular>\n          </v-row>\n        </template>\n      </v-img>\n    </v-col>\n  </v-row>\n\n        </div>\n\n        <div v-show=\"$store.state.user.isAdmin\" class=\"d-flex align-center\">\n          <v-btn v-show=\"$store.state.user.isAdmin\" icon @click.stop=\"beginDelete(task)\">\n            <v-icon>mdi-delete-outline</v-icon>\n          </v-btn>\n        </div>\n      </div>\n    </v-slide-y-transition>\n  </v-card>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\n\n/*\n|---------------------------------------------------------------------\n| ToDo List Component\n|---------------------------------------------------------------------\n|\n| Task lister\n|\n*/\nimport moment from 'moment'\nexport default {\n  props: {\n    // task list\n    newsfeed: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      filter: ''\n    }\n  },\n  computed: {\n    ...mapState('newsfeed-app', ['newsfeedlabels']),\n    visiblenewsfeed() {\n      if (!this.filter)\n      return this.newsfeed.sort((a, b) => (a.sortDate < b.sortDate) ? 1 : -1)\n\n      return this.newsfeed.filter((t) => {\n        return Boolean(Object.values(t).filter((prop) => typeof prop === 'string').find((item) => item.toLowerCase().includes(this.filter.toLowerCase())))\n      })\n    }\n  },\n  methods: {\n    ...mapMutations('newsfeed-app', {\n      setComplete: 'newsfeedCompleted',\n      setIncomplete: 'newsfeedIncomplete',\n      deleteNewsfeed: 'deleteNewsfeed'\n    }),\n    readableTime(seconds){\n      return moment(new Date(seconds)).format('Do MMM YY -- H:m')\n    },\n    getLabelColor(id) {\n      const label = this.newsfeedlabels.find((l) => l.id === id)\n\n      return label ? label.color : ''\n    },\n    getLabelTitle(id) {\n\n      const label = this.newsfeedlabels.find((l) => l.id === id)\n\n      return label ? label.title : ''\n    },\n    beginDelete(task){\n      console.log(this.$store.state.user.isAdmin)\n      if (this.$store.state.user.isAdmin){\n        this.deleteNewsfeed(task)\n      }\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.newsfeed-filter {\n  position: sticky;\n  background-color: var(--v-background-base) !important;\n  z-index: 2;\n  top: 0;\n}\n\n.task-item {\n  cursor: pointer;\n  border-bottom: 1px solid rgba(100, 100, 100, 0.1);\n\n  &:hover {\n    background-color: rgba(100, 100, 100, 0.1);\n  }\n\n  .task-item-content {\n    &.complete {\n      text-decoration: line-through;\n    }\n  }\n}\n</style>\n"]}]}