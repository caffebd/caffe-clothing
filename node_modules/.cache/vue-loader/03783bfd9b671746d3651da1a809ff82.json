{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/apps/chat/pages/ChannelPage.vue?vue&type=style&index=0&id=d2d00478&lang=scss&scoped=true&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/apps/chat/pages/ChannelPage.vue","mtime":1597249840000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8vIExpc3QgVHJhbnNpdGlvbiBBbmltYXRpb24KLmxpc3QtZW50ZXItYWN0aXZlIHsKICB0cmFuc2l0aW9uOiBhbGwgMC4zczsKfQoKLmxpc3QtbW92ZSB7CiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7Cn0KCi5saXN0LWVudGVyLAoubGlzdC1sZWF2ZS10byB7CiAgb3BhY2l0eTogMDsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwcHgpOwp9Ci8vIC0tIEVuZCBMaXN0IFRyYW5zaXRpb24gQW5pbWF0aW9uCgouY2hhbm5lbC1wYWdlIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiA2NXB4OwogIGJvdHRvbTogMDsKICBsZWZ0OiAwOwogIHJpZ2h0OiAwOwogIHdpZHRoOiAxMDAlOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBiYWNrZ3JvdW5kOiB1cmwoIi9pbWFnZXMvY2hhdC9jaGF0LWJnLTIucG5nIik7CgogIC5tZXNzYWdlcyB7CiAgICBmbGV4LWdyb3c6IDE7CiAgICBtYXJnaW4tYm90dG9tOiA2OHB4OwogICAgb3ZlcmZsb3cteTogc2Nyb2xsOwogICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOwogICAgbWluLWhlaWdodDogMDsKICB9CgogIC5pbnB1dC1ib3ggewogICAgcG9zaXRpb246IGZpeGVkOwogICAgYm90dG9tOiAxMnB4OwogICAgd2lkdGg6IDEwMCU7CiAgfQoKICAubWVzc2FnZXMgewogICAgcGFkZGluZy1ib3R0b206IDBweDsKICB9CgogIC5pbnB1dC1ib3ggewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiAxMnB4OwogIH0KfQoKLnRoZW1lLS1kYXJrIHsKICAuY2hhbm5lbC1wYWdlIHsKICAgIGJhY2tncm91bmQ6IG5vbmU7CiAgfQp9Cg=="},{"version":3,"sources":["ChannelPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ChannelPage.vue","sourceRoot":"src/apps/chat/pages","sourcesContent":["<template>\n  <div>\n    <!-- channel toolbar -->\n    <v-app-bar flat height=\"64\">\n      <v-app-bar-nav-icon class=\"hidden-lg-and-up\" @click=\"$emit('toggle-menu')\"></v-app-bar-nav-icon>\n      <div class=\"title font-weight-bold\"># {{ $route.params.id }}</div>\n\n      <v-spacer></v-spacer>\n\n      <v-btn class=\"mx-1\" icon @click.stop=\"usersDrawer = !usersDrawer\">\n        <v-icon>mdi-account-group-outline</v-icon>\n      </v-btn>\n    </v-app-bar>\n\n    <v-divider></v-divider>\n\n    <!-- channel messages -->\n    <div class=\"channel-page\">\n      <div id=\"messages\" ref=\"messages\" class=\"messages mx-2\">\n        <transition-group name=\"list\">\n          <channel-message\n            v-for=\"message in messages\"\n            :key=\"message.id\"\n            :message=\"message\"\n            :user=\"user\"\n            class=\"my-4 d-flex\"\n          />\n        </transition-group>\n      </div>\n\n      <div class=\"input-box pa-2\">\n        <input-box :channel=\"channel\" @send-message=\"sendMessage\" />\n      </div>\n    </div>\n\n    <!-- online users drawer -->\n    <v-navigation-drawer\n      v-model=\"usersDrawer\"\n      width=\"180\"\n      :right=\"!$vuetify.rtl\"\n      app\n    >\n      <v-list dense>\n        <v-subheader class=\"mx-1 overline\">\n          {{ $t('chat.online', { count: users.length }) }}\n        </v-subheader>\n        <v-list-item v-for=\"item in users\" :key=\"item.id\" class=\"mb-1\">\n          <user-avatar :user=\"item\" class=\"mx-1\" />\n          <v-list-item-content>\n            <v-list-item-title :class=\"{ 'primary--text': item.id === user.id }\">{{ item.name }}</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n  </div>\n</template>\n\n<script>\nimport InputBox from '../components/InputBox'\nimport UserAvatar from '../components/UserAvatar'\nimport ChannelMessage from '../components/ChannelMessage'\n\n// Demo messages and users\nimport getMessage, { users } from '../content/messages'\n\n/*\n|---------------------------------------------------------------------\n| Chat Channel Page Component\n|---------------------------------------------------------------------\n|\n| Layout to display the channel messages and users online\n|\n*/\nexport default {\n  components: {\n    InputBox,\n    UserAvatar,\n    ChannelMessage\n  },\n  props: {\n    // Current logged user\n    user: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      // users online drawer\n      usersDrawer: true,\n\n      // channel information and messages\n      channel: '',\n      messages: [],\n\n      // online users\n      users: [\n        this.user,\n        ...users\n      ],\n\n      // demo random message timeout\n      timeoutGenerator: null\n    }\n  },\n  watch: {\n    '$route.params.id'() {\n      this.startChannel(this.$route.params.id)\n    }\n  },\n  mounted() {\n    this.startChannel(this.$route.params.id)\n  },\n  beforeDestroy() {\n    clearTimeout(this.timeoutGenerator)\n  },\n  methods: {\n    startChannel(channelId) {\n      clearTimeout(this.timeoutGenerator)\n\n      this.messages = []\n\n      // DEMO: generate random message to fill the channel\n      this.messages.push(getMessage())\n      this.messages.push(getMessage())\n      this.messages.push(getMessage(this.user))\n      this.messages.push(getMessage())\n\n      this.channel = channelId\n\n      this.sendRandom()\n    },\n    // Random message generator\n    sendRandom() {\n      this.timeoutGenerator = setTimeout(() => {\n        this.messages.push(getMessage())\n        this.scrollToBottom()\n        this.sendRandom()\n      }, 1000 * (Math.floor(Math.random() * 15) + 1))\n    },\n    // Send message to channel\n    sendMessage(message) {\n      this.messages.push({\n        id: '_' + Math.random().toString(36).substr(2, 9),\n        user: this.user,\n        text: message,\n        timestamp: (new Date()).getTime()\n      })\n\n      this.scrollToBottom()\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        this.$refs.messages.scrollTop = this.$refs.messages.scrollHeight\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n// List Transition Animation\n.list-enter-active {\n  transition: all 0.3s;\n}\n\n.list-move {\n  transition: transform 0.3s;\n}\n\n.list-enter,\n.list-leave-to {\n  opacity: 0;\n  transform: translateX(-10px);\n}\n// -- End List Transition Animation\n\n.channel-page {\n  position: absolute;\n  top: 65px;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background: url(\"/images/chat/chat-bg-2.png\");\n\n  .messages {\n    flex-grow: 1;\n    margin-bottom: 68px;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n    min-height: 0;\n  }\n\n  .input-box {\n    position: fixed;\n    bottom: 12px;\n    width: 100%;\n  }\n\n  .messages {\n    padding-bottom: 0px;\n  }\n\n  .input-box {\n    position: absolute;\n    bottom: 12px;\n  }\n}\n\n.theme--dark {\n  .channel-page {\n    background: none;\n  }\n}\n</style>\n"]}]}