{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/apps/email/components/EmailInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/apps/email/components/EmailInput.vue","mtime":1598330424000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qCnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KfCBFbWFpbCBJbnB1dCBDb21wb25lbnQKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8CnwgQWRkIGFuZCByZW1vdmUgZW1haWxzIGlucHV0CnwKKi8KZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICAvLyBJbnB1dCBsYWJlbAogICAgbGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIC8vIEVtYWlsIGFkZHJlc3NlcwogICAgYWRkcmVzc2VzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1vZGVsOiBbXSwKICAgICAgc2VhcmNoOiBudWxsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgaXRlbXMoKSB7CiAgICAgIGlmICghdGhpcy5zZWFyY2gpIHJldHVybiBbXQoKICAgICAgcmV0dXJuICBbewogICAgICAgIHRleHQ6ICdVYmFsZG8gUm9tYWd1ZXJhJywKICAgICAgICBlbWFpbDogJ3ViYWxkb0Bub3RhcmVhbGVtYWlsYWRkcmVzcy5jb20nLAogICAgICAgIGF2YXRhcjogJy9pbWFnZXMvYXZhdGFycy9hdmF0YXIxLnN2ZycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdSdWJlbiBCcmVpdGVuYmVyZycsCiAgICAgICAgZW1haWw6ICdydWJlbkBub3RhcmVhbGVtYWlsYWRkcmVzcy5jb20nLAogICAgICAgIGF2YXRhcjogJy9pbWFnZXMvYXZhdGFycy9hdmF0YXIyLnN2ZycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdCbGF6ZSBDYXJ0ZXInLAogICAgICAgIGVtYWlsOiAnYmxhemVAbm90YXJlYWxlbWFpbGFkZHJlc3MuY29tJywKICAgICAgICBhdmF0YXI6ICcvaW1hZ2VzL2F2YXRhcnMvYXZhdGFyMy5zdmcnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnQmVybml0YSBMZWhuZXInLAogICAgICAgIGVtYWlsOiAnYmVybml0YUBub3RhcmVhbGVtYWlsYWRkcmVzcy5jb20nLAogICAgICAgIGF2YXRhcjogJy9pbWFnZXMvYXZhdGFycy9hdmF0YXI0LnN2ZycKICAgICAgfV0KICAgIH0KICB9LAoKICB3YXRjaDogewogICAgbW9kZWwgKHZhbCwgcHJldikgewogICAgICBpZiAodmFsLmxlbmd0aCA9PT0gcHJldi5sZW5ndGgpIHJldHVybgoKICAgICAgdGhpcy5tb2RlbCA9IHZhbC5tYXAoKHYpID0+IHsKICAgICAgICBpZiAodHlwZW9mIHYgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICB2ID0gewogICAgICAgICAgICB0ZXh0OiB2LAogICAgICAgICAgICBlbWFpbDogdgogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuaXRlbXMucHVzaCh2KQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHYKICAgICAgfSkKCiAgICAgIHRoaXMuc2VhcmNoID0gJycKICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy5tb2RlbCA9IHRoaXMuYWRkcmVzc2VzCiAgfSwKCiAgbWV0aG9kczogewogICAgZmlsdGVyIChpdGVtLCBxdWVyeVRleHQsIGl0ZW1UZXh0KSB7CiAgICAgIGNvbnN0IGhhc1ZhbHVlID0gKHZhbCkgPT4gdmFsICE9PSBudWxsID8gdmFsIDogJycKCiAgICAgIGNvbnN0IHRleHQgPSBoYXNWYWx1ZShpdGVtVGV4dCkKICAgICAgY29uc3QgcXVlcnkgPSBoYXNWYWx1ZShxdWVyeVRleHQpCgogICAgICByZXR1cm4gdGV4dC50b1N0cmluZygpCiAgICAgICAgLnRvTG93ZXJDYXNlKCkKICAgICAgICAuaW5kZXhPZihxdWVyeS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpID4gLTEKICAgIH0KICB9Cn0K"},{"version":3,"sources":["EmailInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"EmailInput.vue","sourceRoot":"src/apps/email/components","sourcesContent":["<template>\n  <v-combobox\n    v-model=\"model\"\n    :filter=\"filter\"\n    :hide-no-data=\"!search\"\n    :items=\"items\"\n    :search-input.sync=\"search\"\n    :label=\"label\"\n    hide-selected\n    hide-details\n    append-icon=\"\"\n    solo\n    flat\n    full-width\n    multiple\n  >\n    <template v-slot:append-outer>\n      <slot></slot>\n    </template>\n\n    <template v-slot:selection=\"{ attrs, item, parent, selected }\">\n      <v-chip\n        v-if=\"item === Object(item)\"\n        v-bind=\"attrs\"\n        class=\"font-weight-bold\"\n        color=\"primary lighten-5 primary--text\"\n        :input-value=\"selected\"\n        label\n      >\n        <span class=\"pr-2\">\n          {{ item.text }}\n        </span>\n        <v-icon\n          small\n          @click=\"parent.selectItem(item)\"\n        >close</v-icon>\n      </v-chip>\n    </template>\n\n    <template v-slot:item=\"{ index, item }\">\n      <v-list-item-avatar>\n        <img :src=\"item.avatar\" />\n      </v-list-item-avatar>\n\n      <v-list-item-content>\n        <v-list-item-title>{{ item.text }}</v-list-item-title>\n        <v-list-item-subtitle>{{ item.email }}</v-list-item-subtitle>\n      </v-list-item-content>\n    </template>\n  </v-combobox>\n</template>\n\n<script>\n/*\n|---------------------------------------------------------------------\n| Email Input Component\n|---------------------------------------------------------------------\n|\n| Add and remove emails input\n|\n*/\nexport default {\n  props: {\n    // Input label\n    label: {\n      type: String,\n      default: ''\n    },\n    // Email addresses\n    addresses: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      model: [],\n      search: null\n    }\n  },\n  computed: {\n    items() {\n      if (!this.search) return []\n\n      return  [{\n        text: 'Ubaldo Romaguera',\n        email: 'ubaldo@notarealemailaddress.com',\n        avatar: '/images/avatars/avatar1.svg'\n      }, {\n        text: 'Ruben Breitenberg',\n        email: 'ruben@notarealemailaddress.com',\n        avatar: '/images/avatars/avatar2.svg'\n      }, {\n        text: 'Blaze Carter',\n        email: 'blaze@notarealemailaddress.com',\n        avatar: '/images/avatars/avatar3.svg'\n      }, {\n        text: 'Bernita Lehner',\n        email: 'bernita@notarealemailaddress.com',\n        avatar: '/images/avatars/avatar4.svg'\n      }]\n    }\n  },\n\n  watch: {\n    model (val, prev) {\n      if (val.length === prev.length) return\n\n      this.model = val.map((v) => {\n        if (typeof v === 'string') {\n          v = {\n            text: v,\n            email: v\n          }\n\n          this.items.push(v)\n        }\n\n        return v\n      })\n\n      this.search = ''\n    }\n  },\n\n  mounted() {\n    this.model = this.addresses\n  },\n\n  methods: {\n    filter (item, queryText, itemText) {\n      const hasValue = (val) => val !== null ? val : ''\n\n      const text = hasValue(itemText)\n      const query = hasValue(queryText)\n\n      return text.toString()\n        .toLowerCase()\n        .indexOf(query.toString().toLowerCase()) > -1\n    }\n  }\n}\n</script>\n"]}]}