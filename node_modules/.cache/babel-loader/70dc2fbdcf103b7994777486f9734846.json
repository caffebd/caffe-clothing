{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js!/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/pages/dashboard/MapsPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/pages/dashboard/MapsPage.vue","mtime":1606637024417},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MapsPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"d-flex flex-grow-1 flex-column\">\n  <!-- Tabs -->\n    <v-card>\n      <map-card\n        class=\"h-full\"\n        style=\"min-height: 380px\"\n        :value=\"1837.32\"\n        :percentage=\"3.2\"\n        :loading=\"isLoading1\"\n        :percentage-label=\"$t('dashboard.lastweek')\"\n        :action-label=\"$t('dashboard.viewReport')\"\n      ></map-card>\n     </v-card>\n\n    <!-- Group/Individual or Event Selection-->\n    <v-card class=\"grey lighten-5 mt-2\">\n      <v-container>\n        <v-row>\n          <!-- Group Switch -->\n          <v-col cols=\"3\" class=\"title cyan lighten-4 white--text\">\n              <v-switch\n              class=\"ml-4\"\n              inset\n              v-model=\"mode\"\n              color=\"red\"\n              :label=\"`Mode: ${chartType.toString()}`\"\n              @change=\"toggleChartType($event)\"\n              ></v-switch>\n          </v-col>\n\n          <!-- Date Selection -->\n          <v-col cols=\"3\" class=\"deep-purple lighten-4 white--text\">\n            <v-dialog\n              ref=\"dialog\"\n              v-model=\"modal\"\n              :return-value.sync=\"dates\"\n              persistent\n              width=\"290px\"\n            >\n              <template v-slot:activator=\"{ on, attrs }\">\n              <v-text-field\n              v-model=\"dates\"\n              class=\"title\"\n              label=\"Select Date Range\"\n              prepend-icon=\"mdi-calendar\"\n              readonly\n              v-bind=\"attrs\"\n              v-on=\"on\"\n              ></v-text-field>\n              </template>\n\n              <v-date-picker\n                v-model=\"dates\"\n                range\n              >\n                <v-spacer></v-spacer>\n                <v-btn\n                text\n                color=\"primary\"\n                @click=\"modal = false\"\n                >\n                  Cancel\n                </v-btn>\n\n                <v-btn\n                text\n                color=\"primary\"\n                @click=\"$refs.dialog.save(dates); dateChangedChecker()\"\n                >\n                OK\n                </v-btn>\n              </v-date-picker>\n            </v-dialog>\n          </v-col>\n\n          <!-- Time Range Selection -->\n          <v-col cols=\"3\" class=\"green lighten-4 mt-0 pt-1\">\n            <v-subheader class=\"justify-center title\">Select time range</v-subheader>\n            <v-range-slider\n              v-model=\"timerange\"\n              :max=\"timemax\"\n              :min=\"timemin\"\n              hide-details\n              class=\"align-center\"\n              @change=\"dateChangedChecker()\"\n            >\n            <template v-slot:prepend>\n              <v-text-field\n                :value=\"timerange[0]\"\n                class=\"mt-0 pt-0\"\n                hide-details\n                single-line\n                type=\"number\"\n                style=\"width: 60px;\"\n                @change=\"$set(timerange, 0, $event); dateChangedChecker()\"\n              ></v-text-field>\n            </template>\n            <template v-slot:append>\n              <v-text-field\n                :value=\"timerange[1]\"\n                class=\"mt-0 pt-0\"\n                hide-details\n                single-line\n                type=\"number\"\n                style=\"width: 60px\"\n                @change=\"$set(timerange, 1, $event); dateChangedChecker()\"\n              ></v-text-field>\n            </template>\n          </v-range-slider>\n          </v-col>\n\n          <!-- Age Range Selection -->\n          <v-col cols=\"3\" v-show=\"!mode\"  class=\"blue lighten-4 mt-0 pt-1\">\n\n            <v-subheader class=\"justify-center title\">Set min and max age</v-subheader>\n            <v-range-slider\n              v-model=\"range\"\n              :max=\"max\"\n              :min=\"min\"\n              hide-details\n              class=\"align-center\"\n              @change=\"dateChangedChecker()\"\n            >\n            <template v-slot:prepend>\n              <v-text-field\n                :value=\"range[0]\"\n                class=\"mt-0 pt-0\"\n                hide-details\n                single-line\n                type=\"number\"\n                style=\"width: 60px\"\n                @change=\"$set(range, 0, $event); dateChangedChecker()\"\n              ></v-text-field>\n            </template>\n            <template v-slot:append>\n              <v-text-field\n                :value=\"range[1]\"\n                class=\"mt-0 pt-0\"\n                hide-details\n                single-line\n                type=\"number\"\n                style=\"width: 60px\"\n                @change=\"$set(range, 1, $event);dateChangedChecker()\"\n              ></v-text-field>\n            </template>\n          </v-range-slider>\n          </v-col>\n\n\n          <!-- Search with Number -->\n          <v-col cols=\"3\" v-show=\"mode\" class=\"green lighten-4  mb-0 pb-0 pt-4\">\n            <span class=\"d-inline-flex\">\n            <v-text-field\n              v-model=\"email\"\n              color=\"title\"\n              outlined\n              label='Enter mobile number'\n              type='text'\n            ></v-text-field>\n            <v-btn\n              @click=\"searchUsersByEmail\"\n              x-large\n              elevation=\"4\"\n              class=\"ml-2\"\n              color=\"primary\"\n            >\n            <v-icon left>\n              large\n              mdi-feature-search-outline\n            </v-icon>\n              Search\n            </v-btn>\n            </span>\n          </v-col>\n        </v-row>\n\n        <!-- Event Selection -->\n\n        <v-row>\n          <v-col cols=\"6\" class=\"ml-0 px-0 outlined\">\n            <v-card class=\"red lighten-5 pb-4 mr-1 px-0\">\n              <v-card-title class=\"red lighten-1 justify-center\">\n                <v-icon\n                      left\n                      large\n                      color=\"white lighten-2\">mdi-alarm-light-outline\n                    </v-icon>\n                    <span class=\"headline white--text\">SOS</span>\n              </v-card-title>\n            <v-divider></v-divider>\n\n            <v-row class=\"flex-grow-0\" dense>\n              <v-col cols=\"4\">\n                <v-checkbox\n                  class=\"px-2 pt-1\"\n                  v-model=\"challengeCheck\"\n                  label=\"Confront\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('challenge')\"\n                  hide-details\n                ></v-checkbox>\n\n                <v-checkbox\n                  class=\"px-2\"\n                  v-model=\"challengeSMSCheck\"\n                  label=\"Confront SMS\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('challenge-sms')\"\n                  hide-details\n                ></v-checkbox>\n              </v-col>\n\n                <v-col cols=\"4\">\n                <v-checkbox\n                  class=\"px-2 pt-1\"\n                  v-model=\"userSMSCheck\"\n                  label=\"User SMS\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('user-sms')\"\n                  hide-details\n                ></v-checkbox>\n\n                <v-checkbox\n                  class=\"px-2\"\n                  v-model=\"alarmCheck\"\n                  label=\"Alarm\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('alarm')\"\n                  hide-details\n                ></v-checkbox>\n              </v-col>\n\n              <v-col cols=\"4\">\n                <v-checkbox\n                  class=\"px-2 pt-1\"\n                  v-model=\"secretCheck\"\n                  label=\"Secret\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('secret')\"\n                  hide-details\n                ></v-checkbox>\n\n                <v-checkbox\n                  class=\"px-2\"\n                  v-model=\"secretSMSCheck\"\n                  label=\"Secret SMS\"\n                  color=\"primary\"\n                  v-on:change=\"checkBoxTest('secret-sms')\"\n                  hide-details\n                ></v-checkbox>\n              </v-col>\n            </v-row>\n            </v-card>\n          </v-col>\n\n          <v-col cols=\"3\" class=\"px-1\">\n            <v-card class=\"green lighten-5 pb-4\">\n              <v-card-title class=\"green lighten-1 justify-center\">\n                <v-icon\n                      left\n                      large\n                      color=\"white darken-2\">mdi-road-variant\n                    </v-icon>\n                    <span class=\"headline white--text\">Travel</span>\n              </v-card-title>\n\n              <v-checkbox\n                class=\"px-2 pt-2\"\n                v-model=\"zoneCheck\"\n                label=\"Zone\"\n                color=\"primary\"\n                v-on:change=\"checkBoxTest('zone')\"\n                hide-details\n              ></v-checkbox>\n\n              <v-checkbox\n                class=\"px-2\"\n                v-model=\"zoneSMSCheck\"\n                label=\"Zone SMS\"\n                color=\"primary\"\n                v-on:change=\"checkBoxTest('zones-sms')\"\n                hide-details\n              ></v-checkbox>\n            </v-card>\n          </v-col>\n\n          <v-col cols=\"3\" class=\"px-1\">\n            <v-card class=\"amber lighten-5 pb-4\">\n              <v-card-title class=\"amber darken-1 justify-center\">\n                <v-icon\n                      left\n                      large\n                      color=\"white darken-2\">mdi-alarm\n                    </v-icon>\n                    <span class=\"headline white--text\">Reminder</span>\n              </v-card-title>\n\n              <v-checkbox\n              class=\"px-2 pt-2\"\n              v-model=\"timerCheck\"\n              label=\"Reminder\"\n              color=\"primary\"\n              v-on:change=\"checkBoxTest('timer')\"\n              hide-details\n            ></v-checkbox>\n\n            <v-checkbox\n              class=\"px-2\"\n              v-model=\"timerSMSCheck\"\n              label=\"Reminder SMS\"\n              color=\"primary\"\n              v-on:change=\"checkBoxTest('timer-sms')\"\n              hide-details\n            ></v-checkbox>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card>\n  </div>\n</template>\n\n<script>\n// DEMO Cards for dashboard\n//import SalesCard from '../../components/dashboard/InboxCard'\nimport MapCard from '../../pages/ui/maps/_examples/google-maps/simple/info-window'\nimport { db } from '../../main'\nimport moment from 'moment'\nconst query = db.collection('users')\nexport default {\n  components: {\n    MapCard\n  },\n  data() {\n    return {\n      timemin: 0,\n      timemax: 24,\n      timerange: [0, 24],\n      max:99,\n      min:0,\n      range:[0,99],\n      form: false,\n      mode:false,\n      chartType:'Group',\n      loadingInterval: null,\n      email: '',\n      foundUser: null,\n      isLoading1: true,\n      fromDateMenu: false,\n      fromDateVal: null,\n      dates:[],\n      modal: false,\n      minDate: '2019-07-04',\n      maxDate: '2030-08-30',\n      allSearchDates: [],\n      allResults: [],\n      challengeList:[],\n      challengeSMSList:[],\n      secretList:[],\n      secretSMSList:[],\n      timerList:[],\n      timerSMSList:[],\n      userSMSList:[],\n      zoneList:[],\n      zoneSMSList:[],\n      alarmList:[],\n\n      sendMapData: [],\n\n      selectChallenge: true,\n      selectChallengeSMS:true,\n      selectSecret:true,\n      selectSecretSMS:false,\n      selectTimer:true,\n      selectTimerSMS:true,\n      selectZone:false,\n      selectZoneSMS:false,\n      selectUserSMS:true,\n      selectAlarm:true,\n\n      groupChallengeCount:0,\n      groupChallengeSMSCount:0,\n      groupSecretCount:0,\n      groupSecretSMSCount:0,\n      groupTimerCount:0,\n      groupTimerSMSCount:0,\n      groupZoneCount:0,\n      groupZoneSMSCount:0,\n      groupUserSMSCount:0,\n      groupAlarmCount:0,\n\n      challengeCheck:false,\n      challengeSMSCheck:false,\n      secretCheck:false,\n      secretSMSCheck:false,\n      timerCheck:false,\n      timerSMSCheck:false,\n      zoneCheck:false,\n      zoneSMSCheck:false,\n      userSMSCheck:false,\n      alarmCheck:false,\n\n      lowerAge:1,\n      upperAge:99,\n\n      lowerTime:0,\n      upperTime:24,\n\n      activeCheckBoxes:[],\n\n      mapIcons:{\n        \"timer\":\"http://www.clker.com/cliparts/6/8/f/c/11949889971706847115clock01.svg.thumb.png\",\n        \"timer-sms\":\"http://www.clker.com/cliparts/6/8/f/c/11949889971706847115clock01.svg.thumb.png\",\n        \"challenge\":\"http://www.clker.com/cliparts/3/7/1/3/1194984910785474358stop_sign_miguel_s_nchez_.svg.thumb.png\",\n        \"challenge-sms\":\"http://www.clker.com/cliparts/3/7/1/3/1194984910785474358stop_sign_miguel_s_nchez_.svg.thumb.png\",\n        \"secret\":\"http://www.clker.com/cliparts/b/3/f/6/11971484551794044476earlyswerver_UK_Speed_Camera_Sign.svg.thumb.png\",\n        \"secret-sms\":\"http://www.clker.com/cliparts/b/3/f/6/11971484551794044476earlyswerver_UK_Speed_Camera_Sign.svg.thumb.png\",\n        \"zone\":\"http://www.clker.com/cliparts/2/9/b/8/1194984775760075334button-green_benji_park_01.svg.thumb.png\",\n        \"zones-sms\":\"http://www.clker.com/cliparts/2/9/b/8/1194984775760075334button-green_benji_park_01.svg.thumb.png\",\n        \"alarm\":\"http://www.clker.com/cliparts/h/z/l/u/l/s/speaker-volume-3-th.png\",\n        \"user-sms\":\"http://www.clker.com/cliparts/1/T/E/E/t/C/sms-text-th.png\"\n     }\n\n\n    }\n  },\n  mounted() {\n    let count = 0\n\n    // DEMO delay for loading graphics\n    this.loadingInterval = setInterval(() => {\n      this[`isLoading${count++}`] = false\n      if (count === 4) this.clear()\n    }, 400)\n  },\n  beforeDestroy() {\n    this.clear()\n  },\n  methods: {\n    clearAllCriteria(){\n      this.challengeList = []\n      this.challengeSMSList = []\n      this.secreList = []\n      this.secreSMSList = []\n      this.timerList = []\n      this.timerSMSList = []\n      this.userSMSList = []\n      this.zoneList = []\n      this.zoneSMSList = []\n      this.alarmList = []\n      this.sendMapData = []\n\n      this.challengeCheck = false\n      this.challengeSMSCheck = false\n      this.secretCheck = false\n      this.secretSMSCheck = false\n      this.timerCheck = false\n      this.timerSMSCheck = false\n      this.zoneCheck = false\n      this.zoneSMSCheck = false\n      this.userSMSCheck = false\n      this.alarmCheck = false\n\n      this.activeCheckBoxes=[]\n\n      this.$store.dispatch('queryuser/setNewMapData',Object.values(this.sendMapData))\n    },\n    toggleChartType(event){\n      console.log(event)\n      this.clearAllCriteria()\n      if (event==true){\n        this.chartType='Individual'\n      }else{\n        this.chartType='Group'\n      }\n    },\n    clear() {\n      clearInterval(this.loadingInterval)\n    },\n    checkBoxTest(type){\n      console.log(type+' '+this.challengeCheck)\n      if (this.activeCheckBoxes.includes(type)){\n        this.activeCheckBoxes.splice(this.activeCheckBoxes.indexOf(type), 1);\n      }else{\n        this.activeCheckBoxes.push(type)\n      }\n      console.log (this.activeCheckBoxes)\n\n    if (this.chartType=='Group'){\n      this.getGroupData(type, false)\n    }else{\n      this.selectChartColumns()\n    }\n\n    },\n    dateChangedChecker(){\n\n      this.sendMapData=[]\n\n    if (this.chartType=='Group'){\n\n      for (var d=0; d<this.activeCheckBoxes.length; d++){\n        this.getGroupData(this.activeCheckBoxes[d], true)\n      }\n\n    }else{\n      this.searchUsersByEmail()\n    }\n    },\n    changeData() {\n\n    if (this.chartType=='Group'){\n       this.selectChallengeSMS = false\n       this.selectChartColumns()\n    }else{\n      this.searchUsersByEmail()\n    }\n\n\n\n\n\n\n      //this.$store.dispatch('user/setNewData',[14,104,7,9,10])\n    },\n\n    async setTimeUserEventsDocs() {\n\n      let userIdList=[]\n      await db.collection(\"users\").get().then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n\n        userIdList.push(doc.ref.id)\n      })\n      })\n\n       console.log(userIdList)\n\n      for (var l=0; l<userIdList.length; l++){\n\n      db.collection(\"users\").doc(userIdList[l]).collection('events').get().then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n\n      const splitTime=doc.ref.id.split(' ')[0];\n      console.log(splitTime)\n      var pushTime = Date.parse(splitTime)\n        doc.ref.update({\n          createdAt: pushTime\n        });\n        console.log(moment(pushTime).format('MMM Do YY'))\n\n      })\n\n      })\n      }\n\n    },\n\n    setTimeAllDocs(){\n      db.collection(\"alarm\").get().then(function(querySnapshot) {\n    querySnapshot.forEach(function(doc) {\n      const splitTime=doc.ref.id.split(' ')[0];\n      console.log(splitTime)\n      var pushTime = Date.parse(splitTime)\n        doc.ref.update({\n          createdAt: pushTime\n        });\n        console.log(moment(pushTime).format('MMM Do YY'))\n    });\n    });\n    },\n\n\n\n    async getGroupData(category, fromDate){\n\n      const fullDate1 = Date.parse(this.dates[0])\n      const fullDate2 = Date.parse(this.dates[1])\n\n      if (this.dates[0]==null){\n        return\n      }\n\n      if (this.dates[1]==null){\n        this.dates[1]=this.dates[0]\n      }\n\n      const useDates = []\n\n\n      if (fullDate1 < fullDate2) {\n        useDates.push(fullDate1)\n        useDates.push(fullDate2)\n      } else {\n        useDates.push(fullDate2)\n        useDates.push(fullDate1)\n      }\n      console.log (useDates)\n\n      this.allSearchDates  = this.getDates(useDates[0], useDates[1])\n\n      console.log(useDates[1])\n\n      this.$store.dispatch('queryuser/setDates',this.allSearchDates )\n\n        const testCollection = []\n      //context.commit(\"SET_MATCHES\", categories)\n\n      if (!fromDate){\n        var endThis=false;\n      for (var b=this.sendMapData.length-1; b>=0; b--){\n        if (this.sendMapData[b]['infoText']==category){\n          console.log('remove it')\n          endThis=true;\n          console.log(this.sendMapData[b])\n          this.sendMapData.splice(b, 1);\n          this.$store.dispatch('queryuser/setNewMapData',Object.values(this.sendMapData))\n        }else{\n          console.log('add it')\n        }\n      }\n      if (endThis){\n        return\n      }\n\n      }\n\n      await db.collection(category)\n        .orderBy('createdAt').startAt(useDates[0]).endAt(useDates[1])\n        // .where('createdAt'\n        //   , '==', Date.parse('2020-11-17 00:00:00.000'))\n        .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.empty) {\n          // eslint-disable-next-line no-console\n            console.log('cannot find')\n            //this.$router.push('/HelloWorld')\n          }else{\n              querySnapshot.forEach((doc) => {\n              const coll = []\n              const { id } = doc\n               const usingDate = moment(id).format('MMM Do YY')\n\n              doc.data()['events'].forEach((doc) => {\n                var theTime = doc.time.seconds*1000\n                var aTime = parseInt (moment(theTime).format('HH'))\n                //removed age check for now\n                //if (doc.age >= this.lowerAge && doc.age <= this.upperAge){\n                  if (aTime >= this.timerange[0] && aTime <= this.timerange[1]){\n                    coll.push({ doc })\n                  }\n                //}\n              })\n\n              testCollection.push({ [usingDate]: coll })\n\n            })\n\n            //this.allResults = testCollection\n            //console.log (this.allResults)\n            //this.createArrays()\n\n          }\n\n        })\n\n\n\n      await this.fillGroupChartArray(testCollection, category)\n\n       this.$store.dispatch('queryuser/setNewMapData',Object.values(this.sendMapData))\n\n    },\n\n    async searchUsersByEmail() {\n      this.isLoading = true\n      this.message = ''\n      this.foundUser = null\n\n      this.challengeList = []\n      this.challengeSMSList = []\n      this.secreList = []\n      this.secreSMSList = []\n      this.timerList = [],\n      this.timerSMSList = [],\n      this.userSMSList = [],\n      this.zoneList = [],\n      this.zoneSMSList = [],\n      this.alarmList = []\n\n      var newNumber;\n      if (this.email.substring(0,3)!='+88'){\n        newNumber = '+88'+this.email\n      }else{\n        newNumber = this.email\n      }\n\n      const snapshot = await db\n        .collection('users')\n        .where('userPhone', '==', newNumber)\n        .get()\n\n      if (!snapshot.empty) {\n        const userId = snapshot.docs[0].id\n        const userData = snapshot.docs[0].data()\n\n        this.foundUser = {\n          id: userId,\n          ...userData\n        }\n\n        const dbUser = await db.collection('users').doc(userId).get()\n\n        if (dbUser !== null) {\n\n          const queryUserData = dbUser.data()\n\n          await this.$store.dispatch('queryuser/setUserData', {\n            id: dbUser.id,\n            name: queryUserData.username,\n            email: queryUserData.email\n\n          })\n\n          this.searchUserAndDate(userId)\n\n        } else {\n          console.log('NO USER')\n        }\n      } else {\n        this.message = 'No user with that email found.'\n      }\n      this.isLoading = false\n    },\n\n    getDates(startDate, stopDate) {\n      var dateArray = [];\n      var currentDate = moment(startDate);\n      var stopDate = moment(stopDate);\n      while (currentDate <= stopDate) {\n          dateArray.push( moment(currentDate).format('MMM Do YY') )\n          currentDate = moment(currentDate).add(1, 'days');\n      }\n      return dateArray;\n    },\n    async searchUserAndDate(uid) {\n     // console.log(this.dates[0] + ' 00:00:00.000')\n\n      const fullDate1 = Date.parse(this.dates[0])\n      const fullDate2 = Date.parse(this.dates[1])\n\n      if (this.dates[0]==null){\n        return\n      }\n\n      if (this.dates[1]==null){\n        this.dates[1]=this.dates[0]\n      }\n\n      const useDates = []\n\n      if (fullDate1 < fullDate2) {\n        useDates.push(fullDate1)\n        useDates.push(fullDate2)\n      } else {\n        useDates.push(fullDate2)\n        useDates.push(fullDate1)\n      }\n      console.log (useDates)\n\n      this.allSearchDates  = this.getDates(useDates[0], useDates[1])\n\n\n      this.$store.dispatch('queryuser/setDates',this.allSearchDates )\n\n\n\n      const testCollection = []\n      //context.commit(\"SET_MATCHES\", categories)\n\n      db.collection('users').doc(uid)\n        .collection('events')\n        .orderBy('createdAt').startAt(useDates[0]).endAt(useDates[1])\n        // .where('createdAt'\n        //   , '==', Date.parse('2020-11-17 00:00:00.000'))\n        .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.empty) {\n          // eslint-disable-next-line no-console\n            console.log('cannot find')\n            //this.$router.push('/HelloWorld')\n          } else {\n\n            querySnapshot.forEach((doc) => {\n              const coll = []\n              const { id } = doc\n\n              doc.data()['events'].forEach((doc) => {\n                var theTime = doc.time.seconds*1000\n                var aTime = parseInt (moment(theTime).format('HH'))\n                if (aTime >= this.timerange[0] && aTime <= this.timerange[1]){\n                  coll.push({ doc })\n                }\n              })\n\n              testCollection.push({ [id]: coll })\n\n            })\n\n            this.allResults = testCollection\n            this.createArrays()\n          }\n        })\n\n    },\n    async createArrays(){\n\n    this.allResults.forEach(doc=>{\n      for (const [key, value] of Object.entries(doc)) {\n          console.log(`NEW ${key}: ${value}`)\n\n            var theKey=key\n\n            for (const [akey, avalue] of Object.entries(doc[theKey])) {\n                console.log(`${akey}: ${avalue}`)\n                const usingDate = moment(avalue['doc']['time'].toDate()).format('MMM Do YY')\n\n\n                console.log(usingDate);\n\n                switch (avalue['doc']['category']) {\n                    case 'challenge':\n                        this.challengeList.push({ [usingDate] :avalue['doc']})\n                        //this.challengeList.push(avalue['doc'])\n                        break;\n                    case 'challenge-sms':\n                        this.challengeSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'secret':\n                        this.secretList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'secret-sms':\n                        this.secretSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'timer':\n                        this.timerList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'timer-sms':\n                        this.timerSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'user-sms':\n                        this.userSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'zone':\n                        this.zoneList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'zones-sms':\n                        this.zoneSMSList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    case 'alarm':\n                        this.alarmList.push({ [usingDate] :avalue['doc']})\n                        break;\n                    default:\n                        break;\n                }\n             }\n\n            }\n    })\n\n    this.selectChartColumns()\n\n  },\n\n  async selectChartColumns(){\n\n\n    this.sendMapData=[]\n\n    console.log(this.alarmList)\n\n if (this.challengeList.length>0 && this.challengeCheck){\n      await this.fillChartArray(this.challengeList, 'Challenge')\n    }\n\n    if (this.challengeSMSList.length>0 && this.challengeSMSCheck){\n      await this.fillChartArray(this.challengeSMSList, 'Challenge SMS')\n    }\n\n    if (this.secretList.length>0 && this.secretCheck){\n      await this.fillChartArray(this.secretList, 'Secret')\n    }\n\n    if (this.secretSMSList.length>0 && this.secretSMSCheck){\n      await this.fillChartArray(this.secretSMSList, 'Secret SMS')\n    }\n\n    if (this.timerList.length>0 && this.timerCheck){\n      await this.fillChartArray(this.timerList, 'Timer')\n    }\n\n    if (this.timerSMSList.length>0 && this.timerSMSCheck){\n      await this.fillChartArray(this.timerSMSList, 'Timer SMS')\n    }\n\n    if (this.zoneList.length>0 && this.zoneCheck){\n      await this.fillChartArray(this.zoneList, 'Zone')\n    }\n\n    if (this.zoneSMSList.length>0 && this. zoneSMSCheck){\n      await this.fillChartArray(this.zoneSMSList, 'Zone SMS')\n    }\n\n    if (this.userSMSList.length>0 && this.userSMSCheck){\n      await this.fillChartArray(this.userSMSList, 'User SMS')\n    }\n\n    if (this.alarmList.length>0 && this.alarmCheck){\n      await this.fillChartArray(this.alarmList, 'Alarm')\n    }\n\n     this.$store.dispatch('queryuser/setNewMapData',Object.values(this.sendMapData))\n\n  },\n\n  async fillChartArray(createdList, category){\n\n    var tabulatedList = {}\n\n    for (var t=0; t<this.allSearchDates.length; t++){\n      Object.assign(tabulatedList, {[this.allSearchDates[t]]: 0});\n    }\n\n    for (var i=0; i<createdList.length; i++){\n    for (const [key, value] of Object.entries(createdList[i])) {\n          console.log(`NEW ${key}: ${value}`)\n          console.log(value.location.latitude)\n          var lat = value.location.latitude\n          var long = value.location.longitude\n          var info = value.category\n          var useIcon = this.mapIcons[value.category]\n          console.log('MPPPP '+useIcon)\n\n            this.sendMapData.push(\n              {\n                position: {\n                  lat: lat,\n                lng: long\n                },\n                infoText: info,\n                icon: useIcon\n              },\n            )\n        }\n    }\n\n  console.log(tabulatedList)\n\n    //await this.sendMapData.push({name: category, data: Object.values(tabulatedList)})\n\n    return\n  },\n\n  async fillGroupChartArray(createdList, category){\n\n    var tabulatedList = {}\n    var forMap={}\n\n    for (var t=0; t<this.allSearchDates.length; t++){\n      Object.assign(tabulatedList, {[this.allSearchDates[t]]: 0});\n    }\n\n    for (var i=0; i<createdList.length; i++){\n    for (const [key, value] of Object.entries(createdList[i])) {\n          console.log(`NEW ${key}: ${value}`)\n\n          tabulatedList[key] = value.length\n\n          //get values below e.g. map locations\n\n          for (var v=0; v<value.length; v++){\n            var geo = value[v]['doc']['location']\n            var lat = geo.latitude\n            var long = geo.longitude\n            var info = value[v]['doc']['category']\n\n            var useIcon = this.mapIcons[value[v]['doc']['category']]\n\n            this.sendMapData.push(\n              {\n                position: {\n                  lat: lat,\n                lng: long\n                },\n                infoText: info,\n               icon : useIcon\n              },\n            )\n            //console.log (geo.latitude)\n          }\n\n        }\n    }\n\n  //console.log(tabulatedList)\n\n   // await this.sendMapData.push({name: category, data: Object.values(tabulatedList)})\n\n    return\n  }\n\n\n\n  }\n}\n</script>\n"],"sourceRoot":"src/pages/dashboard"}]}