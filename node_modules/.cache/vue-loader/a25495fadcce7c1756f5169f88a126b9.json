{"remainingRequest":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/caffe-clothing/src/apps/todo/components/TodoCompose.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/caffe-clothing/src/apps/todo/components/TodoCompose.vue","mtime":1606476106357},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JwoKLyoKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8IFRPRE8gQ29tcG9zZSBDb21wb25lbnQKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8CnwgQ29tcG9zZSBuZXcgdGFza3MgZWRpdG9yCiovCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIHRpdGxlOiAnJywKICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICBkYXRlOiAnJywKICAgICAgdGFzazoge30sCgogICAgICB0YXNrTGFiZWxzOiBbXSwKICAgICAgc2VhcmNoOiBudWxsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoJ3RvZG8tYXBwJywgWydsYWJlbHMnXSksCiAgICBpc0VkaXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnRhc2sgJiYgdGhpcy50YXNrLmlkCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBNdXRhdGlvbnMoJ3RvZG8tYXBwJywgWyd1cGRhdGVUYXNrJywgJ2FkZFRhc2snXSksCiAgICBvcGVuKHRhc2spIHsKICAgICAgaWYgKHRhc2spIHsKICAgICAgICB0aGlzLnRhc2sgPSB0YXNrCiAgICAgICAgdGhpcy50aXRsZSA9IHRoaXMudGFzay50aXRsZQogICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSB0aGlzLnRhc2suZGVzY3JpcHRpb24KICAgICAgICB0aGlzLmRhdGUgPSB0aGlzLnRhc2suZGF0ZQogICAgICAgIHRoaXMudGFza0xhYmVscyA9IHRoaXMudGFzay5sYWJlbHMKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnRhc2sgPSB7fQogICAgICAgIHRoaXMudGl0bGUgPSAnJwogICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSAnJwogICAgICAgIHRoaXMuZGF0ZSA9ICcnCiAgICAgICAgdGhpcy50YXNrTGFiZWxzID0gW10KICAgICAgfQoKICAgICAgdGhpcy5kaWFsb2cgPSB0cnVlCiAgICB9LAogICAgY2xvc2UoKSB7CiAgICAgIHRoaXMuZGlhbG9nID0gZmFsc2UKICAgIH0sCiAgICBzYXZlKCkgewogICAgICBjb25zdCB7IHRpdGxlLCBkZXNjcmlwdGlvbiwgdGFza0xhYmVscyB9ID0gdGhpcwogICAgICBjb25zdCB0YXNrID0gewogICAgICAgIHRpdGxlLAogICAgICAgIGRlc2NyaXB0aW9uLAogICAgICAgIGxhYmVsczogdGFza0xhYmVscwogICAgICB9CgogICAgICBpZiAodGhpcy50YXNrLmlkKSB7CiAgICAgICAgdGhpcy51cGRhdGVUYXNrKHsKICAgICAgICAgIC4uLnRoaXMudGFzaywKICAgICAgICAgIC4uLnRhc2sKICAgICAgICB9KQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuYWRkVGFzayh0YXNrKQogICAgICB9CgogICAgICB0aGlzLmNsb3NlKCkKICAgIH0sCiAgICBmaWx0ZXIgKGl0ZW0sIHF1ZXJ5VGV4dCwgaXRlbVRleHQpIHsKICAgICAgY29uc3QgaGFzVmFsdWUgPSAodmFsKSA9PiB2YWwgIT09IG51bGwgPyB2YWwgOiAnJwoKICAgICAgY29uc3QgdGV4dCA9IGhhc1ZhbHVlKGl0ZW0udGl0bGUpCiAgICAgIGNvbnN0IHF1ZXJ5ID0gaGFzVmFsdWUocXVlcnlUZXh0KQoKICAgICAgcmV0dXJuIHRleHQudG9TdHJpbmcoKQogICAgICAgIC50b0xvd2VyQ2FzZSgpCiAgICAgICAgLmluZGV4T2YocXVlcnkudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKSA+IC0xCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TodoCompose.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"TodoCompose.vue","sourceRoot":"src/apps/todo/components","sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" width=\"600\">\n    <v-card>\n      <v-card-title class=\"pa-2\">\n        {{ isEdit ? 'Edit Task' : 'Add Task' }}\n        <v-spacer></v-spacer>\n        <v-btn icon @click=\"dialog = false\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-card-title>\n\n      <v-divider></v-divider>\n\n      <!-- task form -->\n      <div>\n        <v-text-field\n          v-model=\"title\"\n          class=\"px-2 py-1\"\n          solo\n          flat\n          :placeholder=\"$t('common.title')\"\n          autofocus\n          hide-details\n          @keyup.enter=\"save\"\n        ></v-text-field>\n\n        <v-divider></v-divider>\n\n        <v-textarea\n          v-model=\"description\"\n          class=\"px-2 py-1\"\n          solo\n          flat\n          :placeholder=\"$t('common.description')\"\n          hide-details\n        ></v-textarea>\n\n        <v-divider></v-divider>\n\n        <v-textarea\n          v-model=\"date\"\n          class=\"px-2 py-1\"\n          solo\n          flat\n          :placeholder=\"$t('common.description')\"\n          hide-details\n        ></v-textarea>\n\n        <v-select\n          v-model=\"taskLabels\"\n          class=\"px-2 my-3\"\n          :menu-props=\"{ bottom: true, offsetY: true }\"\n          :items=\"labels\"\n          placeholder=\"Labels\"\n          item-value=\"id\"\n          hide-selected\n          hide-details\n          solo\n          flat\n          multiple\n        >\n          <template v-slot:selection=\"{ attrs, item, parent, selected }\">\n            <v-chip\n              v-if=\"item === Object(item)\"\n              v-bind=\"attrs\"\n              class=\"font-weight-bold\"\n              :color=\"item.color\"\n              outlined\n              :input-value=\"selected\"\n              label\n            >\n              <span class=\"pr-2\">\n                {{ item.title }}\n              </span>\n              <v-icon\n                small\n                @click=\"parent.selectItem(item)\"\n              >close</v-icon>\n            </v-chip>\n          </template>\n\n          <template v-slot:item=\"{ index, item }\">\n            <v-chip\n              :color=\"item.color\"\n              label\n              outlined\n              small\n            >\n              {{ item.title }}\n            </v-chip>\n          </template>\n        </v-select>\n      </div>\n\n      <v-divider></v-divider>\n\n      <v-card-actions class=\"pa-2\">\n        <v-btn outlined @click=\"close\">{{ $t('common.cancel') }}</v-btn>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"save\">{{ $t('common.save') }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\n\n/*\n|---------------------------------------------------------------------\n| TODO Compose Component\n|---------------------------------------------------------------------\n|\n| Compose new tasks editor\n*/\nexport default {\n  data () {\n    return {\n      dialog: false,\n      title: '',\n      description: '',\n      date: '',\n      task: {},\n\n      taskLabels: [],\n      search: null\n    }\n  },\n  computed: {\n    ...mapState('todo-app', ['labels']),\n    isEdit() {\n      return this.task && this.task.id\n    }\n  },\n  methods: {\n    ...mapMutations('todo-app', ['updateTask', 'addTask']),\n    open(task) {\n      if (task) {\n        this.task = task\n        this.title = this.task.title\n        this.description = this.task.description\n        this.date = this.task.date\n        this.taskLabels = this.task.labels\n      } else {\n        this.task = {}\n        this.title = ''\n        this.description = ''\n        this.date = ''\n        this.taskLabels = []\n      }\n\n      this.dialog = true\n    },\n    close() {\n      this.dialog = false\n    },\n    save() {\n      const { title, description, taskLabels } = this\n      const task = {\n        title,\n        description,\n        labels: taskLabels\n      }\n\n      if (this.task.id) {\n        this.updateTask({\n          ...this.task,\n          ...task\n        })\n      } else {\n        this.addTask(task)\n      }\n\n      this.close()\n    },\n    filter (item, queryText, itemText) {\n      const hasValue = (val) => val !== null ? val : ''\n\n      const text = hasValue(item.title)\n      const query = hasValue(queryText)\n\n      return text.toString()\n        .toLowerCase()\n        .indexOf(query.toString().toLowerCase()) > -1\n    }\n  }\n}\n</script>\n"]}]}