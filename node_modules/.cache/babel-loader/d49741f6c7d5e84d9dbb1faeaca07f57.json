{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js!/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/components/NewsfeedCompose.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/components/NewsfeedCompose.vue","mtime":1607014716480},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NewsfeedCompose.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" width=\"600\">\n    <v-card>\n      <v-card-title class=\"pa-2\">\n        {{ isEdit ? 'Edit News...' : 'Add News' }}\n        <v-spacer></v-spacer>\n        <v-btn icon @click=\"dialog = false\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-card-title>\n\n      <v-divider></v-divider>\n\n      <!-- task form -->\n\n  <v-form\n    ref=\"form\"\n    v-model=\"valid\"\n    lazy-validation\n  >\n  <h2>Bhai Thamen News</h2>\n\n    <v-radio-group\n      v-model=\"postType\"\n      row\n    >\n      <v-radio\n        label=\"Warning\"\n        value=\"warn\"\n      ></v-radio>\n      <v-radio\n        label=\"News\"\n        value=\"news\"\n      ></v-radio>\n      <v-radio\n        label=\"Info\"\n        value=\"info\"\n      ></v-radio>\n    </v-radio-group>\n\n    <v-text-field\n      v-model=\"title\"\n      outlined\n      :counter=\"80\"\n      :rules=\"titleRules\"\n      label=\"Title\"\n      required\n    ></v-text-field>\n\n\n\n\n        <v-textarea\n          v-model=\"article\"\n          clearable\n          auto-grow\n          outlined\n          rows=\"7\"\n          row-height=\"15\"\n          :counter=\"6000\"\n          :rules=\"articleRules\"\n          label=\"Article\"\n          required\n        ></v-textarea>\n\n\n\n    <v-text-field\n      v-model=\"author\"\n      outlined\n      :counter=\"40\"\n      :rules=\"authorRules\"\n      label=\"Author\"\n      required\n    ></v-text-field>\n\n     <v-file-input\n    v-model=\"files\"\n    color=\"deep-purple accent-4\"\n    counter\n    label=\"File input\"\n    multiple\n    placeholder=\"Select your files\"\n    prepend-icon=\"mdi-paperclip\"\n    outlined\n    @change=\"imagePreview\"\n    :show-size=\"1000\"\n  >\n    <template v-slot:selection=\"{ index, text }\">\n      <v-chip\n        v-if=\"index < 2\"\n        color=\"deep-purple accent-4\"\n        dark\n        label\n        small\n      >\n        {{ text }}\n      </v-chip>\n\n      <span\n        v-else-if=\"index === 2\"\n        class=\"overline grey--text text--darken-3 mx-2\"\n      >\n        +{{ files.length - 2 }} File(s)\n      </span>\n    </template>\n  </v-file-input>\n  <v-flex xs12 sm6 offset-sm3>\n    <img :src=\"imageUrl\" height=\"150\">\n\n  </v-flex>\n    </v-form>\n      <v-divider></v-divider>\n\n      <v-card-actions class=\"pa-2\">\n        <v-btn outlined @click=\"close\">{{ $t('common.cancel') }}</v-btn>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"post\">{{ $t('common.save') }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\n\n/*\n|---------------------------------------------------------------------\n| TODO Compose Component\n|---------------------------------------------------------------------\n|\n| Compose new tasks editor\n*/\nimport moment from 'moment'\nimport { db } from '../../../main'\nimport firebase from 'firebase'\nexport default {\n  data () {\n    return {\n      dialog: false,\n      title: '',\n      article: '',\n      time: '',\n      author: '',\n      likes:[],\n      shares:0,\n      events:[],\n      incidentDate:'',\n      foundEvents:[],\n      show:true,\n      iAmEditing:false,\n      taskLabels: [],\n      search: null,\n      id:'',\n      valid: true,\n      files:[],\n      imageRaw:null,\n      receivedUrl:'',\n      imageUrl:'https://homepages.cae.wisc.edu/~ece533/images/airplane.png',\n      title: '',\n      sortDate:'',\n      article:'',\n      author:'',\n      postType:'warn',\n      titleRules: [\n        (v) => !!v || 'Title is required',\n        (v) => (v && v.length <= 80) || 'Title must be less than 80 characters'\n      ],\n      articleRules: [\n        (v) => !!v || 'Article text is required',\n        (v) => (v && v.length <= 6000) || 'Article must be less than 6000 characters'\n      ],\n      authorRules: [\n        (v) => !!v || 'Author name is required',\n        (v) => (v && v.length <= 40) || 'Name must be less than 40 characters'\n      ],\n      email: '',\n      emailRules: [\n        (v) => !!v || 'E-mail is required',\n        (v) => /.+@.+\\..+/.test(v) || 'E-mail must be valid'\n      ],\n      select: null,\n      items: [\n        'Item 1',\n        'Item 2',\n        'Item 3',\n        'Item 4'\n      ],\n      checkbox: false,\n      imageChanged:false\n\n    }\n  },\n  computed: {\n    ...mapState('newsfeed-app', ['newsfeedlabels']),\n    isEdit() {\n      if (this.id!=null){\n        console.log(this.id)\n        if (this.id==''){\n          return false\n        }else{\n          return true\n        }\n      }\n\n    }\n  },\n  methods: {\n    ...mapMutations('newsfeed-app', ['updateNewsfeed', 'addNewsfeed']),\n    open(task, editing) {\n      console.log('OPEN')\n      if (task) {\n        this.task = task\n        this.iAmEditing = true\n        this.id = this.task.id\n        this.author = this.task.author\n        this.title = this.task.title\n        this.article = this.task.article\n        this.time = this.task.time\n        this.image = this.task.image\n        this.taskLabels = this.task.labels\n        this.likes = this.task.likes\n        this.shares = this.task.shares\n        this.postType = this.task.labels[0]\n        this.imageUrl = this.task.image\n        this.files.push('saved')\n        this.show = this.task.show\n        this.sortDate = this.task.sortDate\n      } else {\n        this.iAmEditing = false\n        this.id = ''\n        this.task = {}\n        this.author = ''\n        this.title = ''\n        this.article = ''\n        this.time = ''\n        this.image = ''\n        this.taskLabels = []\n        this.likes = []\n        this.shares = 0\n        this.postType = 'news'\n        this.imageUrl = ''\n        this.show = true\n      }\n\n      this.dialog = true\n    },\n    close() {\n      this.dialog = false\n    },\n    save() {\n      const { title, article, taskLabels, author, imageUrl, show, id, time, sortDate } = this\n      const taskEdit = {\n        title,\n        article,\n        author,\n        image: imageUrl,\n        labels: taskLabels,\n        show\n      }\n\n      if (this.iAmEditing == true) {\n        this.updateNewsfeed({\n          ...this.task,\n          ...taskEdit\n        })\n      } else {\n        console.log ('PASS URL '+sortDate)\n        const taskNew = {\n        sortDate,\n        id,\n        title,\n        article,\n        author,\n        time,\n        image: imageUrl,\n        labels: taskLabels,\n        likes:[],\n        shares:0,\n        show\n      }\n        this.addNewsfeed(taskNew)\n      }\n\n      this.close()\n    },\n    filter (item, queryText, itemText) {\n      const hasValue = (val) => val !== null ? val : ''\n\n      const text = hasValue(item.title)\n      const query = hasValue(queryText)\n\n      return text.toString()\n        .toLowerCase()\n        .indexOf(query.toString().toLowerCase()) > -1\n    },\n\n\n    async post () {\n\n      if (this.iAmEditing==false){\n      const unix = Date.now()\n\n      this.sortDate = unix\n\n      this.id = this.sortDate.toString()\n\n      const theDate = moment(unix).format('Do MMM YY')\n\n      this.time = firebase.firestore.Timestamp.fromDate(new Date())\n\n      this.taskLabels=[]\n      this.taskLabels.push(this.postType)\n\n      }else{\n\n        this.taskLabels=[]\n        this.taskLabels.push(this.postType)\n\n        console.log('doc id '+this.id)\n      }\n\n      if (this.imageChanged){\n\n\n\n      const imgName = this.image.name\n\n      const ext = imgName.slice(imgName.lastIndexOf('.'))\n\n      const uniqueTime = new Date().getTime()\n\n\n      const storageRef=firebase.storage().ref(`newsfeed/${this.id}${uniqueTime}${ext}`).put(this.image);\n        storageRef.on(`state_changed`,snapshot=>{\n        this.uploadValue = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\n          }, error=>{console.log(error.message)},\n        ()=>{this.uploadValue=100;\n            storageRef.snapshot.ref.getDownloadURL().then((url)=>{\n                this.imageUrl = url;\n                console.log(this.id)\n                console.log(this.taskLabels[0])\n                console.log(this.title)\n                console.log(this.article)\n                console.log(this.time)\n                console.log(this.author)\n                console.log(this.imageUrl)\n                console.log(this.likes)\n                console.log(this.shares)\n                console.log(this.show)\n\n                db\n                .collection('newsfeed')\n                .doc(this.id)\n                .set({\n                  cat: this.taskLabels[0],\n                  title: this.title,\n                  article: this.article,\n                  time: this.time,\n                  author: this.author,\n                  image: this.imageUrl,\n                  likes:this.likes,\n                  shares:this.shares,\n                  show:this.show\n              })\n              this.save()\n              });\n            }\n          );\n\n      } else {\n\n          db\n          .collection('newsfeed')\n          .doc(this.id)\n          .set({\n            cat: this.taskLabels[0],\n            title: this.title,\n            article: this.article,\n            time: this.time,\n            author: this.author,\n            image: this.image,\n            likes:this.likes,\n            shares:this.shares,\n            show:this.show\n\n      }).then((done)=>{\n                this.save()\n              })\n      }\n\n    },\n    imagePreview() {\n      const fileReader = new FileReader()\n\n      if (this.files.length>0){\n\n      fileReader.addEventListener('load',() => {\n        this.imageUrl = fileReader.result\n      })\n      fileReader.readAsDataURL(this.files[0])\n      this.image = this.files[0]\n      this.imageChanged = true\n      }else{\n        this.image=''\n        this.imageUrl=''\n        this.imageChanged = false\n      }\n\n\n    },\n    validate () {\n      this.$refs.form.validate()\n    },\n    reset () {\n      this.$refs.form.reset()\n    },\n    resetValidation () {\n      this.$refs.form.resetValidation()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/apps/newsfeed/components"}]}