{"remainingRequest":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/caffe-clothing/src/apps/clothesread/components/ClothesreadList.vue?vue&type=style&index=0&id=32ec93c8&lang=scss&scoped=true&","dependencies":[{"path":"/Users/luke/Documents/VUE/caffe-clothing/src/apps/clothesread/components/ClothesreadList.vue","mtime":1607421562647},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jbG90aGVzcmVhZC1maWx0ZXIgewogIHBvc2l0aW9uOiBzdGlja3k7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdi1iYWNrZ3JvdW5kLWJhc2UpICFpbXBvcnRhbnQ7CiAgei1pbmRleDogMjsKICB0b3A6IDA7Cn0KCi50YXNrLWl0ZW0gewogIGN1cnNvcjogcG9pbnRlcjsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxMDAsIDEwMCwgMTAwLCAwLjEpOwoKICAmOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAwLCAxMDAsIDEwMCwgMC4xKTsKICB9CgogIC50YXNrLWl0ZW0tY29udGVudCB7CiAgICAmLmNvbXBsZXRlIHsKICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ClothesreadList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkRA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ClothesreadList.vue","sourceRoot":"src/apps/clothesread/components","sourcesContent":["<template>\n  <v-card class=\"min-w-0\">\n    <v-text-field\n      v-model=\"filter\"\n      class=\"pa-1 py-2 clothesread-filter elevation-1\"\n      placeholder=\"Filter news\"\n      prepend-inner-icon=\"mdi-magnify\"\n      hide-details\n      block\n      clearable\n      solo\n      flat\n    ></v-text-field>\n\n    <v-divider></v-divider>\n\n    <div v-if=\"clothesread.length === 0\">\n      <div class=\"px-1 py-6 text-center\">No news</div>\n    </div>\n\n    <v-slide-y-transition\n      v-else\n      group\n      tag=\"div\"\n    >\n      <div v-for=\"task in visibleclothesread\" :key=\"task.id\" @click=\"$emit('edit-clothesread', task)\" class=\"d-flex pa-2 task-item align-center\" >\n        <!-- @click=\"$emit('edit-task', task)\" was in above line-->\n        <v-checkbox\n          :input-value=\"task.completed\"\n          class=\"mt-0 pt-0\"\n          hide-details\n          off-icon=\"mdi-checkbox-blank-circle-outline\"\n          on-icon=\"mdi-checkbox-marked-circle\"\n          @click.stop=\"task.completed ? setIncomplete(task) : setComplete(task)\"\n        ></v-checkbox>\n\n        <div class=\"task-item-content flex-grow-1\" :class=\"{ 'complete': task.completed }\">\n          <div>\n            <v-chip\n              v-for=\"label in task.label\"\n              :key=\"label\"\n              :color=\"getLabelColor(label)\"\n              class=\"font-weight-bold mt-1 mr-1\"\n              outlined\n              x-small\n            >\n              {{ getLabelTitle(label) }}\n            </v-chip>\n          </div>\n          <div><p></p></div>\n          <div>\n              <p class=\"d-inline pa-2\">Title: {{task.title}}</p>\n              <v-btn color=\"primary\"\n              v-clipboard:copy=\"task.title\"\n              >Copy\n              </v-btn>\n           </div>\n          <div><p></p></div>\n          <div>\n              <p class=\"d-inline pa-2\">Price: {{task.price}}</p>\n              <v-btn color=\"primary\"\n              v-clipboard:copy=\"task.price\"\n              >Copy\n              </v-btn>\n           </div>\n          <div><p></p></div>\n          <div>\n              <p class=\"d-inline pa-2\">SKU: {{task.fullCode}}</p>\n              <v-btn color=\"primary\"\n              v-clipboard:copy=\"task.title\"\n              >Copy\n              </v-btn>\n           </div>\n          <div><p></p></div>\n          <div>\n              <p class=\"d-inline pa-2\">QTY: {{task.qty}}</p>\n              <v-btn color=\"primary\"\n              v-clipboard:copy=\"task.qty\"\n              >Copy\n              </v-btn>\n           </div>\n          <div><p></p></div>\n           <div>\n              <p class=\"d-inline pa-2\">Material: {{task.material}}\"</p>\n          </div>\n          <div><p></p></div>\n          <div>\n              <p class=\"d-inline pa-2\">Size: {{task.size}}</p>\n           </div>\n          <div><p></p></div>\n          <div>\n              <p class=\"d-inline pa-2\">Age: {{task.age}}</p>\n           </div>\n          <div><p></p></div>\n           <div>\n              <p class=\"d-inline pa-2\">Colour: {{task.colour}}</p>\n              <v-btn color=\"primary\"\n              v-clipboard:copy=\"'Size: '+task.size+'\\n\\n'+'Age: '+task.age+'\\n\\n'+'Colour: '+task.colour + '\\n\\n' + 'Material: '+task.material\"\n              >Copy\n              </v-btn>\n          </div>\n          <div><p></p></div>\n\n\n          <br>\n  <v-row>\n    <v-col\n      v-for=\"anImage in task.images\" v-bind:key=\"anImage.id\"\n      class=\"d-flex child-flex\"\n      cols=\"4\"\n    >\n      <v-img\n        :src=\"anImage\"\n        aspect-ratio=\"1\"\n        class=\"grey lighten-2\"\n      >\n        <template v-slot:placeholder>\n          <v-row\n            class=\"fill-height ma-0\"\n            align=\"center\"\n            justify=\"center\"\n          >\n            <v-progress-circular\n              indeterminate\n              color=\"grey lighten-5\"\n            ></v-progress-circular>\n          </v-row>\n        </template>\n      </v-img>\n    </v-col>\n  </v-row>\n            <v-btn block>\n              UPLOAD PICTURES\n            </v-btn>\n<p></p>\n              <v-btn block v-on:click=\"downloadPhotos(task.images, task.fullCode)\">\n              DOWNLOAD PICTURES\n            </v-btn>\n\n        </div>\n\n        <!-- <div v-show=\"$store.state.user.isAdmin\" class=\"d-flex align-center\">\n          <v-btn v-show=\"$store.state.user.isAdmin\" icon @click.stop=\"beginDelete(task)\">\n            <v-icon>mdi-delete-outline</v-icon>\n          </v-btn>\n        </div> -->\n      </div>\n    </v-slide-y-transition>\n  </v-card>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\n\n/*\n|---------------------------------------------------------------------\n| ToDo List Component\n|---------------------------------------------------------------------\n|\n| Task lister\n|\n*/\nimport moment from 'moment'\nimport firebase from 'firebase'\nexport default {\n  props: {\n    // task list\n    clothesread: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      filter: '',\n      myBlock:''\n    }\n  },\n  computed: {\n    ...mapState('clothesread-app', ['clothesreadlabels']),\n    visibleclothesread() {\n      if (!this.filter)\n      return this.clothesread.sort((a, b) => (a.sortDate < b.sortDate) ? 1 : -1)\n\n      return this.clothesread.filter((t) => {\n        return Boolean(Object.values(t).filter((prop) => typeof prop === 'string').find((item) => item.toLowerCase().includes(this.filter.toLowerCase())))\n      })\n    },\n  },\n  methods: {\n    ...mapMutations('clothesread-app', {\n      setComplete: 'clothesreadCompleted',\n      setIncomplete: 'clothesreadIncomplete',\n      deleteClothesread: 'deleteClothesread'\n    }),\n\n    readableTime(seconds){\n      return moment(new Date(seconds)).format('Do MMM YY -- H:m')\n    },\n    getLabelColor(id) {\n      const label = this.clothesreadlabels.find((l) => l.id === id)\n\n      return label ? label.color : ''\n    },\n    getLabelTitle(id) {\n\n      const label = this.clothesreadlabels.find((l) => l.id === id)\n\n      return label ? label.title : ''\n    },\n    beginDelete(task){\n      console.log(this.$store.state.user.isAdmin)\n      if (this.$store.state.user.isAdmin){\n        this.deleteClothesread(task)\n      }\n    },\n    downloadPhotos(images, fullcode){\n      console.log(images)\n\n      let name = fullcode\n\n      let ind = 0\n\n     for (var i=0; i<images.length; i++){\n\n     const resumeRef = firebase.storage().refFromURL(images[i])\n\n  resumeRef.getDownloadURL().then((url) => {\n    // `url` is the download URL\n    console.log(url);\n\n    // This can be downloaded directly:\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n      const blob = xhr.response;\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = name+'--'+ind;\n      link.click();\n          ind++\n      URL.revokeObjectURL(link.href);\n    };\n    xhr.open('GET', url);\n    xhr.send();\n  }).catch((error) => {\n    // Handle any errors\n    switch (error.code) {\n      case 'storage/object-not-found':\n        // File doesn't exist\n        break;\n\n      case 'storage/unauthorized':\n        // User doesn't have permission to access the object\n        break;\n\n      case 'storage/canceled':\n        // User canceled the upload\n        break;\n\n      case 'storage/unknown':\n        // Unknown error occurred, inspect the server response\n        break;\n      default:\n        break;\n    }\n  });\n    }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.clothesread-filter {\n  position: sticky;\n  background-color: var(--v-background-base) !important;\n  z-index: 2;\n  top: 0;\n}\n\n.task-item {\n  cursor: pointer;\n  border-bottom: 1px solid rgba(100, 100, 100, 0.1);\n\n  &:hover {\n    background-color: rgba(100, 100, 100, 0.1);\n  }\n\n  .task-item-content {\n    &.complete {\n      text-decoration: line-through;\n    }\n  }\n}\n</style>\n"]}]}