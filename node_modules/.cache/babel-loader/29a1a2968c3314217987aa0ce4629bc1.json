{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js!/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/components/NewsfeedList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/components/NewsfeedList.vue","mtime":1607073585441},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9sdWtlL0RvY3VtZW50cy9WVUUvYnQtc3RhcnRlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JzsKLyoKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8IFRvRG8gTGlzdCBDb21wb25lbnQKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8CnwgVGFzayBsaXN0ZXIKfAoqLwoKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIC8vIHRhc2sgbGlzdAogICAgbmV3c2ZlZWQ6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbHRlcjogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZSgnbmV3c2ZlZWQtYXBwJywgWyduZXdzZmVlZGxhYmVscyddKSksIHt9LCB7CiAgICB2aXNpYmxlbmV3c2ZlZWQ6IGZ1bmN0aW9uIHZpc2libGVuZXdzZmVlZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5maWx0ZXIpIHJldHVybiB0aGlzLm5ld3NmZWVkLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICByZXR1cm4gYS5zb3J0RGF0ZSA8IGIuc29ydERhdGUgPyAxIDogLTE7CiAgICAgIH0pOwogICAgICByZXR1cm4gdGhpcy5uZXdzZmVlZC5maWx0ZXIoZnVuY3Rpb24gKHQpIHsKICAgICAgICByZXR1cm4gQm9vbGVhbihPYmplY3QudmFsdWVzKHQpLmZpbHRlcihmdW5jdGlvbiAocHJvcCkgewogICAgICAgICAgcmV0dXJuIHR5cGVvZiBwcm9wID09PSAnc3RyaW5nJzsKICAgICAgICB9KS5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKF90aGlzLmZpbHRlci50b0xvd2VyQ2FzZSgpKTsKICAgICAgICB9KSk7CiAgICAgIH0pOwogICAgfQogIH0pLAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwTXV0YXRpb25zKCduZXdzZmVlZC1hcHAnLCB7CiAgICBzZXRDb21wbGV0ZTogJ25ld3NmZWVkQ29tcGxldGVkJywKICAgIHNldEluY29tcGxldGU6ICduZXdzZmVlZEluY29tcGxldGUnLAogICAgZGVsZXRlTmV3c2ZlZWQ6ICdkZWxldGVOZXdzZmVlZCcKICB9KSksIHt9LCB7CiAgICByZWFkYWJsZVRpbWU6IGZ1bmN0aW9uIHJlYWRhYmxlVGltZShzZWNvbmRzKSB7CiAgICAgIHJldHVybiBtb21lbnQobmV3IERhdGUoc2Vjb25kcykpLmZvcm1hdCgnRG8gTU1NIFlZIC0tIEg6bScpOwogICAgfSwKICAgIGdldExhYmVsQ29sb3I6IGZ1bmN0aW9uIGdldExhYmVsQ29sb3IoaWQpIHsKICAgICAgdmFyIGxhYmVsID0gdGhpcy5uZXdzZmVlZGxhYmVscy5maW5kKGZ1bmN0aW9uIChsKSB7CiAgICAgICAgcmV0dXJuIGwuaWQgPT09IGlkOwogICAgICB9KTsKICAgICAgcmV0dXJuIGxhYmVsID8gbGFiZWwuY29sb3IgOiAnJzsKICAgIH0sCiAgICBnZXRMYWJlbFRpdGxlOiBmdW5jdGlvbiBnZXRMYWJlbFRpdGxlKGlkKSB7CiAgICAgIHZhciBsYWJlbCA9IHRoaXMubmV3c2ZlZWRsYWJlbHMuZmluZChmdW5jdGlvbiAobCkgewogICAgICAgIHJldHVybiBsLmlkID09PSBpZDsKICAgICAgfSk7CiAgICAgIHJldHVybiBsYWJlbCA/IGxhYmVsLnRpdGxlIDogJyc7CiAgICB9LAogICAgYmVnaW5EZWxldGU6IGZ1bmN0aW9uIGJlZ2luRGVsZXRlKHRhc2spIHsKICAgICAgY29uc29sZS5sb2codGhpcy4kc3RvcmUuc3RhdGUudXNlci5pc0FkbWluKTsKCiAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmlzQWRtaW4pIHsKICAgICAgICB0aGlzLmRlbGV0ZU5ld3NmZWVkKHRhc2spOwogICAgICB9CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["NewsfeedList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAFA,GADA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GAZA;AAaA,EAAA,QAAA,kCACA,QAAA,CAAA,cAAA,EAAA,CAAA,gBAAA,CAAA,CADA;AAEA,IAAA,eAFA,6BAEA;AAAA;;AACA,UAAA,CAAA,KAAA,MAAA,EACA,OAAA,KAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,CAAA,QAAA,GAAA,CAAA,CAAA,QAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AAAA,OAAA,CAAA;AAEA,aAAA,KAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA,OAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,EAAA,MAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,OAAA,IAAA,KAAA,QAAA;AAAA,SAAA,EAAA,IAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,WAAA,GAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,WAAA,EAAA,CAAA;AAAA,SAAA,CAAA,CAAA;AACA,OAFA,CAAA;AAGA;AATA,IAbA;AAwBA,EAAA,OAAA,kCACA,YAAA,CAAA,cAAA,EAAA;AACA,IAAA,WAAA,EAAA,mBADA;AAEA,IAAA,aAAA,EAAA,oBAFA;AAGA,IAAA,cAAA,EAAA;AAHA,GAAA,CADA;AAMA,IAAA,YANA,wBAMA,OANA,EAMA;AACA,aAAA,MAAA,CAAA,IAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA,MAAA,CAAA,kBAAA,CAAA;AACA,KARA;AASA,IAAA,aATA,yBASA,EATA,EASA;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,EAAA;AAAA,OAAA,CAAA;AAEA,aAAA,KAAA,GAAA,KAAA,CAAA,KAAA,GAAA,EAAA;AACA,KAbA;AAcA,IAAA,aAdA,yBAcA,EAdA,EAcA;AAEA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,EAAA;AAAA,OAAA,CAAA;AAEA,aAAA,KAAA,GAAA,KAAA,CAAA,KAAA,GAAA,EAAA;AACA,KAnBA;AAoBA,IAAA,WApBA,uBAoBA,IApBA,EAoBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA;;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,aAAA,cAAA,CAAA,IAAA;AACA;AACA;AAzBA;AAxBA,CAAA","sourcesContent":["<template>\n  <v-card class=\"min-w-0\">\n    <v-text-field\n      v-model=\"filter\"\n      class=\"pa-1 py-2 newsfeed-filter elevation-1\"\n      placeholder=\"Filter news\"\n      prepend-inner-icon=\"mdi-magnify\"\n      hide-details\n      block\n      clearable\n      solo\n      flat\n    ></v-text-field>\n\n    <v-divider></v-divider>\n\n    <div v-if=\"newsfeed.length === 0\">\n      <div class=\"px-1 py-6 text-center\">No news</div>\n    </div>\n\n    <v-slide-y-transition\n      v-else\n      group\n      tag=\"div\"\n    >\n      <div v-for=\"task in visiblenewsfeed\" :key=\"task.id\" @click=\"$emit('edit-newsfeed', task)\" class=\"d-flex pa-2 task-item align-center\" >\n        <!-- @click=\"$emit('edit-task', task)\" was in above line-->\n        <!-- <v-checkbox\n          :input-value=\"task.completed\"\n          class=\"mt-0 pt-0\"\n          hide-details\n          off-icon=\"mdi-checkbox-blank-circle-outline\"\n          on-icon=\"mdi-checkbox-marked-circle\"\n          @click.stop=\"task.completed ? setIncomplete(task) : setComplete(task)\"\n        ></v-checkbox> -->\n\n        <div class=\"task-item-content flex-grow-1\" :class=\"{ 'complete': task.completed }\">\n          <div>\n            <v-chip\n              v-for=\"label in task.labels\"\n              :key=\"label\"\n              :color=\"getLabelColor(label)\"\n              class=\"font-weight-bold mt-1 mr-1\"\n              outlined\n              x-small\n            >\n              {{ getLabelTitle(label) }}\n            </v-chip>\n          </div>\n          <div><p></p></div>\n          <div><p>Title: {{task.title}}</p></div>\n          <div><p>Author: {{task.author}}</p></div>\n          <div><p>Date: {{ readableTime(task.time.seconds * 1000) }}</p></div>\n          <div><p>Article: {{task.article}}</p></div>\n\n        </div>\n\n        <div v-show=\"$store.state.user.isAdmin\" class=\"d-flex align-center\">\n          <v-btn v-show=\"$store.state.user.isAdmin\" icon @click.stop=\"beginDelete(task)\">\n            <v-icon>mdi-delete-outline</v-icon>\n          </v-btn>\n        </div>\n      </div>\n    </v-slide-y-transition>\n  </v-card>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\n\n/*\n|---------------------------------------------------------------------\n| ToDo List Component\n|---------------------------------------------------------------------\n|\n| Task lister\n|\n*/\nimport moment from 'moment'\nexport default {\n  props: {\n    // task list\n    newsfeed: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      filter: ''\n    }\n  },\n  computed: {\n    ...mapState('newsfeed-app', ['newsfeedlabels']),\n    visiblenewsfeed() {\n      if (!this.filter)\n      return this.newsfeed.sort((a, b) => (a.sortDate < b.sortDate) ? 1 : -1)\n\n      return this.newsfeed.filter((t) => {\n        return Boolean(Object.values(t).filter((prop) => typeof prop === 'string').find((item) => item.toLowerCase().includes(this.filter.toLowerCase())))\n      })\n    }\n  },\n  methods: {\n    ...mapMutations('newsfeed-app', {\n      setComplete: 'newsfeedCompleted',\n      setIncomplete: 'newsfeedIncomplete',\n      deleteNewsfeed: 'deleteNewsfeed'\n    }),\n    readableTime(seconds){\n      return moment(new Date(seconds)).format('Do MMM YY -- H:m')\n    },\n    getLabelColor(id) {\n      const label = this.newsfeedlabels.find((l) => l.id === id)\n\n      return label ? label.color : ''\n    },\n    getLabelTitle(id) {\n\n      const label = this.newsfeedlabels.find((l) => l.id === id)\n\n      return label ? label.title : ''\n    },\n    beginDelete(task){\n      console.log(this.$store.state.user.isAdmin)\n      if (this.$store.state.user.isAdmin){\n        this.deleteNewsfeed(task)\n      }\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.newsfeed-filter {\n  position: sticky;\n  background-color: var(--v-background-base) !important;\n  z-index: 2;\n  top: 0;\n}\n\n.task-item {\n  cursor: pointer;\n  border-bottom: 1px solid rgba(100, 100, 100, 0.1);\n\n  &:hover {\n    background-color: rgba(100, 100, 100, 0.1);\n  }\n\n  .task-item-content {\n    &.complete {\n      text-decoration: line-through;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/apps/newsfeed/components"}]}