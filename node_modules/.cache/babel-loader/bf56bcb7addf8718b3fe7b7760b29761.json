{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js!/Users/luke/Documents/VUE/bt-starter/node_modules/eslint-loader/index.js??ref--13-0!/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/store/mutations.js","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/store/mutations.js","mtime":1607005490033},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbHVrZS9Eb2N1bWVudHMvVlVFL2J0LXN0YXJ0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwoKLyoKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8IFRPRE8gVnVleCBNdXRhdGlvbnMKfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoqLwppbXBvcnQgeyBkYiB9IGZyb20gJy4uLy4uLy4uL21haW4nOwpleHBvcnQgZGVmYXVsdCB7CiAgYWRkTmV3c2ZlZWQ6IGZ1bmN0aW9uIGFkZE5ld3NmZWVkKHN0YXRlLCBuZXdzZmVlZCkgewogICAgLy9jb25zb2xlLmxvZygnKioqKioqKicgKyB0YXNrLmlkKQogICAgc3RhdGUubmV3c2ZlZWQucHVzaChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoewogICAgICBpZDogJ18nICsgbmV3c2ZlZWQuaWQKICAgIH0sIG5ld3NmZWVkKSwge30sIHsKICAgICAgY29tcGxldGVkOiBmYWxzZQogICAgfSkpOwogIH0sCiAgY2xlYXJOZXdzZmVlZDogZnVuY3Rpb24gY2xlYXJOZXdzZmVlZChzdGF0ZSkgewogICAgc3RhdGUubmV3c2ZlZWQgPSBbXTsKICB9LAogIHVwZGF0ZU5ld3NmZWVkOiBmdW5jdGlvbiB1cGRhdGVOZXdzZmVlZChzdGF0ZSwgbmV3c2ZlZWQpIHsKICAgIHZhciB0YXNrSWR4ID0gc3RhdGUubmV3c2ZlZWQuZmluZChmdW5jdGlvbiAodCkgewogICAgICByZXR1cm4gdC5pZCA9PT0gbmV3c2ZlZWQuaWQ7CiAgICB9KTsKICAgIE9iamVjdC5hc3NpZ24odGFza0lkeCwgbmV3c2ZlZWQpOwogIH0sCiAgbmV3c2ZlZWRDb21wbGV0ZWQ6IGZ1bmN0aW9uIG5ld3NmZWVkQ29tcGxldGVkKHN0YXRlLCBuZXdzZmVlZCkgewogICAgdmFyIHRhc2tJZHggPSBzdGF0ZS5uZXdzZmVlZC5maW5kSW5kZXgoZnVuY3Rpb24gKHQpIHsKICAgICAgcmV0dXJuIHQuaWQgPT09IG5ld3NmZWVkLmlkOwogICAgfSk7CiAgICBzdGF0ZS5uZXdzZmVlZFt0YXNrSWR4XS5jb21wbGV0ZWQgPSB0cnVlOwogIH0sCiAgbmV3c2ZlZWRJbmNvbXBsZXRlOiBmdW5jdGlvbiBuZXdzZmVlZEluY29tcGxldGUoc3RhdGUsIG5ld3NmZWVkKSB7CiAgICB2YXIgdGFza0lkeCA9IHN0YXRlLm5ld3NmZWVkLmZpbmRJbmRleChmdW5jdGlvbiAodCkgewogICAgICByZXR1cm4gdC5pZCA9PT0gbmV3c2ZlZWQuaWQ7CiAgICB9KTsKICAgIHN0YXRlLm5ld3NmZWVkW3Rhc2tJZHhdLmNvbXBsZXRlZCA9IGZhbHNlOwogIH0sCiAgZGVsZXRlTmV3c2ZlZWQ6IGZ1bmN0aW9uIGRlbGV0ZU5ld3NmZWVkKHN0YXRlLCBuZXdzZmVlZCkgewogICAgdmFyIHRhc2tJZHggPSBzdGF0ZS5uZXdzZmVlZC5maW5kSW5kZXgoZnVuY3Rpb24gKHQpIHsKICAgICAgcmV0dXJuIHQuaWQgPT09IG5ld3NmZWVkLmlkOwogICAgfSk7CiAgICBpZiAodGFza0lkeCAhPT0gLTEpIHN0YXRlLm5ld3NmZWVkLnNwbGljZSh0YXNrSWR4LCAxKTsKICAgIGNvbnNvbGUubG9nKG5ld3NmZWVkLmlkKTsKICAgIGRiLmNvbGxlY3Rpb24oJ25ld3NmZWVkJykuZG9jKG5ld3NmZWVkLmlkKS5kZWxldGUoKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgY29uc29sZS5sb2coJ0RvY3VtZW50IHN1Y2Nlc3NmdWxseSBkZWxldGVkIScpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlbW92aW5nIGRvY3VtZW50OiAnLCBlcnJvcik7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["/Users/luke/Documents/VUE/bt-starter/src/apps/newsfeed/store/mutations.js"],"names":["db","addNewsfeed","state","newsfeed","push","id","completed","clearNewsfeed","updateNewsfeed","taskIdx","find","t","Object","assign","newsfeedCompleted","findIndex","newsfeedIncomplete","deleteNewsfeed","splice","console","log","collection","doc","delete","then","catch","error"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,eAAnB;AACA,eAAe;AACbC,EAAAA,WAAW,EAAE,qBAACC,KAAD,EAAQC,QAAR,EAAqB;AAChC;AACAD,IAAAA,KAAK,CAACC,QAAN,CAAeC,IAAf;AACEC,MAAAA,EAAE,EAAE,MAAMF,QAAQ,CAACE;AADrB,OAEKF,QAFL;AAGEG,MAAAA,SAAS,EAAE;AAHb;AAMD,GATY;AAUbC,EAAAA,aAAa,EAAE,uBAACL,KAAD,EAAW;AACxBA,IAAAA,KAAK,CAACC,QAAN,GAAiB,EAAjB;AACD,GAZY;AAabK,EAAAA,cAAc,EAAE,wBAACN,KAAD,EAAQC,QAAR,EAAqB;AACnC,QAAMM,OAAO,GAAGP,KAAK,CAACC,QAAN,CAAeO,IAAf,CAAoB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACN,EAAF,KAASF,QAAQ,CAACE,EAAzB;AAAA,KAApB,CAAhB;AAEAO,IAAAA,MAAM,CAACC,MAAP,CAAcJ,OAAd,EAAuBN,QAAvB;AACD,GAjBY;AAkBbW,EAAAA,iBAAiB,EAAE,2BAACZ,KAAD,EAAQC,QAAR,EAAqB;AACtC,QAAMM,OAAO,GAAGP,KAAK,CAACC,QAAN,CAAeY,SAAf,CAAyB,UAACJ,CAAD;AAAA,aAAOA,CAAC,CAACN,EAAF,KAASF,QAAQ,CAACE,EAAzB;AAAA,KAAzB,CAAhB;AAEAH,IAAAA,KAAK,CAACC,QAAN,CAAeM,OAAf,EAAwBH,SAAxB,GAAoC,IAApC;AACD,GAtBY;AAuBbU,EAAAA,kBAAkB,EAAE,4BAACd,KAAD,EAAQC,QAAR,EAAqB;AACvC,QAAMM,OAAO,GAAGP,KAAK,CAACC,QAAN,CAAeY,SAAf,CAAyB,UAACJ,CAAD;AAAA,aAAOA,CAAC,CAACN,EAAF,KAASF,QAAQ,CAACE,EAAzB;AAAA,KAAzB,CAAhB;AAEAH,IAAAA,KAAK,CAACC,QAAN,CAAeM,OAAf,EAAwBH,SAAxB,GAAoC,KAApC;AACD,GA3BY;AA4BbW,EAAAA,cAAc,EAAE,wBAACf,KAAD,EAAQC,QAAR,EAAqB;AAEnC,QAAMM,OAAO,GAAGP,KAAK,CAACC,QAAN,CAAeY,SAAf,CAAyB,UAACJ,CAAD;AAAA,aAAOA,CAAC,CAACN,EAAF,KAASF,QAAQ,CAACE,EAAzB;AAAA,KAAzB,CAAhB;AAEA,QAAII,OAAO,KAAK,CAAC,CAAjB,EAAoBP,KAAK,CAACC,QAAN,CAAee,MAAf,CAAsBT,OAAtB,EAA+B,CAA/B;AAEpBU,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACE,EAArB;AAEAL,IAAAA,EAAE,CAACqB,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BnB,QAAQ,CAACE,EAAvC,EAA2CkB,MAA3C,GAAoDC,IAApD,CAAyD,YAAY;AACnEL,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,KAFD,EAEGK,KAFH,CAES,UAAUC,KAAV,EAAiB;AACxBP,MAAAA,OAAO,CAACO,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD,KAJD;AAMD;AA1CY,CAAf","sourcesContent":["/*\n|---------------------------------------------------------------------\n| TODO Vuex Mutations\n|---------------------------------------------------------------------\n*/\nimport { db } from '../../../main'\nexport default {\n  addNewsfeed: (state, newsfeed) => {\n    //console.log('*******' + task.id)\n    state.newsfeed.push({\n      id: '_' + newsfeed.id,//Math.random().toString(36).substr(2, 9),\n      ...newsfeed,\n      completed: false\n    })\n\n  },\n  clearNewsfeed: (state) => {\n    state.newsfeed = []\n  },\n  updateNewsfeed: (state, newsfeed) => {\n    const taskIdx = state.newsfeed.find((t) => t.id === newsfeed.id)\n\n    Object.assign(taskIdx, newsfeed)\n  },\n  newsfeedCompleted: (state, newsfeed) => {\n    const taskIdx = state.newsfeed.findIndex((t) => t.id === newsfeed.id)\n\n    state.newsfeed[taskIdx].completed = true\n  },\n  newsfeedIncomplete: (state, newsfeed) => {\n    const taskIdx = state.newsfeed.findIndex((t) => t.id === newsfeed.id)\n\n    state.newsfeed[taskIdx].completed = false\n  },\n  deleteNewsfeed: (state, newsfeed) => {\n\n    const taskIdx = state.newsfeed.findIndex((t) => t.id === newsfeed.id)\n\n    if (taskIdx !== -1) state.newsfeed.splice(taskIdx, 1)\n\n    console.log(newsfeed.id)\n\n    db.collection('newsfeed').doc(newsfeed.id).delete().then(function () {\n      console.log('Document successfully deleted!')\n    }).catch(function (error) {\n      console.error('Error removing document: ', error)\n    })\n\n  }\n}\n"]}]}