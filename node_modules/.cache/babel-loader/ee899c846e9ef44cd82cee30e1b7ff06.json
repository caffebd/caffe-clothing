{"remainingRequest":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/babel-loader/lib/index.js!/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/caffe-clothing/src/apps/clothesread/components/ClothesreadCompose.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/caffe-clothing/src/apps/clothesread/components/ClothesreadCompose.vue","mtime":1607422399850},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/caffe-clothing/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ClothesreadCompose.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,EAAA,QAAA,eAAA;AACA,OAAA,QAAA,MAAA,UAAA;AACA,OAAA,YAAA,MAAA,eAAA;AACA,OAAA,yCAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AAAA;;AACA;AACA,MAAA,eAAA,EAAA;AACA,QAAA,GAAA,EAAA,0BADA;AAEA,QAAA,cAAA,EAAA,GAFA;AAGA,QAAA,eAAA,EAAA,GAHA;AAIA,QAAA,cAAA,EAAA,IAJA;AAKA,QAAA,aAAA,EAAA;AALA,OADA;AAQA,MAAA,MAAA,EAAA,KARA;AASA,MAAA,OAAA,EAAA,IATA;AAUA,MAAA,KAAA,EAAA,EAVA;AAWA,MAAA,IAAA,EAAA,EAXA;AAYA,MAAA,KAAA,EAAA,EAZA;AAaA,MAAA,MAAA,EAAA,CAbA;AAcA,MAAA,MAAA,EAAA,EAdA;AAeA,MAAA,UAAA,EAAA,EAfA;AAgBA,MAAA,YAAA,EAAA,EAhBA;AAiBA,MAAA,WAAA,EAAA,EAjBA;AAkBA,MAAA,IAAA,EAAA,IAlBA;AAmBA,MAAA,UAAA,EAAA,KAnBA;AAoBA,MAAA,UAAA,EAAA,EApBA;AAqBA,MAAA,MAAA,EAAA,IArBA;AAsBA,MAAA,EAAA,EAAA,EAtBA;AAuBA,MAAA,KAAA,EAAA,IAvBA;AAwBA,MAAA,KAAA,EAAA,EAxBA;AAyBA,MAAA,QAAA,EAAA,IAzBA;AA0BA,MAAA,WAAA,EAAA,EA1BA;AA2BA,MAAA,QAAA,EAAA,EA3BA;AA4BA,MAAA,SAAA,EAAA;AA5BA,sCA6BA,EA7BA,qCA8BA,EA9BA,mCA+BA,EA/BA,iCAgCA,EAhCA,qCAiCA,QAjCA,iCAkCA,MAlCA,iCAmCA,EAnCA,gCAoCA,EApCA,mCAqCA,EArCA,qCAsCA,EAtCA,gCAuCA,EAvCA,kCAwCA,EAxCA,sCAyCA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,CAAA,IAAA,kBAAA;AAAA,KADA,EAEA,UAAA,CAAA;AAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,EAAA,IAAA,qCAAA;AAAA,KAFA,CAzCA,uCA6CA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,CAAA,IAAA,mBAAA;AAAA,KADA,EAEA,UAAA,CAAA;AAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,EAAA,IAAA,uCAAA;AAAA,KAFA,CA7CA,sCAiDA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,EAAA,IAAA,sCAAA;AAAA,KADA,CAjDA,qCAoDA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,GAAA,IAAA,sCAAA;AAAA,KADA,CApDA,wCAuDA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,GAAA,IAAA,yCAAA;AAAA,KADA,CAvDA,0CA0DA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,GAAA,IAAA,2CAAA;AAAA,KADA,CA1DA,qCA6DA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,CAAA,IAAA,sBAAA;AAAA,KADA,EAEA,UAAA,CAAA;AAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,GAAA,IAAA,2CAAA;AAAA,KAFA,CA7DA,uCAiEA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,CAAA,IAAA,mBAAA;AAAA,KADA,EAEA,UAAA,CAAA;AAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,GAAA,IAAA,wCAAA;AAAA,KAFA,CAjEA,mCAqEA,IArEA,qCAsEA,KAtEA,yCAuEA,KAvEA;AA0EA,GA/EA;AAgFA,EAAA,QAAA,kCACA,QAAA,CAAA,cAAA,EAAA,CAAA,gBAAA,CAAA,CADA;AAEA,IAAA,MAFA,oBAEA;AACA,UAAA,KAAA,EAAA,IAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA;;AACA,YAAA,KAAA,EAAA,IAAA,EAAA,EAAA;AACA,iBAAA,KAAA;AACA,SAFA,MAEA;AACA,iBAAA,IAAA;AACA;AACA;AAEA;AAZA,IAhFA;AA8FA,EAAA,OAAA,kCACA,YAAA,CAAA,cAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,CAAA,CADA;AAEA,IAAA,IAFA,gBAEA,IAFA,EAEA,OAFA,EAEA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA,aAAA,UAAA,GAAA,IAAA;AACA,aAAA,IAAA,GAAA,KAAA,IAAA,CAAA,IAAA;AACA,aAAA,EAAA,GAAA,KAAA,IAAA,CAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA,IAAA,CAAA,QAAA;AACA,aAAA,KAAA,GAAA,KAAA,IAAA,CAAA,KAAA;AACA,aAAA,GAAA,GAAA,KAAA,IAAA,CAAA,GAAA;AACA,aAAA,IAAA,GAAA,KAAA,IAAA,CAAA,IAAA;AACA,aAAA,MAAA,GAAA,KAAA,IAAA,CAAA,MAAA;AACA,aAAA,QAAA,GAAA,KAAA,IAAA,CAAA,QAAA;AACA,aAAA,GAAA,GAAA,KAAA,IAAA,CAAA,GAAA;AACA,aAAA,KAAA,GAAA,KAAA,IAAA,CAAA,KAAA;AACA,aAAA,UAAA,GAAA,KAAA,IAAA,CAAA,UAAA;AACA,aAAA,MAAA,GAAA,KAAA,IAAA,CAAA,MAAA;AACA,aAAA,UAAA,GAAA,KAAA,IAAA,CAAA,MAAA;AACA,aAAA,SAAA,GAAA,KAAA,IAAA,CAAA,MAAA;AACA,aAAA,QAAA,GAAA,KAAA,IAAA,CAAA,QAAA;AACA,aAAA,QAAA,GAAA,KAAA,IAAA,CAAA,QAAA;AACA,aAAA,IAAA,GAAA,KAAA,IAAA,CAAA,IAAA;AACA,OApBA,MAoBA;AACA,aAAA,UAAA,GAAA,KAAA;AACA,aAAA,EAAA,GAAA,EAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,IAAA,GAAA,MAAA;AACA,aAAA,IAAA,GAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,aAAA,UAAA,GAAA,GAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,GAAA,GAAA,EAAA;AACA,aAAA,IAAA,GAAA,EAAA;AACA,aAAA,MAAA,GAAA,EAAA;AACA,aAAA,QAAA,GAAA,EAAA;AACA,aAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,MAAA,GAAA,EAAA;AACA,aAAA,UAAA,GAAA,EAAA;AACA,aAAA,SAAA,GAAA,EAAA;AACA,aAAA,QAAA,GAAA,CAAA;AACA;;AAEA,WAAA,MAAA,GAAA,IAAA;AACA,KA9CA;AA+CA,IAAA,KA/CA,mBA+CA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,KAjDA;AAkDA,IAAA,IAlDA,kBAkDA;AAAA,UACA,QADA,GAEA,IAFA,CACA,QADA;AAAA,UACA,KADA,GAEA,IAFA,CACA,KADA;AAAA,UACA,IADA,GAEA,IAFA,CACA,IADA;AAAA,UACA,IADA,GAEA,IAFA,CACA,IADA;AAAA,UACA,GADA,GAEA,IAFA,CACA,GADA;AAAA,UACA,UADA,GAEA,IAFA,CACA,UADA;AAAA,UACA,SADA,GAEA,IAFA,CACA,SADA;AAAA,UACA,EADA,GAEA,IAFA,CACA,EADA;AAAA,UAEA,MAFA,GAEA,IAFA,CAEA,MAFA;AAAA,UAEA,QAFA,GAEA,IAFA,CAEA,QAFA;AAAA,UAEA,GAFA,GAEA,IAFA,CAEA,GAFA;AAAA,UAEA,KAFA,GAEA,IAFA,CAEA,KAFA;AAAA,UAEA,QAFA,GAEA,IAFA,CAEA,QAFA;AAAA,UAEA,IAFA,GAEA,IAFA,CAEA,IAFA;AAAA,UAEA,UAFA,GAEA,IAFA,CAEA,UAFA;AAAA,UAEA,QAFA,GAEA,IAFA,CAEA,QAFA;AAIA,UAAA,QAAA,GAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,QAAA,EAAA,QAFA;AAGA,QAAA,QAAA,EAAA,QAHA;AAIA,QAAA,IAAA,EAAA,IAJA;AAKA,QAAA,IAAA,EAAA,IALA;AAMA,QAAA,GAAA,EAAA,GANA;AAOA,QAAA,EAAA,EAAA,EAPA;AAQA,QAAA,MAAA,EAAA,MARA;AASA,QAAA,QAAA,EAAA,QATA;AAUA,QAAA,GAAA,EAAA,GAVA;AAWA,QAAA,KAAA,EAAA,KAXA;AAYA,QAAA,QAAA,EAAA,QAZA;AAaA,QAAA,IAAA,EAAA,IAbA;AAcA,QAAA,UAAA,EAAA,UAdA;AAeA,QAAA,MAAA,EAAA,SAfA;AAgBA,QAAA,KAAA,EAAA,CAAA,QAAA;AAhBA,OAAA;;AAoBA,UAAA,KAAA,UAAA,IAAA,IAAA,EAAA;AACA,aAAA,cAAA,iCACA,KAAA,IADA,GAEA,QAFA;AAIA,OALA,MAKA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,cAAA,QAAA;AACA,YAAA,OAAA,GAAA;AACA,UAAA,QAAA,EAAA,QADA;AAEA,UAAA,QAAA,EAAA,QAFA;AAGA,UAAA,IAAA,EAAA,IAHA;AAIA,UAAA,KAAA,EAAA,KAJA;AAKA,UAAA,IAAA,EAAA,IALA;AAMA,UAAA,GAAA,EAAA,GANA;AAOA,UAAA,EAAA,EAAA,EAPA;AAQA,UAAA,MAAA,EAAA,MARA;AASA,UAAA,QAAA,EAAA,QATA;AAUA,UAAA,GAAA,EAAA,GAVA;AAWA,UAAA,KAAA,EAAA,KAXA;AAYA,UAAA,QAAA,EAAA,QAZA;AAaA,UAAA,IAAA,EAAA,IAbA;AAcA,UAAA,UAAA,EAAA,UAdA;AAeA,UAAA,MAAA,EAAA,SAfA;AAgBA,UAAA,KAAA,EAAA,CAAA,QAAA;AAhBA,SAAA;AAkBA,aAAA,WAAA,CAAA,OAAA;AACA,OAlDA,CAmDA;;;AACA,WAAA,KAAA;AACA,KAvGA;AAyGA,IAAA,YAzGA,0BAyGA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,IAAA,CAAA;AACA,KA3GA;AA4GA,IAAA,YA5GA,0BA4GA;AACA,UAAA,KAAA,IAAA,IAAA,MAAA,EAAA;AACA,gBAAA,KAAA,QAAA;AACA,eAAA,QAAA;AACA,iBAAA,UAAA,GAAA,GAAA;AACA;;AACA,eAAA,MAAA;AACA,iBAAA,UAAA,GAAA,GAAA;AACA;;AACA,eAAA,OAAA;AACA,iBAAA,UAAA,GAAA,GAAA;AACA;;AACA,eAAA,OAAA;AACA,iBAAA,UAAA,GAAA,GAAA;AACA;;AACA,eAAA,KAAA;AACA,iBAAA,UAAA,GAAA,GAAA;AACA;;AACA;AACA;AAjBA;AAmBA,OApBA,MAoBA;AACA,gBAAA,KAAA,QAAA;AACA,eAAA,QAAA;AACA,iBAAA,UAAA,GAAA,IAAA;AACA;;AACA,eAAA,MAAA;AACA,iBAAA,UAAA,GAAA,IAAA;AACA;;AACA,eAAA,OAAA;AACA,iBAAA,UAAA,GAAA,IAAA;AACA;;AACA,eAAA,OAAA;AACA,iBAAA,UAAA,GAAA,IAAA;AACA;;AACA,eAAA,KAAA;AACA,iBAAA,UAAA,GAAA,IAAA;AACA;;AACA;AACA;AAjBA;AAmBA;AAEA,KAvJA;AAyJA,IAAA,MAzJA,kBAyJA,IAzJA,EAyJA,SAzJA,EAyJA,QAzJA,EAyJA;AACA,UAAA,QAAA,GAAA,SAAA,QAAA,CAAA,GAAA;AAAA,eAAA,GAAA,KAAA,IAAA,GAAA,GAAA,GAAA,EAAA;AAAA,OAAA;;AAEA,UAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,SAAA,CAAA;AAEA,aAAA,IAAA,CAAA,QAAA,GACA,WADA,GAEA,OAFA,CAEA,KAAA,CAAA,QAAA,GAAA,WAAA,EAFA,IAEA,CAAA,CAFA;AAGA,KAlKA;AAqKA,IAAA,IArKA,kBAqKA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAA,KAAA,CAAA,UAAA,IAAA,KAAA,EAAA;AACA,kBAAA,IADA,GACA,IAAA,CAAA,GAAA,EADA;AAGA,kBAAA,KAAA,CAAA,QAAA,GAAA,IAAA,CAHA,CAKA;;AAEA,kBAAA,OAPA,GAOA,MAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,WAAA,CAPA;AASA,kBAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,IAAA,EAAA,CAAA;AAEA,kBAAA,KAAA,CAAA,UAAA,GAAA,EAAA;;AACA,kBAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA;AAEA,iBAdA,MAcA;AAEA,kBAAA,KAAA,CAAA,UAAA,GAAA,EAAA;;AACA,kBAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA;;AAEA,kBAAA,OAAA,CAAA,GAAA,CAAA,YAAA,KAAA,CAAA,EAAA;AACA;;AAEA,oBAAA,KAAA,CAAA,YAAA,EAAA;AAAA;AAMA,wBAAA,UAAA,GAAA,IAAA,IAAA,GAAA,OAAA,EAAA;AAEA,oBAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAAA,gBAAA,EAAA;AAEA,wBAAA,SAAA,GAAA,CAAA;;AAVA;AAcA,0BAAA,OAAA,GAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,IAAA;AAEA,0BAAA,GAAA,GAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA;AAEA,0BAAA,UAAA,GAAA,QAAA,CAAA,OAAA,GAAA,GAAA,mBAAA,KAAA,CAAA,IAAA,cAAA,KAAA,CAAA,UAAA,cAAA,UAAA,cAAA,KAAA,CAAA,UAAA,SAAA,KAAA,CAAA,IAAA,gBAAA,CAAA,SAAA,GAAA,GAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA,sBAAA,UAAA,CAAA,EAAA,kBAAA,UAAA,QAAA,EAAA;AACA,wBAAA,KAAA,CAAA,WAAA,GAAA,QAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,UAAA,GAAA,GAAA;AACA,uBAFA,EAEA,UAAA,KAAA,EAAA;AAAA,wBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA;AAAA,uBAFA,EAGA,YAAA;AAAA,wBAAA,KAAA,CAAA,WAAA,GAAA,GAAA;AACA,wBAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA,cAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AAEA,0BAAA,KAAA,CAAA,SAAA,CAAA,IAAA,CAAA,GAAA;;AAGA,8BAAA,SAAA,IAAA,KAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,4BAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,SAAA;AAEA,4BAAA,OAAA,CAAA,GAAA,CAAA,YAAA,KAAA,CAAA,EAAA;;AAEA,gCAAA,KAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AAAA;;AAEA,8BAAA,EAAA,CACA,UADA,CACA,KAAA,CAAA,UADA,EAEA,GAFA,CAEA,KAAA,CAAA,EAFA,EAGA,MAHA,CAGA;AACA,gCAAA,KAAA,EAAA,KAAA,CAAA,QADA;AAEA,gCAAA,QAAA,EAAA,KAAA,CAAA,QAFA;AAGA,gCAAA,QAAA,EAAA,KAAA,CAAA,QAHA;AAIA,gCAAA,IAAA,gBAAA,KAAA,CAAA,IAAA,mDAAA,EAJA;AAKA,gCAAA,IAAA,gBAAA,KAAA,CAAA,IAAA,mDAAA,EALA;AAMA,gCAAA,KAAA,iBAAA,KAAA,CAAA,KAAA,qDAAA,EANA;AAOA,gCAAA,GAAA,eAAA,KAAA,CAAA,GAAA,iDAAA,EAPA;AAQA,gCAAA,MAAA,kBAAA,KAAA,CAAA,MAAA,uDAAA,EARA;AASA,gCAAA,MAAA,qBAAA,KAAA,CAAA,SAAA,6DAAA,EATA;AAUA,gCAAA,QAAA,oBAAA,KAAA,CAAA,QAAA,2DAAA,EAVA;AAWA,gCAAA,GAAA,eAAA,KAAA,CAAA,GAAA,iDAAA,EAXA;AAYA,gCAAA,IAAA,gBAAA,KAAA,CAAA,IAAA,mDAAA,EAZA;AAaA,gCAAA,UAAA,sBAAA,KAAA,CAAA,UAAA,+DAAA,EAbA;AAcA,gCAAA,KAAA,iBAAA,KAAA,CAAA,KAAA,qDAAA,EAdA;AAeA,gCAAA,QAAA,oBAAA,KAAA,CAAA,QAAA,2DAAA;AAfA,+BAHA,EAmBA,IAnBA,CAmBA,UAAA,IAAA,EAAA;AACA,gCAAA,KAAA,CAAA,IAAA;;AACA,gCAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAAA,cAAA;AACA,+BAtBA;AAyBA,6BA3BA,MA2BA;AAAA;;AAEA,8BAAA,EAAA,CACA,UADA,CACA,KAAA,CAAA,UADA,EAEA,GAFA,CAEA;AACA,gCAAA,KAAA,EAAA,KAAA,CAAA,QADA;AAEA,gCAAA,QAAA,EAAA,KAAA,CAAA,QAFA;AAGA,gCAAA,QAAA,EAAA,KAAA,CAAA,QAHA;AAIA,gCAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EAJA;AAKA,gCAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EALA;AAMA,gCAAA,KAAA,kBAAA,KAAA,CAAA,KAAA,uDAAA,EANA;AAOA,gCAAA,GAAA,gBAAA,KAAA,CAAA,GAAA,mDAAA,EAPA;AAQA,gCAAA,MAAA,mBAAA,KAAA,CAAA,MAAA,yDAAA,EARA;AASA,gCAAA,MAAA,sBAAA,KAAA,CAAA,SAAA,+DAAA,EATA;AAUA,gCAAA,QAAA,qBAAA,KAAA,CAAA,QAAA,6DAAA,EAVA;AAWA,gCAAA,GAAA,gBAAA,KAAA,CAAA,GAAA,mDAAA,EAXA;AAYA,gCAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EAZA;AAaA,gCAAA,UAAA,uBAAA,KAAA,CAAA,UAAA,iEAAA,EAbA;AAcA,gCAAA,KAAA,kBAAA,KAAA,CAAA,KAAA,uDAAA,EAdA;AAeA,gCAAA,QAAA,qBAAA,KAAA,CAAA,QAAA,6DAAA;AAfA,+BAFA,EAkBA,IAlBA,CAkBA,UAAA,IAAA,EAAA;AACA,gCAAA,KAAA,CAAA,IAAA;;AACA,gCAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAAA,cAAA;AACA,+BArBA;AAuBA;AACA;;AACA,0BAAA,SAAA,GAhEA,CAiEA;AACA,yBAlEA;AAmEA,uBAvEA;AAnBA;;AAYA,yBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AAAA;AAkFA;AA9FA;AAiGA,iBAjGA,MAiGA;AAEA,sBAAA,KAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AAEA,oBAAA,EAAA,CACA,UADA,CACA,KAAA,CAAA,UADA,EAEA,GAFA,CAEA,KAAA,CAAA,EAFA,EAGA,MAHA,CAGA;AACA,sBAAA,KAAA,EAAA,KAAA,CAAA,QADA;AAEA,sBAAA,QAAA,EAAA,KAAA,CAAA,QAFA;AAGA,sBAAA,QAAA,EAAA,KAAA,CAAA,QAHA;AAIA,sBAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EAJA;AAKA,sBAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EALA;AAMA,sBAAA,KAAA,kBAAA,KAAA,CAAA,KAAA,uDAAA,EANA;AAOA,sBAAA,GAAA,gBAAA,KAAA,CAAA,GAAA,mDAAA,EAPA;AAQA,sBAAA,MAAA,mBAAA,KAAA,CAAA,MAAA,yDAAA,EARA;AASA,sBAAA,MAAA,sBAAA,KAAA,CAAA,SAAA,+DAAA,EATA;AAUA,sBAAA,QAAA,qBAAA,KAAA,CAAA,QAAA,6DAAA,EAVA;AAWA,sBAAA,GAAA,gBAAA,KAAA,CAAA,GAAA,mDAAA,EAXA;AAYA,sBAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EAZA;AAaA,sBAAA,UAAA,uBAAA,KAAA,CAAA,UAAA,iEAAA,EAbA;AAcA,sBAAA,KAAA,kBAAA,KAAA,CAAA,KAAA,uDAAA,EAdA;AAeA,sBAAA,QAAA,qBAAA,KAAA,CAAA,QAAA,6DAAA;AAfA,qBAHA,EAmBA,IAnBA,CAmBA,UAAA,IAAA,EAAA;AACA,sBAAA,KAAA,CAAA,IAAA;AACA,qBArBA;AAuBA,mBAzBA,MAyBA;AAEA,oBAAA,EAAA,CACA,UADA,CACA,KAAA,CAAA,UADA,EAEA,GAFA,CAEA;AACA,sBAAA,KAAA,EAAA,KAAA,CAAA,QADA;AAEA,sBAAA,QAAA,EAAA,KAAA,CAAA,QAFA;AAGA,sBAAA,QAAA,EAAA,KAAA,CAAA,QAHA;AAIA,sBAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EAJA;AAKA,sBAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EALA;AAMA,sBAAA,KAAA,kBAAA,KAAA,CAAA,KAAA,uDAAA,EANA;AAOA,sBAAA,GAAA,gBAAA,KAAA,CAAA,GAAA,mDAAA,EAPA;AAQA,sBAAA,MAAA,mBAAA,KAAA,CAAA,MAAA,yDAAA,EARA;AASA,sBAAA,MAAA,sBAAA,KAAA,CAAA,SAAA,+DAAA,EATA;AAUA,sBAAA,QAAA,qBAAA,KAAA,CAAA,QAAA,6DAAA,EAVA;AAWA,sBAAA,GAAA,gBAAA,KAAA,CAAA,GAAA,mDAAA,EAXA;AAYA,sBAAA,IAAA,iBAAA,KAAA,CAAA,IAAA,qDAAA,EAZA;AAaA,sBAAA,UAAA,uBAAA,KAAA,CAAA,UAAA,iEAAA,EAbA;AAcA,sBAAA,KAAA,kBAAA,KAAA,CAAA,KAAA,uDAAA,EAdA;AAeA,sBAAA,QAAA,qBAAA,KAAA,CAAA,QAAA,6DAAA;AAfA,qBAFA,EAkBA,IAlBA,CAkBA,UAAA,IAAA,EAAA;AACA,sBAAA,KAAA,CAAA,IAAA;AACA,qBApBA;AAsBA;AACA;;AA7KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+KA,KApVA;AAqVA,IAAA,YArVA,0BAqVA;AAAA;;AACA,UAAA,UAAA,GAAA,IAAA,UAAA,EAAA;;AAEA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AAEA,QAAA,UAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,YAAA;AACA,UAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA,UAAA,CAAA,MAAA;AACA,SAFA;AAGA,QAAA,UAAA,CAAA,aAAA,CAAA,KAAA,KAAA;AACA,aAAA,MAAA,GAAA,KAAA,KAAA;AACA,aAAA,YAAA,GAAA,IAAA;AAEA,OATA,MASA;AACA,aAAA,MAAA,GAAA,EAAA;AACA,aAAA,SAAA,GAAA,EAAA;AACA,aAAA,YAAA,GAAA,KAAA;AACA;AAGA,KAxWA;AAyWA,IAAA,QAzWA,sBAyWA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AACA,KA3WA;AA4WA,IAAA,KA5WA,mBA4WA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AACA,KA9WA;AA+WA,IAAA,eA/WA,6BA+WA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,eAAA;AACA,KAjXA;AAkXA,IAAA,WAlXA,uBAkXA,GAlXA,EAkXA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,OAAA,GAAA,UAAA,CAAA,GAAA,CAAA;AAEA,UAAA,GAAA,GAAA,KAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA;AAEA,WAAA,SAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA,GAAA,KAAA,GAAA,KAAA,EAAA;AAEA,MAAA,EAAA,CACA,UADA,CACA,KAAA,UADA,EAEA,GAFA,CAEA,KAAA,EAFA,EAGA,MAHA,CAGA;AACA,QAAA,MAAA,EAAA,KAAA;AADA,OAHA;AAOA,MAAA,KAAA,CAAA,MAAA,GAAA,IAAA,CAAA,YAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,eAAA;AAEA,OAHA,EAGA,KAHA,CAGA,UAAA,KAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,OANA;AASA,KA3YA;AA4YA,IAAA,WA5YA,yBA4YA;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,IAAA,GAAA;AAAA,UAAA,IAAA,EAAA,GAAA;AAAA,UAAA,IAAA,EAAA,SAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,YAAA,GAAA,GAAA,KAAA,MAAA,CAAA,CAAA,CAAA;AACA,aAAA,KAAA,CAAA,WAAA,CAAA,eAAA,CAAA,IAAA,EAAA,GAAA;AACA;;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AAEA,KAtZA;AAuZA,IAAA,aAvZA,yBAuZA,IAvZA,EAuZA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA;AACA;AACA,kBAAA,QAFA,GAEA;AACA,oBAAA,WAAA,EAAA;AADA,mBAFA,EAOA;;AAEA,kBAAA,MAAA,CAAA,YAAA,GAAA,IAAA;AAEA,kBAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AAEA,iBAbA,CAaA,OAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAxaA;AA9FA,CAAA","sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" width=\"1000\">\n    <v-card>\n      <v-card-title class=\"pa-2\">\n        {{ isEdit ? 'Edit News...' : 'Add News' }}\n        <v-spacer></v-spacer>\n        <v-btn icon @click=\"dialog = false\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-card-title>\n\n      <v-divider></v-divider>\n\n      <!-- task form -->\n\n  <h2>CAFFE Clothing</h2>\n\n\n    <h2>{{codePrefix+' '+code}}</h2>\n\n\n\n  <v-row>\n    <v-col\n      v-for=\"anImage in imageUrls\" v-bind:key=\"anImage.id\"\n      class=\"d-flex child-flex\"\n      cols=\"4\"\n    >\n      <v-img\n        :src=\"anImage\"\n        aspect-ratio=\"1\"\n        class=\"grey lighten-2\"\n      >\n      <span  @click=\"deleteImage(anImage)\">X</span>\n        <template v-slot:placeholder>\n          <v-row\n            class=\"fill-height ma-0\"\n            align=\"center\"\n            justify=\"center\"\n          >\n            <v-progress-circular\n              indeterminate\n              color=\"grey lighten-5\"\n            ></v-progress-circular>\n          </v-row>\n        </template>\n      </v-img>\n    </v-col>\n  </v-row>\n\n<v-dialog v-model=\"loading\" fullscreen full-width>\n  <v-container fluid fill-height style=\"background-color: rgba(255, 255, 255, 0.5);\">\n    <v-layout justify-center align-center>\n      <v-progress-circular\n        indeterminate\n        color=\"primary\">\n      </v-progress-circular>\n    </v-layout>\n  </v-container>\n</v-dialog>\n\n\n      <v-divider></v-divider>\n <!-- @vdropzone-mounted=\"dropMounted\" -->\n  <vue-dropzone id=\"imgDropzone\" ref=\"imgDropzone\" :options=\"dropzoneOptions\" @vdropzone-complete=\"afterComplete\"></vue-dropzone>\n\n\n      <v-card-actions class=\"pa-2\">\n        <v-btn outlined @click=\"close\">{{ $t('common.cancel') }}</v-btn>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"post\">UPLOAD PHOTOS</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\n\n/*\n|---------------------------------------------------------------------\n| TODO Compose Component\n|---------------------------------------------------------------------\n|\n| Compose new tasks editor\n*/\nimport moment from 'moment'\nimport { db } from '../../../main'\nimport firebase from 'firebase'\nimport vue2Dropzone from 'vue2-dropzone'\nimport \"vue2-dropzone/dist/vue2Dropzone.min.css\"\nexport default {\n  components: {\n    vueDropzone: vue2Dropzone\n  },\n  data () {\n    return {\n      dropzoneOptions: {\n        url: \"https://httpbin.org/post\",\n        thumbnailWidth: 250,\n        thumbnailHeight: 250,\n        addRemoveLinks: true,\n        acceptedFiles: \".jpg, .jpeg, .png\"\n      },\n      dialog: false,\n      loading:true,\n      title: '',\n      time: '',\n      likes:[],\n      shares:0,\n      events:[],\n      codePrefix:'',\n      incidentDate:'',\n      foundEvents:[],\n      show:true,\n      iAmEditing:false,\n      taskLabels: [],\n      search: null,\n      id:'',\n      valid: true,\n      files:[],\n      imageRaw:null,\n      receivedUrl:'',\n      imageUrl:'',\n      imageUrls:[],\n      title: '',\n      sortDate:'',\n      author:'',\n      code:'',\n      category:'infant',\n      user:'iris',\n      size:'',\n      age:'',\n      colour:'',\n      material:'',\n      qty:'',\n      price:'',\n      codeRules: [\n        (v) => !!v || 'Code is required',\n        (v) => (v && v.length <= 80) || 'Code must be less than 8 characters'\n      ],\n      titleRules: [\n        (v) => !!v || 'Title is required',\n        (v) => (v && v.length <= 80) || 'Title must be less than 80 characters'\n      ],\n      sizeRules: [\n        (v) => (v && v.length <= 80) || 'Size must be less than 80 characters'\n      ],\n      ageRules: [\n        (v) => (v && v.length <= 100) || 'Age must be less than 100 characters'\n      ],\n      colourRules: [\n        (v) => (v && v.length <= 100) || 'Colour must be less than 100 characters'\n      ],\n      materialRules: [\n        (v) => (v && v.length <= 100) || 'Material must be less than 100 characters'\n      ],\n      qtyRules: [\n        (v) => !!v || 'Quantity is required',\n        (v) => (v && v.length <= 100) || 'Quantity must be less than 100 characters'\n      ],\n      priceRules: [\n        (v) => !!v || 'Price is required',\n        (v) => (v && v.length <= 100) || 'Price must be less than 100 characters'\n      ],\n      select: null,\n      checkbox: false,\n      imageChanged:false\n\n    }\n  },\n  computed: {\n    ...mapState('newsfeed-app', ['newsfeedlabels']),\n    isEdit() {\n      if (this.id!=null){\n        console.log(this.id)\n        if (this.id==''){\n          return false\n        }else{\n          return true\n        }\n      }\n\n    }\n  },\n  methods: {\n    ...mapMutations('newsfeed-app', ['updateNewsfeed', 'addNewsfeed']),\n    open(task, editing) {\n      console.log('OPEN')\n      if (task) {\n        this.task = task\n        this.iAmEditing = true\n        this.code = this.task.code\n        this.id = this.task.id\n        this.complete = this.task.complete\n        this.title = this.task.title\n        this.age = this.task.age\n        this.size = this.task.size\n        this.colour = this.task.colour\n        this.material = this.task.material\n        this.qty = this.task.qty\n        this.price = this.task.price\n        this.codePrefix = this.task.codePrefix\n        this.images = this.task.images\n        this.taskLabels = this.task.labels\n        this.imageUrls = this.task.images\n        this.sortDate = this.task.sortDate\n        this.category = this.task.category\n        this.user = this.task.user\n      } else {\n        this.iAmEditing = false\n        this.id = ''\n        this.category = 'infant'\n        this.user='iris'\n        this.code = ''\n        this.complete = false\n        this.codePrefix = 'i'\n        this.title = ''\n        this.age = ''\n        this.size = ''\n        this.colour = ''\n        this.material = ''\n        this.qty = ''\n        this.price = ''\n        this.images = []\n        this.taskLabels = []\n        this.imageUrls = []\n        this.sortDate = 0\n      }\n\n      this.dialog = true\n    },\n    close() {\n      this.dialog = false\n    },\n    save() {\n      const {category, title, code, size, age, taskLabels, imageUrls, id,\n        colour, material, qty, price, complete, user, codePrefix, sortDate } = this\n\n      const taskEdit = {\n        title,\n        sortDate,\n        category,\n        code,\n        size,\n        age,\n        id,\n        colour,\n        material,\n        qty,\n        price,\n        complete,\n        user,\n        codePrefix,\n        images: imageUrls,\n        label: [category],\n\n      }\n\n      if (this.iAmEditing == true) {\n        this.updateNewsfeed({\n          ...this.task,\n          ...taskEdit\n        })\n      } else {\n        console.log ('PASS URL '+sortDate)\n        const taskNew = {\n        sortDate,\n        category,\n        code,\n        title,\n        size,\n        age,\n        id,\n        colour,\n        material,\n        qty,\n        price,\n        complete,\n        user,\n        codePrefix,\n        images: imageUrls,\n        label: [category],\n      }\n        this.addNewsfeed(taskNew)\n      }\n      //this.resetValidation()\n      this.close()\n    },\n\n    randomNumber (){\n      return Math.floor(Math.random() * (999)) + 1;\n    },\n    selectPrefix(){\n      if (this.user=='iris'){\n        switch (this.category) {\n          case 'infant':\n            this.codePrefix='i'\n            break;\n          case 'boys':\n            this.codePrefix='b'\n            break;\n          case 'girls':\n            this.codePrefix='g'\n            break;\n          case 'women':\n            this.codePrefix='w'\n            break;\n          case 'men':\n            this.codePrefix='m'\n            break;\n          default:\n            break;\n        }\n      }else{\n        switch (this.category) {\n          case 'infant':\n            this.codePrefix='vi'\n            break;\n          case 'boys':\n            this.codePrefix='vb'\n            break;\n          case 'girls':\n            this.codePrefix='vg'\n            break;\n          case 'women':\n            this.codePrefix='vw'\n            break;\n          case 'men':\n            this.codePrefix='vm'\n            break;\n          default:\n            break;\n      }\n      }\n\n    },\n\n    filter (item, queryText, itemText) {\n      const hasValue = (val) => val !== null ? val : ''\n\n      const text = hasValue(item.title)\n      const query = hasValue(queryText)\n\n      return text.toString()\n        .toLowerCase()\n        .indexOf(query.toString().toLowerCase()) > -1\n    },\n\n\n    async post () {\n\n      if (this.iAmEditing==false){\n      const unix = Date.now()\n\n      this.sortDate = unix\n\n      //this.id = this.sortDate.toString()\n\n      const theDate = moment(unix).format('Do MMM YY')\n\n      this.time = firebase.firestore.Timestamp.fromDate(new Date())\n\n      this.taskLabels=[]\n      this.taskLabels.push(this.postType)\n\n      }else{\n\n        this.taskLabels=[]\n        this.taskLabels.push(this.postType)\n\n        console.log('doc id '+this.id)\n      }\n\n      if (this.imageChanged){\n\n\n\n\n\n      const uniqueTime = new Date().getTime()\n\n      this.images = this.$refs.imgDropzone.getAcceptedFiles()\n\n      let photoDone=0\n\n      for (var i=0; i<this.images.length; i++){\n\n        let imgName = this.images[i].name\n\n        let ext = imgName.slice(imgName.lastIndexOf('.'))\n\n      const storageRef=firebase.storage().ref(`clothes/${this.user}/${this.codePrefix}/${uniqueTime}/${this.codePrefix}${this.code}---${i}${ext}`).put(this.images[i]);\n        storageRef.on(`state_changed`,snapshot=>{\n        this.uploadValue = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\n          }, error=>{console.log(error.message)},\n        ()=>{this.uploadValue=100;\n            storageRef.snapshot.ref.getDownloadURL().then((url)=>{\n\n              this.imageUrls.push(url)\n\n\n              if (photoDone==this.images.length-1){\n                  console.log(this.imageUrls)\n\n                  console.log('got id '+this.id)\n\n                  if (this.id != ''){\n\n                  db\n                  .collection(this.codePrefix)\n                  .doc(this.id)\n                  .update({\n                    label: this.category,\n                    category: this.category,\n                    sortDate : this.sortDate,\n                    code: this.code ??'',\n                    size: this.size ??'',\n                    title: this.title ??'',\n                    age: this.age ??'',\n                    colour: this.colour ??'',\n                    images: this.imageUrls ??[],\n                    material:this.material ??'',\n                    qty:this.qty ??'',\n                    user:this.user ??'',\n                    codePrefix: this.codePrefix ??'',\n                    price:this.price ??'',\n                    complete:this.complete ?? false\n                  }).then((done)=>{\n                    this.save()\n                    this.$refs.imgDropzone.removeAllFiles()\n                  })\n\n\n                  }else{\n\n                  db\n                  .collection(this.codePrefix)\n                  .add({\n                    label: this.category,\n                    category: this.category,\n                    sortDate : this.sortDate,\n                    code: this.code ??'',\n                    size: this.size ??'',\n                    title: this.title ??'',\n                    age: this.age ??'',\n                    colour: this.colour ??'',\n                    images: this.imageUrls ??[],\n                    material:this.material ??'',\n                    qty:this.qty ??'',\n                    user:this.user ??'',\n                    codePrefix: this.codePrefix ??'',\n                    price:this.price ??'',\n                    complete:this.complete ?? false\n                  }).then((done)=>{\n                    this.save()\n                    this.$refs.imgDropzone.removeAllFiles()\n                  })\n\n                }\n              }\n              photoDone++\n              //this.save()\n              });\n            }\n\n          );\n\n      }\n\n\n      } else {\n\n                  if (this.id != ''){\n\n                  db\n                  .collection(this.codePrefix)\n                  .doc(this.id)\n                  .update({\n                    label: this.category,\n                    category: this.category,\n                    sortDate : this.sortDate,\n                    code: this.code ??'',\n                    size: this.size ??'',\n                    title: this.title ??'',\n                    age: this.age ??'',\n                    colour: this.colour ??'',\n                    images: this.imageUrls ??[],\n                    material:this.material ??'',\n                    qty:this.qty ??'',\n                    user:this.user ??'',\n                    codePrefix: this.codePrefix ??'',\n                    price:this.price ??'',\n                    complete:this.complete ?? false\n                  }).then((done)=>{\n                    this.save()\n                  })\n\n                  }else{\n\n                  db\n                  .collection(this.codePrefix)\n                  .add({\n                    label: this.category,\n                    category: this.category,\n                    sortDate : this.sortDate,\n                    code: this.code ??'',\n                    size: this.size ??'',\n                    title: this.title ??'',\n                    age: this.age ??'',\n                    colour: this.colour ??'',\n                    images: this.imageUrls ??[],\n                    material:this.material ??'',\n                    qty:this.qty ??'',\n                    user:this.user ??'',\n                    codePrefix: this.codePrefix ??'',\n                    price:this.price ??'',\n                    complete:this.complete ?? false\n                  }).then((done)=>{\n                    this.save()\n                  })\n\n                }\n      }\n\n    },\n    imagePreview() {\n      const fileReader = new FileReader()\n\n      if (this.files.length>0){\n\n      fileReader.addEventListener('load',() => {\n        this.imageUrls.push(fileReader.result)\n      })\n      fileReader.readAsDataURL(this.files)\n      this.images = this.files\n      this.imageChanged = true\n\n      }else{\n        this.images=[]\n        this.imageUrls=[]\n        this.imageChanged = false\n      }\n\n\n    },\n    validate () {\n      this.$refs.form.validate()\n    },\n    reset () {\n      this.$refs.form.reset()\n    },\n    resetValidation () {\n      this.$refs.form.resetValidation()\n    },\n    deleteImage (img) {\n     let image = firebase.storage().refFromURL(img);\n\n     var ind = this.imageUrls.indexOf(img);\n\n      this.imageUrls.splice(ind,1);\n\n        console.log (this.codePrefix+'   '+this.id)\n\n          db\n          .collection(this.codePrefix)\n          .doc(this.id)\n          .update({\n            images: this.imageUrls,\n          })\n\n        image.delete().then(function() {\n          console.log('image deleted');\n\n        }).catch(function(error) {\n          // Uh-oh, an error occurred!\n          console.log('an error occurred');\n        });\n\n\n    },\n    dropMounted () {\n\n      for (var p=0; p<this.images.length; p++){\n        var file = { size: 123, name: 'Icon'+p, type: 'image/png' };\n        var url = this.images[p];\n        this.$refs.imgDropzone.manuallyAddFile(file, url);\n      }\n\n      console.log('drop mounted')\n\n    },\n    async afterComplete(file) {\n      try {\n        //const imageName = uuid.v1();\n        var metaData = {\n          contentType: \"image/png\"\n        }\n\n\n      //this.images = this.$refs.imgDropzone.getAcceptedFiles()\n\n       this.imageChanged = true\n\n      console.log ('image done')\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n}\n</script>\n"],"sourceRoot":"src/apps/clothesread/components"}]}