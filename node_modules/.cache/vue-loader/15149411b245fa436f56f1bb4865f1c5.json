{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/apps/chat/components/ChannelMessage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/apps/chat/components/ChannelMessage.vue","mtime":1597249840000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qCnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KfCBDaGFubmVsIE1lc3NhZ2UgQ29tcG9uZW50CnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KfAp8IERpc3BsYXkgbWVzc2FnZXMgaW4gY2hhbm5lbCB3aXRoIHVzZXIgaW5mb3JtYXRpb24gYW5kIHRpbWVzdGFtcAp8CiovCmltcG9ydCBVc2VyQXZhdGFyIGZyb20gJy4vVXNlckF2YXRhcicKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBVc2VyQXZhdGFyCiAgfSwKICBwcm9wczogewogICAgLy8gQ3VycmVudCBsb2dnZWQgdXNlcgogICAgdXNlcjogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHt9CiAgICB9LAogICAgLy8gTWVzc2FnZSB0byBkaXNwbGF5CiAgICBtZXNzYWdlOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIENoZWNrIGlmIGl0J3MgYSBtZXNzYWdlIGZyb20gdGhlIGxvZ2dlZCB1c2VyCiAgICBpc093bk1lc3NhZ2UoKSB7CiAgICAgIHJldHVybiB0aGlzLnVzZXIuaWQgPT09IHRoaXMubWVzc2FnZS51c2VyLmlkCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ChannelMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChannelMessage.vue","sourceRoot":"src/apps/chat/components","sourcesContent":["<template>\n  <div class=\"d-flex flex-grow-1\" :class=\"{ 'flex-row-reverse': isOwnMessage}\">\n    <user-avatar :user=\"message.user\" />\n\n    <div class=\"mx-2\">\n      <v-tooltip bottom>\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-card\n            class=\"pa-1\"\n            :class=\"{ 'primary darken-1': isOwnMessage}\"\n            :dark=\"isOwnMessage\"\n            v-bind=\"attrs\"\n            v-on=\"on\"\n          >\n            <div class=\"font-weight-bold\">{{ message.text }}</div>\n          </v-card>\n        </template>\n        <span>{{ message.timestamp | formatDate('lll') }}</span>\n      </v-tooltip>\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n|---------------------------------------------------------------------\n| Channel Message Component\n|---------------------------------------------------------------------\n|\n| Display messages in channel with user information and timestamp\n|\n*/\nimport UserAvatar from './UserAvatar'\n\nexport default {\n  components: {\n    UserAvatar\n  },\n  props: {\n    // Current logged user\n    user: {\n      type: Object,\n      default: () => {}\n    },\n    // Message to display\n    message: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  computed: {\n    // Check if it's a message from the logged user\n    isOwnMessage() {\n      return this.user.id === this.message.user.id\n    }\n  }\n}\n</script>\n"]}]}