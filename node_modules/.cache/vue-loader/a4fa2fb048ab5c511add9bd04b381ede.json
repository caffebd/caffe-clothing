{"remainingRequest":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luke/Documents/VUE/bt-starter/src/apps/board/pages/BoardPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luke/Documents/VUE/bt-starter/src/apps/board/pages/BoardPage.vue","mtime":1597249840000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luke/Documents/VUE/bt-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JwppbXBvcnQgVnVlRHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZScKaW1wb3J0IEJvYXJkQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0JvYXJkQ2FyZCcKCi8qCnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KfCBCb2FyZCBQYWdlCnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KfAp8IEthbmJhbiBib2FyZCBwYWdlIGNvbXBvbmVudCB3aXRoIHRoZSBsb2dpYyB0byBkaXNwbGF5IGFuZCBtYW5hZ2UKfCBjYXJkcwp8CiovCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBWdWVEcmFnZ2FibGUsCiAgICBCb2FyZENhcmQKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyB0aW1lIGluIG1pbGxpc2Vjb25kcyB0byBkZWZpbmUgd2hlbiB0aGUgc29ydGluZyBzaG91bGQgc3RhcnQKICAgICAgc29ydERlbGF5OiAwLAoKICAgICAgLy8gYm9hcmQgc3RhdGVzCiAgICAgIHN0YXRlczogWydUT0RPJywgJ0lOUFJPR1JFU1MnLCAnVEVTVElORycsICdET05FJ10sCiAgICAgIGNvbHVtbnM6IFtdLAoKICAgICAgLy8gZWRpdCB2YXJpYWJsZXMKICAgICAgZWRpdERpYWxvZzogZmFsc2UsCiAgICAgIGNhcmRUb0VkaXQ6IG51bGwsCiAgICAgIHRpdGxlOiAnJywKICAgICAgZGVzY3JpcHRpb246ICcnLAoKICAgICAgLy8gZGVsZXRlIHZhcmlhYmxlcwogICAgICBkZWxldGVEaWFsb2c6IGZhbHNlLAogICAgICBjYXJkVG9EZWxldGU6IG51bGwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZSgnYm9hcmQtYXBwJywgWydjYXJkcyddKSwKICAgIGRyYWdPcHRpb25zKCkgewogICAgICByZXR1cm4gewogICAgICAgIGFuaW1hdGlvbjogMjAwLAogICAgICAgIGdyb3VwOiAnZGVzY3JpcHRpb24nLAogICAgICAgIGRpc2FibGVkOiBmYWxzZSwKICAgICAgICBnaG9zdENsYXNzOiAnZ2hvc3QnCiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjYXJkczogZnVuY3Rpb24odmFsKSB7CiAgICAgIHJldHVybiB0aGlzLnBhcnNlKHZhbCkKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICAvLyBwcmVwYXJlIHRoZSBjb2x1bW5zIGJhc2VkIG9uIHRoZSBzdGF0ZXMgYXZhaWxhYmxlCiAgICB0aGlzLnN0YXRlcy5mb3JFYWNoKChzdGF0ZSwgaW5kZXgpID0+IHsKICAgICAgdGhpcy5jb2x1bW5zLnB1c2goewogICAgICAgIGtleTogc3RhdGUsCiAgICAgICAgY2FyZHM6IFtdLAogICAgICAgIGlzQWRkVmlzaWJsZTogZmFsc2UsCiAgICAgICAgY2FsbGJhY2s6IChldnQpID0+IHRoaXMuY2hhbmdlU3RhdGUoZXZ0LCBpbmRleCkKICAgICAgfSkKICAgIH0pCgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuaGFuZGxlUmVzaXplKQogICAgdGhpcy5oYW5kbGVSZXNpemUoKQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHJldHVybiB0aGlzLnBhcnNlKHRoaXMuY2FyZHMpCiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBNdXRhdGlvbnMoJ2JvYXJkLWFwcCcsIFsnYWRkQ2FyZCcsICd1cGRhdGVDYXJkJywgJ3VwZGF0ZU9yZGVyJywgJ2RlbGV0ZUNhcmQnXSksCiAgICAvLyBBc3NpZ24gY2FyZHMgdG8gdGhlIHJlc3BlY3RpdmUgY29sdW1uIGJhc2VkIG9uIHRoZSBzdGF0ZQogICAgcGFyc2UoY2FyZHMpIHsKICAgICAgaWYgKCFjYXJkcykgcmV0dXJuIHRoaXMuY29sdW1ucy5tYXAoKGNvbCkgPT4gKGNvbC5jYXJkcyA9IFtdKSkKCiAgICAgIHJldHVybiB0aGlzLmNvbHVtbnMuZm9yRWFjaCgoY29sKSA9PiB7CiAgICAgICAgY29sLmNhcmRzID0gY2FyZHMKICAgICAgICAgIC5maWx0ZXIoKGNhcmQpID0+IGNhcmQuc3RhdGUgPT09IGNvbC5rZXkpCiAgICAgICAgICAuc29ydCgoYSwgYikgPT4gYS5vcmRlciA8IGIub3JkZXIgPyAtMSA6IDApCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlUmVzaXplKCkgewogICAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCA5MDApIHsKICAgICAgICB0aGlzLnNvcnREZWxheSA9IDIwMAogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc29ydERlbGF5ID0gMAogICAgICB9CiAgICB9LAogICAgY2hhbmdlU3RhdGU6IGZ1bmN0aW9uKGV2dCwgY29sSW5kZXgpIHsKICAgICAgaWYgKGV2dC5hZGRlZCB8fCBldnQubW92ZWQpIHsKICAgICAgICBjb25zdCBjb2x1bW4gPSB0aGlzLmNvbHVtbnNbY29sSW5kZXhdCiAgICAgICAgY29uc3Qgc3RhdGUgPSBjb2x1bW4ua2V5CgogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29sdW1uLmNhcmRzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBjb2x1bW4uY2FyZHNbaV0ub3JkZXIgPSBpCiAgICAgICAgICBjb2x1bW4uY2FyZHNbaV0uc3RhdGUgPSBzdGF0ZQogICAgICAgIH0KCiAgICAgICAgdGhpcy5fdXBkYXRlT3JkZXIoKQogICAgICB9CiAgICB9LAogICAgc2hvd0VkaXQoY2FyZCkgewogICAgICB0aGlzLmNhcmRUb0VkaXQgPSBjYXJkCiAgICAgIHRoaXMudGl0bGUgPSBjYXJkLnRpdGxlCiAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBjYXJkLmRlc2NyaXB0aW9uCiAgICAgIHRoaXMuZWRpdERpYWxvZyA9IHRydWUKICAgIH0sCiAgICBzYXZlKCkgewogICAgICB0aGlzLnVwZGF0ZUNhcmQoewogICAgICAgIC4uLnRoaXMuY2FyZFRvRWRpdCwKICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbgogICAgICB9KQoKICAgICAgdGhpcy5lZGl0RGlhbG9nID0gZmFsc2UKICAgIH0sCiAgICBzaG93RGVsZXRlKGNhcmQpIHsKICAgICAgdGhpcy5jYXJkVG9EZWxldGUgPSBjYXJkCiAgICAgIHRoaXMuZGVsZXRlRGlhbG9nID0gdHJ1ZQogICAgfSwKICAgIF9kZWxldGVDYXJkKCkgewogICAgICB0aGlzLmRlbGV0ZURpYWxvZyA9IGZhbHNlCiAgICAgIHRoaXMuZGVsZXRlQ2FyZCh0aGlzLmNhcmRUb0RlbGV0ZSkKICAgIH0sCiAgICBfYWRkQ2FyZChjb2x1bW4pIHsKICAgICAgY29uc3QgeyBhZGRUaXRsZSwga2V5IH0gPSBjb2x1bW4KCiAgICAgIHRoaXMuYWRkQ2FyZCh7CiAgICAgICAgc3RhdGU6IGtleSwKICAgICAgICB0aXRsZTogYWRkVGl0bGUsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIG9yZGVyOiAtMQogICAgICB9KQoKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2x1bW4uY2FyZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb2x1bW4uY2FyZHNbaV0ub3JkZXIgPSBpCiAgICAgIH0KCiAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuX3VwZGF0ZU9yZGVyKQoKICAgICAgY29sdW1uLmFkZFRpdGxlID0gJycKICAgIH0sCiAgICBfdXBkYXRlT3JkZXIoKSB7CiAgICAgIGxldCBjYXJkcyA9IFtdCgogICAgICB0aGlzLmNvbHVtbnMuZm9yRWFjaCgoY29sKSA9PiB7CiAgICAgICAgY2FyZHMgPSBbCiAgICAgICAgICAuLi5jYXJkcywKICAgICAgICAgIC4uLmNvbC5jYXJkcwogICAgICAgIF0KICAgICAgfSkKCiAgICAgIHRoaXMudXBkYXRlT3JkZXIoY2FyZHMpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["BoardPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"BoardPage.vue","sourceRoot":"src/apps/board/pages","sourcesContent":["<template>\n  <div class=\"board d-flex flex-grow-1 flex-row\">\n\n    <!-- board column -->\n    <div v-for=\"column in columns\" :key=\"column.key\" class=\"board-column pa-2\">\n      <h5>{{ $t(`board.state.${column.key}`) }}</h5>\n      <div class=\"board-column-actions\">\n        <v-btn icon small color=\"primary\" @click=\"column.isAddVisible = !column.isAddVisible\">\n          <v-icon>mdi-plus</v-icon>\n        </v-btn>\n      </div>\n\n      <!-- add new card form -->\n      <v-card v-show=\"column.isAddVisible\" class=\"pa-2 my-2\">\n        <v-text-field\n          v-model=\"column.addTitle\"\n          :label=\"$t('common.title')\"\n          :placeholder=\"$t('board.titlePlaceholder')\"\n          autofocus\n          @keyup.enter=\"_addCard(column)\"\n          @keyup.esc=\"column.isAddVisible = false\"\n        ></v-text-field>\n        <div class=\"d-flex flex-md-row flex-column\">\n          <v-btn class=\"flex-grow-1 ma-1\" small @click=\"column.isAddVisible = !column.isAddVisible\">{{ $t('common.cancel') }}</v-btn>\n          <v-btn class=\"flex-grow-1 ma-1\" small color=\"primary\" @click=\"addCard(column)\">{{ $t('common.add') }}</v-btn>\n        </div>\n      </v-card>\n\n      <!-- draggable cards -->\n      <vue-draggable\n        v-model=\"column.cards\"\n        :delay=\"sortDelay\"\n        v-bind=\"dragOptions\"\n        animation=\"250\"\n        class=\"board-group\"\n        group=\"cardsGroup\"\n        @change=\"column.callback\"\n      >\n        <board-card\n          v-for=\"card in column.cards\"\n          :key=\"card.id\"\n          :card=\"card\"\n          class=\"board-item my-2 pa-2\"\n          @delete=\"showDelete(card)\"\n          @edit=\"showEdit(card)\"\n        />\n      </vue-draggable>\n\n    </div>\n\n    <!-- edit card dialog -->\n    <v-dialog v-model=\"editDialog\" width=\"600\">\n      <v-card>\n        <v-card-title class=\"pa-2\">\n          <span>{{ $t('board.editCard') }}</span>\n          <v-spacer></v-spacer>\n          <v-btn icon @click=\"editDialog = false\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-card-title>\n\n        <v-divider></v-divider>\n\n        <div>\n          <v-text-field\n            v-model=\"title\"\n            class=\"px-2 py-1\"\n            solo\n            flat\n            :placeholder=\"$t('common.title')\"\n            autofocus\n            hide-details\n            @keyup.enter=\"save\"\n          ></v-text-field>\n\n          <v-divider></v-divider>\n\n          <v-textarea\n            v-model=\"description\"\n            class=\"px-2 py-1\"\n            solo\n            flat\n            :placeholder=\"$t('common.description')\"\n            hide-details\n          ></v-textarea>\n        </div>\n\n        <v-divider></v-divider>\n\n        <v-card-actions class=\"pa-2\">\n          <v-btn outlined @click=\"editDialog = false\">{{ $t('common.cancel') }}</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click=\"save\">{{ $t('common.save') }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- delete card dialog -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"290\">\n      <v-card>\n        <v-card-title class=\"headline\">{{ $t('common.delete') }}</v-card-title>\n        <v-card-text>{{ $t('board.deleteDescription') }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn @click=\"deleteDialog = false\">{{ $t('common.cancel') }}</v-btn>\n          <v-btn color=\"error\" @click=\"_deleteCard()\">{{ $t('common.delete') }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport VueDraggable from 'vuedraggable'\nimport BoardCard from '../components/BoardCard'\n\n/*\n|---------------------------------------------------------------------\n| Board Page\n|---------------------------------------------------------------------\n|\n| Kanban board page component with the logic to display and manage\n| cards\n|\n*/\nexport default {\n  components: {\n    VueDraggable,\n    BoardCard\n  },\n  data() {\n    return {\n      // time in milliseconds to define when the sorting should start\n      sortDelay: 0,\n\n      // board states\n      states: ['TODO', 'INPROGRESS', 'TESTING', 'DONE'],\n      columns: [],\n\n      // edit variables\n      editDialog: false,\n      cardToEdit: null,\n      title: '',\n      description: '',\n\n      // delete variables\n      deleteDialog: false,\n      cardToDelete: null\n    }\n  },\n  computed: {\n    ...mapState('board-app', ['cards']),\n    dragOptions() {\n      return {\n        animation: 200,\n        group: 'description',\n        disabled: false,\n        ghostClass: 'ghost'\n      }\n    }\n  },\n  watch: {\n    cards: function(val) {\n      return this.parse(val)\n    }\n  },\n  created() {\n    // prepare the columns based on the states available\n    this.states.forEach((state, index) => {\n      this.columns.push({\n        key: state,\n        cards: [],\n        isAddVisible: false,\n        callback: (evt) => this.changeState(evt, index)\n      })\n    })\n\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize()\n  },\n  mounted() {\n    return this.parse(this.cards)\n  },\n  methods: {\n    ...mapMutations('board-app', ['addCard', 'updateCard', 'updateOrder', 'deleteCard']),\n    // Assign cards to the respective column based on the state\n    parse(cards) {\n      if (!cards) return this.columns.map((col) => (col.cards = []))\n\n      return this.columns.forEach((col) => {\n        col.cards = cards\n          .filter((card) => card.state === col.key)\n          .sort((a, b) => a.order < b.order ? -1 : 0)\n      })\n    },\n    handleResize() {\n      if (window.innerWidth < 900) {\n        this.sortDelay = 200\n      } else {\n        this.sortDelay = 0\n      }\n    },\n    changeState: function(evt, colIndex) {\n      if (evt.added || evt.moved) {\n        const column = this.columns[colIndex]\n        const state = column.key\n\n        for (let i = 0; i < column.cards.length; i++) {\n          column.cards[i].order = i\n          column.cards[i].state = state\n        }\n\n        this._updateOrder()\n      }\n    },\n    showEdit(card) {\n      this.cardToEdit = card\n      this.title = card.title\n      this.description = card.description\n      this.editDialog = true\n    },\n    save() {\n      this.updateCard({\n        ...this.cardToEdit,\n        title: this.title,\n        description: this.description\n      })\n\n      this.editDialog = false\n    },\n    showDelete(card) {\n      this.cardToDelete = card\n      this.deleteDialog = true\n    },\n    _deleteCard() {\n      this.deleteDialog = false\n      this.deleteCard(this.cardToDelete)\n    },\n    _addCard(column) {\n      const { addTitle, key } = column\n\n      this.addCard({\n        state: key,\n        title: addTitle,\n        description: '',\n        order: -1\n      })\n\n      for (let i = 0; i < column.cards.length; i++) {\n        column.cards[i].order = i\n      }\n\n      this.$nextTick(this._updateOrder)\n\n      column.addTitle = ''\n    },\n    _updateOrder() {\n      let cards = []\n\n      this.columns.forEach((col) => {\n        cards = [\n          ...cards,\n          ...col.cards\n        ]\n      })\n\n      this.updateOrder(cards)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.ghost {\n  opacity: 0.5;\n  background: var(--v-primary-lighten1) !important;\n}\n\n.board {\n  display: flex;\n  overflow-x: scroll;\n\n  .board-column {\n    position: relative;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    min-width: 180px;\n\n    &-actions {\n      position: absolute;\n      top: 12px;\n      right: 6px;\n    }\n  }\n\n  .board-group {\n    min-height: 100%;\n  }\n\n  .board-item {\n    position: relative;\n    min-height: 54px;\n    transition: transform 0.2s;\n    cursor: pointer;\n\n    > a {\n      display: block;\n      padding: 8px;\n    }\n\n    &:hover {\n      transform: translateY(-6px);\n    }\n\n    &.sortable-chosen {\n      cursor: all-scroll;\n    }\n  }\n}\n\n.v-application--is-rtl {\n  .board-column-actions {\n    left: 6px;\n    right: auto;\n  }\n}\n</style>\n"]}]}